export const data = {
  "key": "v-753554b4",
  "path": "/node_modules/plop/",
  "title": "Plop",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "What is Plop?",
      "slug": "what-is-plop",
      "children": []
    },
    {
      "level": 2,
      "title": "Installation",
      "slug": "installation",
      "children": [
        {
          "level": 3,
          "title": "1. Add plop to your project",
          "slug": "_1-add-plop-to-your-project",
          "children": []
        },
        {
          "level": 3,
          "title": "2. Install plop globally (optional, but recommended for easy access)",
          "slug": "_2-install-plop-globally-optional-but-recommended-for-easy-access",
          "children": []
        },
        {
          "level": 3,
          "title": "3. Create a plopfile.js at the root of your project",
          "slug": "_3-create-a-plopfile-js-at-the-root-of-your-project",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Your First Plopfile",
      "slug": "your-first-plopfile",
      "children": []
    },
    {
      "level": 2,
      "title": "Using Prompts",
      "slug": "using-prompts",
      "children": []
    },
    {
      "level": 2,
      "title": "CLI Usage",
      "slug": "cli-usage",
      "children": [
        {
          "level": 3,
          "title": "Bypassing Prompts",
          "slug": "bypassing-prompts",
          "children": []
        },
        {
          "level": 3,
          "title": "Bypassing Prompts (by Name)",
          "slug": "bypassing-prompts-by-name",
          "children": []
        },
        {
          "level": 3,
          "title": "Running a Generator Forcefully",
          "slug": "running-a-generator-forcefully",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Why Generators?",
      "slug": "why-generators",
      "children": []
    },
    {
      "level": 2,
      "title": "TypeScript Declarations",
      "slug": "typescript-declarations",
      "children": []
    },
    {
      "level": 2,
      "title": "Main Methods",
      "slug": "main-methods",
      "children": []
    },
    {
      "level": 2,
      "title": "setHelper",
      "slug": "sethelper",
      "children": []
    },
    {
      "level": 2,
      "title": "setPartial",
      "slug": "setpartial",
      "children": []
    },
    {
      "level": 2,
      "title": "setActionType",
      "slug": "setactiontype",
      "children": [
        {
          "level": 3,
          "title": "FunctionSignature Custom Action",
          "slug": "functionsignature-custom-action",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "setPrompt",
      "slug": "setprompt",
      "children": []
    },
    {
      "level": 2,
      "title": "setGenerator",
      "slug": "setgenerator",
      "children": [
        {
          "level": 3,
          "title": "Interface GeneratorConfig",
          "slug": "interface-generatorconfig",
          "children": []
        },
        {
          "level": 3,
          "title": "Interface PlopGenerator",
          "slug": "interface-plopgenerator",
          "children": []
        },
        {
          "level": 3,
          "title": "Interface ActionConfig",
          "slug": "interface-actionconfig",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Other Methods",
      "slug": "other-methods",
      "children": []
    },
    {
      "level": 2,
      "title": "Add",
      "slug": "add",
      "children": []
    },
    {
      "level": 2,
      "title": "AddMany",
      "slug": "addmany",
      "children": []
    },
    {
      "level": 2,
      "title": "Modify",
      "slug": "modify",
      "children": []
    },
    {
      "level": 2,
      "title": "Append",
      "slug": "append",
      "children": []
    },
    {
      "level": 2,
      "title": "Custom (Action Function)",
      "slug": "custom-action-function",
      "children": []
    },
    {
      "level": 2,
      "title": "Comments",
      "slug": "comments",
      "children": []
    },
    {
      "level": 2,
      "title": "Case Modifiers",
      "slug": "case-modifiers",
      "children": []
    },
    {
      "level": 2,
      "title": "Other Helpers",
      "slug": "other-helpers",
      "children": []
    },
    {
      "level": 2,
      "title": "Using a Dynamic Actions Array",
      "slug": "using-a-dynamic-actions-array",
      "children": []
    },
    {
      "level": 2,
      "title": "3rd Party Prompt Bypass",
      "slug": "_3rd-party-prompt-bypass",
      "children": [
        {
          "level": 3,
          "title": "Adding Bypass Support to Your Plopfile",
          "slug": "adding-bypass-support-to-your-plopfile",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Wrapping Plop",
      "slug": "wrapping-plop",
      "children": [
        {
          "level": 3,
          "title": "Setting the base destination path for the wrapper",
          "slug": "setting-the-base-destination-path-for-the-wrapper",
          "children": []
        },
        {
          "level": 3,
          "title": "Adding General CLI Actions",
          "slug": "adding-general-cli-actions",
          "children": []
        },
        {
          "level": 3,
          "title": "Further Customization",
          "slug": "further-customization",
          "children": []
        }
      ]
    }
  ],
  "git": {
    "updatedTime": null
  },
  "filePathRelative": "node_modules/plop/README.md"
}

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
