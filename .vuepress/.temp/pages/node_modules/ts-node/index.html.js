export const data = {
  "key": "v-66c6332a",
  "path": "/node_modules/ts-node/",
  "title": "",
  "lang": "en-US",
  "frontmatter": {},
  "excerpt": "",
  "headers": [
    {
      "level": 2,
      "title": "Features",
      "slug": "features",
      "children": []
    },
    {
      "level": 2,
      "title": "Command Line",
      "slug": "command-line",
      "children": []
    },
    {
      "level": 2,
      "title": "Shebang",
      "slug": "shebang",
      "children": []
    },
    {
      "level": 2,
      "title": "node flags and other tools",
      "slug": "node-flags-and-other-tools",
      "children": []
    },
    {
      "level": 2,
      "title": "Programmatic",
      "slug": "programmatic",
      "children": []
    },
    {
      "level": 2,
      "title": "CLI flags",
      "slug": "cli-flags",
      "children": []
    },
    {
      "level": 2,
      "title": "Via tsconfig.json (recommended)",
      "slug": "via-tsconfig-json-recommended",
      "children": [
        {
          "level": 3,
          "title": "@tsconfig/bases",
          "slug": "tsconfig-bases",
          "children": []
        },
        {
          "level": 3,
          "title": "Default config",
          "slug": "default-config",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "node flags",
      "slug": "node-flags",
      "children": []
    },
    {
      "level": 2,
      "title": "CLI Options",
      "slug": "cli-options",
      "children": [
        {
          "level": 3,
          "title": "help",
          "slug": "help",
          "children": []
        },
        {
          "level": 3,
          "title": "version",
          "slug": "version",
          "children": []
        },
        {
          "level": 3,
          "title": "eval",
          "slug": "eval",
          "children": []
        },
        {
          "level": 3,
          "title": "print",
          "slug": "print",
          "children": []
        },
        {
          "level": 3,
          "title": "interactive",
          "slug": "interactive",
          "children": []
        },
        {
          "level": 3,
          "title": "esm",
          "slug": "esm",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "TSConfig Options",
      "slug": "tsconfig-options",
      "children": [
        {
          "level": 3,
          "title": "project",
          "slug": "project",
          "children": []
        },
        {
          "level": 3,
          "title": "skipProject",
          "slug": "skipproject",
          "children": []
        },
        {
          "level": 3,
          "title": "cwdMode",
          "slug": "cwdmode",
          "children": []
        },
        {
          "level": 3,
          "title": "compilerOptions",
          "slug": "compileroptions",
          "children": []
        },
        {
          "level": 3,
          "title": "showConfig",
          "slug": "showconfig",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Typechecking",
      "slug": "typechecking",
      "children": [
        {
          "level": 3,
          "title": "transpileOnly",
          "slug": "transpileonly",
          "children": []
        },
        {
          "level": 3,
          "title": "typeCheck",
          "slug": "typecheck",
          "children": []
        },
        {
          "level": 3,
          "title": "compilerHost",
          "slug": "compilerhost",
          "children": []
        },
        {
          "level": 3,
          "title": "files",
          "slug": "files",
          "children": []
        },
        {
          "level": 3,
          "title": "ignoreDiagnostics",
          "slug": "ignorediagnostics",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Transpilation Options",
      "slug": "transpilation-options",
      "children": [
        {
          "level": 3,
          "title": "ignore",
          "slug": "ignore",
          "children": []
        },
        {
          "level": 3,
          "title": "skipIgnore",
          "slug": "skipignore",
          "children": []
        },
        {
          "level": 3,
          "title": "compiler",
          "slug": "compiler",
          "children": []
        },
        {
          "level": 3,
          "title": "swc",
          "slug": "swc",
          "children": []
        },
        {
          "level": 3,
          "title": "transpiler",
          "slug": "transpiler",
          "children": []
        },
        {
          "level": 3,
          "title": "preferTsExts",
          "slug": "prefertsexts",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Diagnostic Options",
      "slug": "diagnostic-options",
      "children": [
        {
          "level": 3,
          "title": "logError",
          "slug": "logerror",
          "children": []
        },
        {
          "level": 3,
          "title": "pretty",
          "slug": "pretty",
          "children": []
        },
        {
          "level": 3,
          "title": "TS_NODE_DEBUG",
          "slug": "ts-node-debug",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Advanced Options",
      "slug": "advanced-options",
      "children": [
        {
          "level": 3,
          "title": "require",
          "slug": "require",
          "children": []
        },
        {
          "level": 3,
          "title": "cwd",
          "slug": "cwd",
          "children": []
        },
        {
          "level": 3,
          "title": "emit",
          "slug": "emit",
          "children": []
        },
        {
          "level": 3,
          "title": "scope",
          "slug": "scope",
          "children": []
        },
        {
          "level": 3,
          "title": "scopeDir",
          "slug": "scopedir",
          "children": []
        },
        {
          "level": 3,
          "title": "moduleTypes",
          "slug": "moduletypes",
          "children": []
        },
        {
          "level": 3,
          "title": "TS_NODE_HISTORY",
          "slug": "ts-node-history",
          "children": []
        },
        {
          "level": 3,
          "title": "noExperimentalReplAwait",
          "slug": "noexperimentalreplawait",
          "children": []
        },
        {
          "level": 3,
          "title": "experimentalResolver",
          "slug": "experimentalresolver",
          "children": []
        },
        {
          "level": 3,
          "title": "experimentalSpecifierResolution",
          "slug": "experimentalspecifierresolution",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "API Options",
      "slug": "api-options",
      "children": []
    },
    {
      "level": 2,
      "title": "CommonJS",
      "slug": "commonjs",
      "children": []
    },
    {
      "level": 2,
      "title": "Native ECMAScript modules",
      "slug": "native-ecmascript-modules",
      "children": []
    },
    {
      "level": 2,
      "title": "Configuration",
      "slug": "configuration-1",
      "children": []
    },
    {
      "level": 2,
      "title": "Common errors",
      "slug": "common-errors",
      "children": [
        {
          "level": 3,
          "title": "TSError",
          "slug": "tserror",
          "children": []
        },
        {
          "level": 3,
          "title": "SyntaxError",
          "slug": "syntaxerror",
          "children": []
        },
        {
          "level": 3,
          "title": "ERR_REQUIRE_ESM",
          "slug": "err-require-esm",
          "children": []
        },
        {
          "level": 3,
          "title": "ERR_UNKNOWN_FILE_EXTENSION",
          "slug": "err-unknown-file-extension",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Missing Types",
      "slug": "missing-types",
      "children": []
    },
    {
      "level": 2,
      "title": "npx, yarn dlx, and node_modules",
      "slug": "npx-yarn-dlx-and-node-modules",
      "children": []
    },
    {
      "level": 2,
      "title": "Skip typechecking",
      "slug": "skip-typechecking",
      "children": []
    },
    {
      "level": 2,
      "title": "With typechecking",
      "slug": "with-typechecking",
      "children": []
    },
    {
      "level": 2,
      "title": "How it works",
      "slug": "how-it-works",
      "children": []
    },
    {
      "level": 2,
      "title": "Ignored files",
      "slug": "ignored-files",
      "children": [
        {
          "level": 3,
          "title": "File extensions",
          "slug": "file-extensions",
          "children": []
        },
        {
          "level": 3,
          "title": "Skipping node_modules",
          "slug": "skipping-node-modules",
          "children": []
        },
        {
          "level": 3,
          "title": "Skipping pre-compiled TypeScript",
          "slug": "skipping-pre-compiled-typescript",
          "children": []
        },
        {
          "level": 3,
          "title": "Scope by directory",
          "slug": "scope-by-directory",
          "children": []
        },
        {
          "level": 3,
          "title": "Ignore by regexp",
          "slug": "ignore-by-regexp",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "paths and baseUrl",
      "slug": "paths-and-baseurl",
      "children": [
        {
          "level": 3,
          "title": "Why is this not built-in to ts-node?",
          "slug": "why-is-this-not-built-in-to-ts-node",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Third-party compilers",
      "slug": "third-party-compilers",
      "children": []
    },
    {
      "level": 2,
      "title": "Transpilers",
      "slug": "transpilers",
      "children": [
        {
          "level": 3,
          "title": "Third-party plugins",
          "slug": "third-party-plugins",
          "children": []
        },
        {
          "level": 3,
          "title": "Write your own plugin",
          "slug": "write-your-own-plugin",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Module type overrides",
      "slug": "module-type-overrides",
      "children": [
        {
          "level": 3,
          "title": "Caveats",
          "slug": "caveats",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "API",
      "slug": "api",
      "children": []
    },
    {
      "level": 2,
      "title": "Watching and restarting",
      "slug": "watching-and-restarting",
      "children": []
    },
    {
      "level": 2,
      "title": "AVA",
      "slug": "ava",
      "children": [
        {
          "level": 3,
          "title": "CommonJS",
          "slug": "commonjs-1",
          "children": []
        },
        {
          "level": 3,
          "title": "Native ECMAScript modules",
          "slug": "native-ecmascript-modules-1",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Gulp",
      "slug": "gulp",
      "children": []
    },
    {
      "level": 2,
      "title": "IntelliJ and Webstorm",
      "slug": "intellij-and-webstorm",
      "children": []
    },
    {
      "level": 2,
      "title": "Mocha",
      "slug": "mocha",
      "children": [
        {
          "level": 3,
          "title": "Mocha 7 and newer",
          "slug": "mocha-7-and-newer",
          "children": []
        },
        {
          "level": 3,
          "title": "Mocha <=6",
          "slug": "mocha-6",
          "children": []
        }
      ]
    },
    {
      "level": 2,
      "title": "Tape",
      "slug": "tape",
      "children": []
    },
    {
      "level": 2,
      "title": "Visual Studio Code",
      "slug": "visual-studio-code",
      "children": []
    },
    {
      "level": 2,
      "title": "Other",
      "slug": "other",
      "children": []
    }
  ],
  "git": {
    "updatedTime": null
  },
  "filePathRelative": "node_modules/ts-node/README.md"
}

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
