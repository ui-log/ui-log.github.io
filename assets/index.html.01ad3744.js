const e={key:"v-ebbc0c0a",path:"/docs/Tech/2024-03-28-EfficientlyDisplayCroppedFacesinFlutterAMemoryandPerformanceOptimizedApproach/",title:"\uD50C\uB7EC\uD130\uC5D0\uC11C \uC5BC\uAD74\uC744 \uD6A8\uC728\uC801\uC73C\uB85C \uC790\uB974\uB294 \uBC29\uBC95(face crop)",lang:"ko",frontmatter:{title:"\uD50C\uB7EC\uD130\uC5D0\uC11C \uC5BC\uAD74\uC744 \uD6A8\uC728\uC801\uC73C\uB85C \uC790\uB974\uB294 \uBC29\uBC95(face crop)",description:"",date:"2024-03-28 19:31",sidebarDepth:0,tag:"Tech",thumbnail:null,originalTitle:"Efficiently Display Cropped Faces in Flutter: A Memory and Performance Optimized Approach",link:"https://medium.com/@khushalsinghrao/efficiently-display-cropped-faces-in-flutter-a-memory-and-performance-optimized-approach-e06fca60957d"},excerpt:"",headers:[{level:3,title:"\uB2E8\uACC4 1: \uC6D0\uBCF8 \uC774\uBBF8\uC9C0\uC5D0\uC11C ui.Image \uAC1D\uCCB4 \uAC00\uC838\uC624\uAE30",slug:"\u1103\u1161\u11AB\u1100\u1168-1-\u110B\u116F\u11AB\u1107\u1169\u11AB-\u110B\u1175\u1106\u1175\u110C\u1175\u110B\u1166\u1109\u1165-ui-image-\u1100\u1162\u11A8\u110E\u1166-\u1100\u1161\u110C\u1167\u110B\u1169\u1100\u1175",children:[]},{level:3,title:"\uB2E8\uACC4 2: CustomPainter\uB97C \uC0AC\uC6A9\uD55C \uC5BC\uAD74 \uC774\uBBF8\uC9C0 \uADF8\uB9AC\uAE30",slug:"\u1103\u1161\u11AB\u1100\u1168-2-custompainter\u1105\u1173\u11AF-\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u11AB-\u110B\u1165\u11AF\u1100\u116E\u11AF-\u110B\u1175\u1106\u1175\u110C\u1175-\u1100\u1173\u1105\u1175\u1100\u1175",children:[]}],git:{updatedTime:null},filePathRelative:"docs/Tech/2024-03-28-EfficientlyDisplayCroppedFacesinFlutterAMemoryandPerformanceOptimizedApproach/README.md"};export{e as data};
