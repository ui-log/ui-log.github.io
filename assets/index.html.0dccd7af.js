import{_ as o}from"./app.3052dcfb.js";import{l as n,m as c,E as a,G as e,p,Y as t,K as s}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";var l="/assets/Laravel11RESTAPICRUDwithbestpractices_0.94fc7c47.png",i="/assets/Laravel11RESTAPICRUDwithbestpractices_1.a0601240.png";const r={},u=s('<p><img src="'+l+`" alt="\uC774\uBBF8\uC9C0"></p><p>\uB77C\uB77C\uBCA8 11\uC5D0\uC11C RESTful API CRUD \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uB9CC\uB4DC\uB294 \uAC83\uC740 \uB77C\uB77C\uBCA8 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC124\uC815, \uB77C\uC6B0\uD2B8 \uC815\uC758, \uC720\uD6A8\uC131 \uAC80\uC0AC, \uBAA8\uB378, \uB9AC\uC18C\uC2A4 \uC815\uC758, \uCEE8\uD2B8\uB864\uB7EC \uC0DD\uC131, Repository \uB514\uC790\uC778 \uD328\uD134 \uAD6C\uD604 \uBC0F \uBAA8\uB378 \uC791\uC5C5\uC744 \uD3EC\uD568\uD569\uB2C8\uB2E4. \uC774\uB97C \uB2EC\uC131\uD558\uB294 \uBC29\uBC95\uC5D0 \uB300\uD55C \uB2E8\uACC4\uBCC4 \uAC00\uC774\uB4DC\uB294 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4:</p><h2 id="\u1103\u1161\u11AB\u1100\u1168-1-\u1105\u1161\u1105\u1161\u1107\u1166\u11AF-\u1109\u1165\u11AF\u110C\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-1-\u1105\u1161\u1105\u1161\u1107\u1166\u11AF-\u1109\u1165\u11AF\u110C\u1165\u11BC" aria-hidden="true">#</a> \uB2E8\uACC4 1: \uB77C\uB77C\uBCA8 \uC124\uC815</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>composer create<span class="token operator">-</span>project <span class="token operator">--</span>prefer<span class="token operator">-</span>dist laravel<span class="token operator">/</span>laravel rest<span class="token operator">-</span>api<span class="token operator">-</span>crud
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),d=s('<h2 id="\u1103\u1161\u11AB\u1100\u1168-2-mysql-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1100\u116E\u1109\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-2-mysql-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1100\u116E\u1109\u1165\u11BC" aria-hidden="true">#</a> \uB2E8\uACC4 2: Mysql \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uAD6C\uC131</h2><p>Laravel 11\uC758 \uAE30\uBCF8 DB_CONNECTION\uC740 sqlite\uC785\uB2C8\uB2E4. \uC774\uB97C DB_CONNECTION=mysql\uB85C \uBCC0\uACBD\uD574\uC57C env \uD30C\uC77C\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.</p><p><img src="'+i+'" alt="\uC774\uBBF8\uC9C0"></p><h2 id="\u1103\u1161\u11AB\u1100\u1168-03-\u1106\u1161\u110B\u1175\u1100\u1173\u1105\u1166\u110B\u1175\u1109\u1167\u11AB\u1100\u116A-\u1112\u1161\u11B7\u1101\u1166-product-model-\u1109\u1162\u11BC\u1109\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-03-\u1106\u1161\u110B\u1175\u1100\u1173\u1105\u1166\u110B\u1175\u1109\u1167\u11AB\u1100\u116A-\u1112\u1161\u11B7\u1101\u1166-product-model-\u1109\u1162\u11BC\u1109\u1165\u11BC" aria-hidden="true">#</a> \uB2E8\uACC4 03: \uB9C8\uC774\uADF8\uB808\uC774\uC158\uACFC \uD568\uAED8 Product Model \uC0DD\uC131</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),k=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>php artisan make<span class="token operator">:</span>model Product <span class="token operator">-</span>a
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u1103\u1161\u11AB\u1100\u1168-04-\u1106\u1161\u110B\u1175\u1100\u1173\u1105\u1166\u110B\u1175\u1109\u1167\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-04-\u1106\u1161\u110B\u1175\u1100\u1173\u1105\u1166\u110B\u1175\u1109\u1167\u11AB" aria-hidden="true">#</a> \uB2E8\uACC4 04: \uB9C8\uC774\uADF8\uB808\uC774\uC158</h2><p>database/migrations/YYYY_MM_DD_HHMMSS_create_products_table.php\uC5D0\uC11C \uB2E4\uC74C\uACFC \uC77C\uCE58\uD558\uB3C4\uB85D up \uD568\uC218\uB97C \uC5C5\uB370\uC774\uD2B8\uD558\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">Schema</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">&#39;products&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Blueprint $table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            $table<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            $table<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            $table<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">string</span><span class="token punctuation">(</span><span class="token string">&#39;details&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            $table<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">timestamps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),v=s('<h2 id="\u1103\u1161\u11AB\u1100\u1168-05-\u110C\u1166\u1111\u116E\u11B7-\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173-\u1109\u1162\u11BC\u1109\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-05-\u110C\u1166\u1111\u116E\u11B7-\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173-\u1109\u1162\u11BC\u1109\u1165\u11BC" aria-hidden="true">#</a> \uB2E8\uACC4 05: \uC81C\uD488 \uC778\uD130\uD398\uC774\uC2A4 \uC0DD\uC131</h2><p>\uC81C\uD488 \uBAA8\uB378\uC744 \uC704\uD55C \uC800\uC7A5\uC18C \uC778\uD130\uD398\uC774\uC2A4\uB97C \uC0DD\uC131\uD558\uC138\uC694. \uC774 \uBD84\uB9AC\uB294 \uB354 \uAE68\uB057\uD558\uACE0 \uC720\uC9C0\uBCF4\uC218\uAC00 \uC26C\uC6B4 \uCF54\uB4DC\uB97C \uC791\uC131\uD560 \uC218 \uC788\uAC8C \uB3C4\uC640\uC90D\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>php artisan make<span class="token operator">:</span><span class="token keyword">interface</span> <span class="token operator">/</span>Interfaces<span class="token operator">/</span>ProductRepositoryInterface\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Interfaces \uD3F4\uB354 \uC548\uC5D0 ProductRepositoryInterface.php\uB77C\uB294 \uC0C8 \uD30C\uC77C\uC744 \uC0DD\uC131\uD558\uACE0 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC138\uC694.```</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),m=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Interfaces<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">ProductRepositoryInterface</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token parameter">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token parameter">array $data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">array $data<span class="token punctuation">,</span>$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token parameter">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="step-06-\u110C\u1166\u1111\u116E\u11B7-\u1105\u1175\u1111\u1169\u110C\u1175\u1110\u1169\u1105\u1175-\u110F\u1173\u11AF\u1105\u1162\u1109\u1173-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#step-06-\u110C\u1166\u1111\u116E\u11B7-\u1105\u1175\u1111\u1169\u110C\u1175\u1110\u1169\u1105\u1175-\u110F\u1173\u11AF\u1105\u1162\u1109\u1173-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175" aria-hidden="true">#</a> Step 06: \uC81C\uD488 \uB9AC\uD3EC\uC9C0\uD1A0\uB9AC \uD074\uB798\uC2A4 \uB9CC\uB4E4\uAE30</h2><p>Product \uBAA8\uB378\uC744 \uC704\uD55C \uB9AC\uD3EC\uC9C0\uD1A0\uB9AC \uD074\uB798\uC2A4\uB97C \uB9CC\uB4ED\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>php artisan make<span class="token operator">:</span><span class="token keyword">class</span> <span class="token operator">/</span>Repositories<span class="token operator">/</span>ProductRepository
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),b=s(`<p>\uC218\uC5C5\uC5D0\uC11C ProductRepository.php\uB77C\uB294 \uC0C8 \uD30C\uC77C\uC744 \uB9CC\uB4E4\uACE0 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC2ED\uC2DC\uC624.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Repository<span class="token punctuation">;</span>
use App\\Models\\Product<span class="token punctuation">;</span>
use App\\Interfaces\\ProductRepositoryInterface<span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">ProductReposiotry</span> <span class="token keyword">implements</span> <span class="token class-name">ProductRepositoryInterface</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token literal-property property">Product</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token parameter">$id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token literal-property property">Product</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">findOrFail</span><span class="token punctuation">(</span>$id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token parameter">array $data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token literal-property property">Product</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">create</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">array $data<span class="token punctuation">,</span>$id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token literal-property property">Product</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">whereId</span><span class="token punctuation">(</span>$id<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">update</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token parameter">$id</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token literal-property property">Product</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">destroy</span><span class="token punctuation">(</span>$id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1103\u1161\u11AB\u1100\u1168-07-\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173\u110B\u116A-\u1100\u116E\u1112\u1167\u11AB\u110E\u1166\u1105\u1173\u11AF-\u1107\u1161\u110B\u1175\u11AB\u1103\u1175\u11BC\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-07-\u110B\u1175\u11AB\u1110\u1165\u1111\u1166\u110B\u1175\u1109\u1173\u110B\u116A-\u1100\u116E\u1112\u1167\u11AB\u110E\u1166\u1105\u1173\u11AF-\u1107\u1161\u110B\u1175\u11AB\u1103\u1175\u11BC\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uB2E8\uACC4 07: \uC778\uD130\uD398\uC774\uC2A4\uC640 \uAD6C\uD604\uCCB4\uB97C \uBC14\uC778\uB529\uD558\uAE30</h2><p>\uD574\uC57C \uD560 \uC77C\uC740 ProductRepository\uB97C ProductRepositoryInterface\uC5D0 \uBC14\uC778\uB529\uD558\uB294 \uAC83\uC785\uB2C8\uB2E4. \uC774\uB97C \uC11C\uBE44\uC2A4 \uD504\uB85C\uBC14\uC774\uB354\uB97C \uD1B5\uD574 \uC218\uD589\uD569\uB2C8\uB2E4. \uB2E4\uC74C \uBA85\uB839\uC5B4\uB97C \uC0AC\uC6A9\uD558\uC5EC \uD558\uB098\uB97C \uC0DD\uC131\uD558\uC2ED\uC2DC\uC624.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),y=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>php artisan make<span class="token operator">:</span>provider RepositoryServiceProvider
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>app/Providers/RepositoryServiceProvider.php \uD30C\uC77C\uC744 \uC5F4\uACE0 register \uD568\uC218\uB97C \uC544\uB798\uC640 \uC77C\uCE58\uD558\uB3C4\uB85D \uC5C5\uB370\uC774\uD2B8\uD558\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Providers<span class="token punctuation">;</span>

use Illuminate\\Support\\ServiceProvider<span class="token punctuation">;</span>
use App\\Interfaces\\ProductRepositoryInterface<span class="token punctuation">;</span>
use App\\Repository\\ProductRepository<span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">RepositoryServiceProvider</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceProvider</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \uC11C\uBE44\uC2A4 \uB4F1\uB85D.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">{</span>
        $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>app<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">bind</span><span class="token punctuation">(</span>ProductRepositoryInterface<span class="token operator">:</span><span class="token operator">:</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token literal-property property">ProductRepository</span><span class="token operator">:</span><span class="token operator">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uC11C\uBE44\uC2A4 \uBD80\uD2B8\uC2A4\uD2B8\uB7A9.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">boot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1103\u1161\u11AB\u1100\u1168-08-\u110B\u116D\u110E\u1165\u11BC-\u110B\u1172\u1112\u116D\u1109\u1165\u11BC-\u1100\u1165\u11B7\u1109\u1161" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-08-\u110B\u116D\u110E\u1165\u11BC-\u110B\u1172\u1112\u116D\u1109\u1165\u11BC-\u1100\u1165\u11B7\u1109\u1161" aria-hidden="true">#</a> \uB2E8\uACC4 08: \uC694\uCCAD \uC720\uD6A8\uC131 \uAC80\uC0AC\`\`\`</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),g=s(`<p>\uB450 \uAC00\uC9C0 \uC694\uCCAD StoreProductRequest \uBC0F UpdateProductRequest\uB97C \uB9CC\uB4E0 \uD6C4 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Http\\Requests<span class="token punctuation">;</span>

use Illuminate\\Foundation\\Http\\FormRequest<span class="token punctuation">;</span>
use Illuminate\\Http\\Exceptions\\HttpResponseException<span class="token punctuation">;</span>
use Illuminate\\Contracts\\Validation\\Validator<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">StoreProductRequest</span> <span class="token keyword">extends</span> <span class="token class-name">FormRequest</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \uC0AC\uC6A9\uC790\uAC00 \uC774 \uC694\uCCAD\uC744 \uC218\uD589\uD560 \uAD8C\uD55C\uC774 \uC788\uB294\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">authorize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> bool
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uC694\uCCAD\uC5D0 \uC801\uC6A9\uB418\uB294 \uC720\uD6A8\uC131 \uADDC\uCE59\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.
     *
     * <span class="token keyword">@return</span> array&lt;string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array&lt;mixed&gt;|string&gt;
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">rules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> array
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;required&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;details&#39;</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;required&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">failedValidation</span><span class="token punctuation">(</span><span class="token parameter">Validator $validator</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">HttpResponseException</span><span class="token punctuation">(</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string">&#39;success&#39;</span>   <span class="token operator">=&gt;</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string">&#39;message&#39;</span>   <span class="token operator">=&gt;</span> <span class="token string">&#39;\uC720\uD6A8\uC131 \uAC80\uC0AC \uC624\uB958&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;data&#39;</span>      <span class="token operator">=&gt;</span> $validator<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">errors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Http\\Requests<span class="token punctuation">;</span>

use Illuminate\\Foundation\\Http\\FormRequest<span class="token punctuation">;</span>
use Illuminate\\Http\\Exceptions\\HttpResponseException<span class="token punctuation">;</span>
use Illuminate\\Contracts\\Validation\\Validator<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UpdateProductRequest</span> <span class="token keyword">extends</span> <span class="token class-name">FormRequest</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \uC0AC\uC6A9\uC790\uAC00 \uC774 \uC694\uCCAD\uC744 \uC218\uD589\uD560 \uAD8C\uD55C\uC774 \uC788\uB294\uC9C0 \uD655\uC778\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">authorize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> bool
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uC694\uCCAD\uC5D0 \uC801\uC6A9\uB418\uB294 \uC720\uD6A8\uC131 \uADDC\uCE59\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.
     *
     * <span class="token keyword">@return</span> array&lt;string, \\Illuminate\\Contracts\\Validation\\ValidationRule|array&lt;mixed&gt;|string&gt;
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">rules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> array
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;required&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;details&#39;</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;required&#39;</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">failedValidation</span><span class="token punctuation">(</span><span class="token parameter">Validator $validator</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">HttpResponseException</span><span class="token punctuation">(</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            <span class="token string">&#39;success&#39;</span>   <span class="token operator">=&gt;</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string">&#39;message&#39;</span>   <span class="token operator">=&gt;</span> <span class="token string">&#39;\uC720\uD6A8\uC131 \uAC80\uC0AC \uC624\uB958&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;data&#39;</span>      <span class="token operator">=&gt;</span> $validator<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">errors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1103\u1161\u11AB\u1100\u1168-09-\u1100\u1169\u11BC\u1110\u1169\u11BC-apiresponseclass-\u1109\u1162\u11BC\u1109\u1165\u11BC\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-09-\u1100\u1169\u11BC\u1110\u1169\u11BC-apiresponseclass-\u1109\u1162\u11BC\u1109\u1165\u11BC\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uB2E8\uACC4 09: \uACF5\uD1B5 ApiResponseClass \uC0DD\uC131\uD558\uAE30</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),f=s(`<p>\uC774 \uD754\uD55C \uC751\uB2F5 \uD074\uB798\uC2A4\uB294 \uAC00\uC7A5 \uC88B\uC740 \uC2E4\uCC9C \uBC29\uBC95\uC785\uB2C8\uB2E4. \uC65C\uB0D0\uD558\uBA74 \uC751\uB2F5\uC744 \uBCF4\uB0BC \uC218 \uC788\uB294 &#39;con&#39; \uD568\uC218\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uAE30 \uB54C\uBB38\uC785\uB2C8\uB2E4. \uB2E4\uC74C \uBA85\uB839\uC744 \uC0AC\uC6A9\uD558\uC5EC \uD558\uB098\uB97C \uC0DD\uC131\uD558\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>php artisan make<span class="token operator">:</span><span class="token keyword">class</span> <span class="token operator">/</span>Classes<span class="token operator">/</span>ApiResponseClass
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\uC544\uB798 \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Classes<span class="token punctuation">;</span>
use Illuminate\\Support\\Facades\\<span class="token constant">DB</span><span class="token punctuation">;</span>
use Illuminate\\Http\\Exceptions\\HttpResponseException<span class="token punctuation">;</span>
use Illuminate\\Support\\Facades\\Log<span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">ApiResponseClass</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">rollback</span><span class="token punctuation">(</span>$e<span class="token punctuation">,</span> $message <span class="token operator">=</span><span class="token string">&quot;\uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4! \uD504\uB85C\uC138\uC2A4\uAC00 \uC644\uB8CC\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token constant">DB</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">rollBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token literal-property property">self</span><span class="token operator">:</span><span class="token operator">:</span><span class="token keyword">throw</span><span class="token punctuation">(</span>$e<span class="token punctuation">,</span> $message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token keyword">throw</span><span class="token punctuation">(</span>$e<span class="token punctuation">,</span> $message <span class="token operator">=</span><span class="token string">&quot;\uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4! \uD504\uB85C\uC138\uC2A4\uAC00 \uC644\uB8CC\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token literal-property property">Log</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">info</span><span class="token punctuation">(</span>$e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">HttpResponseException</span><span class="token punctuation">(</span><span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;message&quot;</span><span class="token operator">=&gt;</span> $message<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token parameter">$result <span class="token punctuation">,</span> $message <span class="token punctuation">,</span>$code<span class="token operator">=</span><span class="token number">200</span></span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        $response<span class="token operator">=</span><span class="token punctuation">[</span>
            <span class="token string">&#39;success&#39;</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string">&#39;data&#39;</span>    <span class="token operator">=&gt;</span> $result
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">empty</span><span class="token punctuation">(</span>$message<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            $response<span class="token punctuation">[</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span>$message<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">json</span><span class="token punctuation">(</span>$response<span class="token punctuation">,</span> $code<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),w=s(`<h2 id="\u1103\u1161\u11AB\u1100\u1168-10-\u110C\u1166\u1111\u116E\u11B7-\u1105\u1175\u1109\u1169\u1109\u1173-\u1109\u1162\u11BC\u1109\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-10-\u110C\u1166\u1111\u116E\u11B7-\u1105\u1175\u1109\u1169\u1109\u1173-\u1109\u1162\u11BC\u1109\u1165\u11BC" aria-hidden="true">#</a> \uB2E8\uACC4 10: \uC81C\uD488 \uB9AC\uC18C\uC2A4 \uC0DD\uC131</h2><p>\uB2E4\uC74C \uBA85\uB839\uC5B4\uB97C \uC0AC\uC6A9\uD558\uC5EC \uD558\uB098\uB97C \uB9CC\uB4DC\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>php artisan make<span class="token operator">:</span>resource ProductResource
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\uADF8\uB9AC\uACE0 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC138\uC694.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),h=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Http\\Resources<span class="token punctuation">;</span>

use Illuminate\\Http\\Request<span class="token punctuation">;</span>
use Illuminate\\Http\\Resources\\Json\\JsonResource<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">ProductResource</span> <span class="token keyword">extends</span> <span class="token class-name">JsonResource</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \uB9AC\uC18C\uC2A4\uB97C \uBC30\uC5F4\uB85C \uBCC0\uD658\uD569\uB2C8\uB2E4.
     *
     * <span class="token keyword">@return</span> array&lt;string, mixed&gt;
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">toArray</span><span class="token punctuation">(</span><span class="token parameter">Request $request</span><span class="token punctuation">)</span><span class="token operator">:</span> array
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            <span class="token string">&#39;id&#39;</span> <span class="token operator">=&gt;</span>$<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>id<span class="token punctuation">,</span>
            <span class="token string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>name<span class="token punctuation">,</span>
            <span class="token string">&#39;details&#39;</span> <span class="token operator">=&gt;</span> $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>details
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1103\u1161\u11AB\u1100\u1168-11-productcontroller-\u110F\u1173\u11AF\u1105\u1162\u1109\u1173" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-11-productcontroller-\u110F\u1173\u11AF\u1105\u1162\u1109\u1173" aria-hidden="true">#</a> \uB2E8\uACC4 11: ProductController \uD074\uB798\uC2A4</h2><p>\uC800\uD76C\uAC00 \uC900\uBE44\uD55C \uC800\uC7A5\uC18C\uAC00 \uC900\uBE44\uB418\uC5C8\uC73C\uB2C8, \uCEE8\uD2B8\uB864\uB7EC\uC5D0 \uBA87 \uC904 \uCF54\uB4DC\uB97C \uCD94\uAC00\uD574\uBD05\uC2DC\uB2E4. app/Http/Controllers/ProductController.php \uD30C\uC77C\uC744 \uC5F4\uACE0 \uB2E4\uC74C \uCF54\uB4DC\uC640 \uC77C\uCE58\uD558\uB3C4\uB85D \uC5C5\uB370\uC774\uD2B8\uD574\uC8FC\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

namespace App\\Http\\Controllers<span class="token punctuation">;</span>

use App\\Models\\Product<span class="token punctuation">;</span>
use App\\Http\\Requests\\StoreProductRequest<span class="token punctuation">;</span>
use App\\Http\\Requests\\UpdateProductRequest<span class="token punctuation">;</span>
use App\\Interfaces\\ProductRepositoryInterface<span class="token punctuation">;</span>
use App\\Classes\\ResponseClass<span class="token punctuation">;</span>
use App\\Http\\Resources\\ProductResource<span class="token punctuation">;</span>
use Illuminate\\Support\\Facades\\<span class="token constant">DB</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">ProductController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span>
<span class="token punctuation">{</span>
    
    <span class="token keyword">private</span> ProductRepositoryInterface $productRepositoryInterface<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token parameter">ProductRepositoryInterface $productRepositoryInterface</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>productRepositoryInterface <span class="token operator">=</span> $productRepositoryInterface<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uB9AC\uC18C\uC2A4 \uBAA9\uB85D\uC744 \uD45C\uC2DC\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        $data <span class="token operator">=</span> $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>productRepositoryInterface<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token literal-property property">ResponseClass</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">sendResponse</span><span class="token punctuation">(</span>ProductResource<span class="token operator">:</span><span class="token operator">:</span><span class="token function">collection</span><span class="token punctuation">(</span>$data<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uC0C8\uB85C\uC6B4 \uB9AC\uC18C\uC2A4\uB97C \uB9CC\uB4E4\uAE30 \uC704\uD55C \uC591\uC2DD\uC744 \uD45C\uC2DC\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uC0C8\uB85C\uC6B4 \uB9AC\uC18C\uC2A4\uB97C \uC800\uC7A5\uC18C\uC5D0 \uC800\uC7A5\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">store</span><span class="token punctuation">(</span><span class="token parameter">StoreProductRequest $request</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        $details <span class="token operator">=</span><span class="token punctuation">[</span>
            <span class="token string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> $request<span class="token operator">-</span><span class="token operator">&gt;</span>name<span class="token punctuation">,</span>
            <span class="token string">&#39;details&#39;</span> <span class="token operator">=&gt;</span> $request<span class="token operator">-</span><span class="token operator">&gt;</span>details
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token constant">DB</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
             $product <span class="token operator">=</span> $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>productRepositoryInterface<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">store</span><span class="token punctuation">(</span>$details<span class="token punctuation">)</span><span class="token punctuation">;</span>

             <span class="token constant">DB</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token keyword">return</span> <span class="token literal-property property">ResponseClass</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProductResource</span><span class="token punctuation">(</span>$product<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;Product Create Successful&#39;</span><span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>\\Exception $ex<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token literal-property property">ResponseClass</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">rollback</span><span class="token punctuation">(</span>$ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uD2B9\uC815 \uB9AC\uC18C\uC2A4\uB97C \uD45C\uC2DC\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token parameter">$id</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        $product <span class="token operator">=</span> $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>productRepositoryInterface<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">getById</span><span class="token punctuation">(</span>$id<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token literal-property property">ResponseClass</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ProductResource</span><span class="token punctuation">(</span>$product<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uD2B9\uC815 \uB9AC\uC18C\uC2A4\uB97C \uD3B8\uC9D1\uD558\uAE30 \uC704\uD55C \uC591\uC2DD\uC744 \uD45C\uC2DC\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">edit</span><span class="token punctuation">(</span><span class="token parameter">Product $product</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uD2B9\uC815 \uB9AC\uC18C\uC2A4\uB97C \uC800\uC7A5\uC18C\uC5D0\uC11C \uC5C5\uB370\uC774\uD2B8\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token parameter">UpdateProductRequest $request<span class="token punctuation">,</span> $id</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        $updateDetails <span class="token operator">=</span><span class="token punctuation">[</span>
            <span class="token string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> $request<span class="token operator">-</span><span class="token operator">&gt;</span>name<span class="token punctuation">,</span>
            <span class="token string">&#39;details&#39;</span> <span class="token operator">=&gt;</span> $request<span class="token operator">-</span><span class="token operator">&gt;</span>details
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token constant">DB</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
             $product <span class="token operator">=</span> $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>productRepositoryInterface<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">update</span><span class="token punctuation">(</span>$updateDetails<span class="token punctuation">,</span>$id<span class="token punctuation">)</span><span class="token punctuation">;</span>

             <span class="token constant">DB</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token keyword">return</span> <span class="token literal-property property">ResponseClass</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token string">&#39;Product Update Successful&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token number">201</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>\\Exception $ex<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token literal-property property">ResponseClass</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">rollback</span><span class="token punctuation">(</span>$ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \uD2B9\uC815 \uB9AC\uC18C\uC2A4\uB97C \uC800\uC7A5\uC18C\uC5D0\uC11C \uC0AD\uC81C\uD569\uB2C8\uB2E4.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token parameter">$id</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
         $<span class="token keyword">this</span><span class="token operator">-</span><span class="token operator">&gt;</span>productRepositoryInterface<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token keyword">delete</span><span class="token punctuation">(</span>$id<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token literal-property property">ResponseClass</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">sendResponse</span><span class="token punctuation">(</span><span class="token string">&#39;Product Delete Successful&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token number">204</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),R=s(`<h2 id="\u1103\u1161\u11AB\u1100\u1168-12-api-\u1105\u1161\u110B\u116E\u1110\u1173" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u11AB\u1100\u1168-12-api-\u1105\u1161\u110B\u116E\u1110\u1173" aria-hidden="true">#</a> \uB2E8\uACC4 12: API \uB77C\uC6B0\uD2B8</h2><p>\uB2E4\uC74C \uBA85\uB839\uC744 \uC2E4\uD589\uD558\uBA74 API \uB77C\uC6B0\uD2B8 \uD30C\uC77C\uC744 \uAC8C\uC2DC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>php artisan install<span class="token operator">:</span>api
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\uCEE8\uD2B8\uB864\uB7EC\uC5D0\uC11C \uC815\uC758\uB41C \uAC01 \uBA54\uC11C\uB4DC\uB97C \uD2B9\uC815 \uB77C\uC6B0\uD2B8\uC5D0 \uB9E4\uD551\uD558\uB824\uBA74 routes/api.php\uC5D0 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC2ED\uC2DC\uC624.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),$=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">?</span>php

use Illuminate\\Http\\Request<span class="token punctuation">;</span>
use Illuminate\\Support\\Facades\\Route<span class="token punctuation">;</span>
use App\\Http\\Controllers\\ProductController<span class="token punctuation">;</span>
<span class="token literal-property property">Route</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">Request $request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> $request<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">middleware</span><span class="token punctuation">(</span><span class="token string">&#39;auth:sanctum&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token literal-property property">Route</span><span class="token operator">:</span><span class="token operator">:</span><span class="token function">apiResource</span><span class="token punctuation">(</span><span class="token string">&#39;/products&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">ProductController</span><span class="token operator">:</span><span class="token operator">:</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uD504\uB85C\uC81D\uD2B8\uB97C \uC2E4\uD589\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p>\uAC10\uC0AC\uD569\uB2C8\uB2E4..........</p>`,3);function _(x,P){return n(),c("div",null,[u,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),d,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),k,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),v,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),m,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),b,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),y,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),g,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),f,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),w,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),h,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),R,(n(),a(t("script"),null,{default:e(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),$])}var S=o(r,[["render",_],["__file","index.html.vue"]]);export{S as default};
