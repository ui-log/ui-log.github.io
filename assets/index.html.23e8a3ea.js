import{_ as i,f as l,o as s,c as u,a as t,w as p,b as a,r as e,e as n,g as r,d as o}from"./app.e1970118.js";const k={},d=n("p",null,"\uC624\uB298\uC740 CSS \uC138\uACC4\uB85C \uB4E4\uC5B4\uAC00\uC11C \uB450 \uAC00\uC9C0 \uD544\uC218 CSS \uC18D\uC131, background-size\uC640 background-position\uC5D0 \uCD08\uC810\uC744 \uB9DE\uCD94\uAC8C \uB429\uB2C8\uB2E4. \uC6B0\uB9AC\uC758 \uBAA9\uD45C\uB294 \uD558\uB098\uC758 \uC774\uBBF8\uC9C0\uB97C \uC5EC\uB7EC \uC870\uAC01\uC73C\uB85C \uB098\uB204\uB294 \uAC83\uC785\uB2C8\uB2E4. \uADF8\uB7F0\uB370 \uC65C \uADF8\uB7EC\uB0D0\uAD6C\uC694? \uC774 \uC870\uAC01\uB4E4\uC744 \uC815\uD655\uD558\uAC8C \uBC30\uC5F4\uD558\uC5EC \uD558\uB098\uC758 \uC77C\uCE58\uD558\uB294 \uC774\uBBF8\uC9C0\uCC98\uB7FC \uBCF4\uC774\uB3C4\uB85D \uD568\uC73C\uB85C\uC368, \uC6B0\uB9AC\uB294 \uB9C8\uBC95 \uAC19\uC740 \uC774\uD3B8\uD55C CSS \uB9C8\uBC95\uC744 \uD1B5\uD574 \uBD84\uBA85\uD55C \uC774\uBBF8\uC9C0\uB97C \uB9CC\uB4E4\uC5B4 \uB0BC \uC218 \uC788\uC2B5\uB2C8\uB2E4!",-1),v=n("p",null,"\uD558\uC9C0\uB9CC \uC7A0\uAE50, \uC5EC\uAE30\uC11C \uBC18\uC804\uC774 \uC788\uC2B5\uB2C8\uB2E4: \uC774\uBBF8\uC9C0\uB97C \uC2E4\uC81C\uB85C \uB098\uB204\uC9C0\uB294 \uC54A\uC744 \uAC70\uC5D0\uC694. \uB300\uC2E0 \uC774\uBBF8\uC9C0 div\uB4E4\uC744 \uC5EC\uB7FF \uB9CC\uB4E4\uC5B4\uC11C \uC11C\uB85C \uC5F0\uACB0\uD558\uACE0, \uC774\uB4E4\uC758 \uBC30\uACBD \uC704\uCE58\uC640 \uD06C\uAE30\uB97C \uC124\uC815\uD558\uC5EC \uB098\uB780\uD788 \uBC30\uCE58\uD558\uBA74, \uD558\uB098\uC758 \uB2E8\uC77C \uC774\uBBF8\uC9C0\uCC98\uB7FC \uBCF4\uC77C \uC218 \uC788\uB3C4\uB85D \uD560 \uAC81\uB2C8\uB2E4.",-1),m=n("p",null,"\uC694\uCEE8\uB300, \uC6B0\uB9AC\uB294 \uC5EC\uB7EC \uC870\uAC01\uC73C\uB85C \uB098\uB258\uC5B4\uC9C4 \uD558\uB098\uC758 \uC774\uBBF8\uC9C0\uC778 \uAC83\uCC98\uB7FC \uBCF4\uC774\uB294 \uD658\uC0C1\uC744 \uB9CC\uB4E4\uACE0 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB9AC\uACE0 \uADF8 \uB9C8\uBC95 \uAC19\uC740 \uAC83\uC5D0 \uB354\uD574, \uADF8 \uC870\uAC01\uB4E4\uC740 \uC11C\uB85C \uBA40\uC5B4\uC9C0\uACE0 \uB2E4\uC2DC \uBAA8\uC774\uB294 \uB4EF\uD55C \uC560\uB2C8\uBA54\uC774\uC158\uC744 \uAC00\uC9C0\uACE0 \uC788\uC5B4, \uB9E4\uD639\uC801\uC778 \uC2DC\uAC01 \uD6A8\uACFC\uB97C \uB9CC\uB4E4\uC5B4 \uB0C5\uB2C8\uB2E4.",-1),b=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),y=o(`<p>\uC544\uC8FC \uCD5C\uC801\uD654\uB41C \uBC29\uBC95\uB4E4\uC774 \uC788\uC744 \uC218\uB3C4 \uC788\uC9C0\uB9CC, \uB098\uB294 \uC774 \uBC29\uBC95\uC774 \uC7AC\uBBF8\uC788\uACE0 \uB3C4\uC804\uC801\uC774\uB77C\uACE0 \uC0DD\uAC01\uD588\uC5B4.</p><p>\uC790, \uCF54\uB529\uC744 \uC2DC\uC791\uD574\uBCF4\uC790.</p><p>\uD589\uACFC \uC5F4\uC758 \uC218: \uC774 \uD568\uC218\uB294 \uC694\uC18C\uC758 \uCD1D \uC218\uB97C \uAE30\uBC18\uC73C\uB85C \uADF8\uB9AC\uB4DC \uB808\uC774\uC544\uC6C3\uC744 \uBC30\uC5F4\uD558\uB294 \uCD5C\uC801\uC758 \uD589\uACFC \uC5F4\uC758 \uC218\uB97C \uACC4\uC0B0\uD574.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">calculateGridDimensions</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">numberOfPieces</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> GridDimensions <span class="token punctuation">{</span>
  <span class="token keyword">const</span> idealGridSize <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>numberOfPieces<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> columns <span class="token operator">=</span> idealGridSize<span class="token punctuation">;</span>
  <span class="token keyword">let</span> rows <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>numberOfPieces <span class="token operator">/</span> columns<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>columns <span class="token operator">*</span> rows <span class="token operator">&gt;</span> numberOfPieces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    columns <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    rows <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>numberOfPieces <span class="token operator">/</span> columns<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> rows<span class="token punctuation">,</span> columns <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),g=o(`<p>Piece Dimension: \uC774 \uD568\uC218\uB294 \uADF8\uB9AC\uB4DC \uB808\uC774\uC544\uC6C3\uC758 \uCD1D \uB108\uBE44\uC640 \uB192\uC774, \uADF8\uB9AC\uACE0 \uC870\uAC01\uC758 \uC218\uC5D0 \uAE30\uBC18\uD558\uC5EC \uAC01 \uC870\uAC01\uC758 \uCE58\uC218\uB97C \uACC4\uC0B0\uD569\uB2C8\uB2E4. \uBA3C\uC800 calculateGridDimensions \uD568\uC218\uB97C \uC0AC\uC6A9\uD558\uC5EC \uADF8\uB9AC\uB4DC \uCE58\uC218\uB97C \uACB0\uC815\uD55C \uD6C4, \uCD1D \uB108\uBE44\uC640 \uB192\uC774\uB97C \uAC01\uAC01 \uD589 \uC218 \uBC0F \uC5F4 \uC218\uB85C \uB098\uB204\uC5B4 \uAC01 \uC870\uAC01\uC758 \uCE58\uC218\uB97C \uC5BB\uC2B5\uB2C8\uB2E4. \uB9C8\uC9C0\uB9C9\uC73C\uB85C, \uAC01 \uC870\uAC01\uC758 \uB108\uBE44\uC640 \uB192\uC774\uB97C \uAC1D\uCCB4 \uD615\uD0DC\uB85C \uBC18\uD658\uD569\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">calculatePieceDimensions</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">width</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">numberOfPieces</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> PieceDimensions <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> rows<span class="token punctuation">,</span> columns <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">calculateGridDimensions</span><span class="token punctuation">(</span>numberOfPieces<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> pieceWidth <span class="token operator">=</span> width <span class="token operator">/</span> rows<span class="token punctuation">;</span>
  <span class="token keyword">const</span> pieceHeight <span class="token operator">=</span> height <span class="token operator">/</span> columns<span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> pieceWidth<span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> pieceHeight <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Piece Position: \uC774 \uD568\uC218\uB294 \uC870\uAC01\uC758 \uC778\uB371\uC2A4, \uC804\uCCB4 \uC870\uAC01 \uC218, \uADF8\uB9AC\uB4DC \uCE58\uC218\uB97C \uAE30\uBC18\uC73C\uB85C \uADF8\uB9AC\uB4DC \uB0B4\uC5D0\uC11C \uC870\uAC01\uC758 \uC704\uCE58\uB97C \uACC4\uC0B0\uD569\uB2C8\uB2E4. \uC778\uB371\uC2A4\uAC00 \uC720\uD6A8\uD55C\uC9C0 \uD655\uC778\uD55C \uD6C4, \uC870\uAC01\uC758 \uC704\uCE58\uB97C \uADF8\uB9AC\uB4DC \uB0B4\uC5D0\uC11C \uACB0\uC815\uD569\uB2C8\uB2E4 (\uC608: \uC88C\uCE21 \uC0C1\uB2E8, \uC6B0\uCE21 \uD558\uB2E8 \uB4F1).</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">calculatePiecePosition</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">index</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">numberOfPieces</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">gridDimensions</span><span class="token operator">:</span> GridDimensions</span><span class="token punctuation">)</span><span class="token operator">:</span> PiecePosition <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;=</span> numberOfPieces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\uC798\uBABB\uB41C \uC778\uB371\uC2A4\uC785\uB2C8\uB2E4.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> row <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>index <span class="token operator">/</span> gridDimensions<span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> col <span class="token operator">=</span> index <span class="token operator">%</span> gridDimensions<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>

  <span class="token keyword">const</span> isTop <span class="token operator">=</span> row <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isBottom <span class="token operator">=</span> row <span class="token operator">===</span> gridDimensions<span class="token punctuation">.</span>columns <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isLeft <span class="token operator">=</span> col <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> isRight <span class="token operator">=</span> col <span class="token operator">===</span> gridDimensions<span class="token punctuation">.</span>rows <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTop <span class="token operator">&amp;&amp;</span> isLeft<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">TOP_LEFT</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTop <span class="token operator">&amp;&amp;</span> isRight<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">TOP_RIGHT</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isBottom <span class="token operator">&amp;&amp;</span> isLeft<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">BOTTOM_LEFT</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isBottom <span class="token operator">&amp;&amp;</span> isRight<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">BOTTOM_RIGHT</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isLeft<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTop<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">TOP</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isRight<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isBottom<span class="token punctuation">)</span> <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">BOTTOM</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> PiecePosition<span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),w=n("p",null,"\uC704\uCE58\uC5D0 \uB530\uB978 \uC870\uAC01 \uC560\uB2C8\uBA54\uC774\uC158: \uBE14\uB85C\uADF8\uB97C \uAC04\uB2E8\uD558\uAC8C \uC720\uC9C0\uD558\uAE30 \uC704\uD574 GitHub \uB9C1\uD06C\uB97C \uCD94\uAC00\uD588\uC2B5\uB2C8\uB2E4.",-1),h={href:"https://github.com/Saurabh-kayasth/react-img-pieces/blob/master/src/Animations/styles.module.css",target:"_blank",rel:"noopener noreferrer"},f=o(`<p>\uC870\uAC01 \uC2A4\uD0C0\uC77C: \uC774 \uD568\uC218\uB294 \uC870\uAC01\uC774 \uADF8\uB9AC\uB4DC \uB808\uC774\uC544\uC6C3 \uB0B4\uC5D0\uC11C \uC778\uB371\uC2A4, \uCD1D \uB108\uBE44, \uB192\uC774 \uBC0F \uC870\uAC01 \uC218\uC5D0 \uB530\uB77C \uC2A4\uD0C0\uC77C(\uBC30\uACBD \uC704\uCE58 \uBC0F \uD06C\uAE30)\uB97C \uACC4\uC0B0\uD569\uB2C8\uB2E4. \uBA3C\uC800 \uADF8\uB9AC\uB4DC \uCC28\uC6D0\uACFC \uAC01 \uC870\uAC01\uC758 \uCC28\uC6D0\uC744 \uACC4\uC0B0\uD55C \uB2E4\uC74C, \uC870\uAC01\uC744 \uADF8\uB9AC\uB4DC\uC5D0 \uC0C1\uB300\uC801\uC73C\uB85C \uBC30\uCE58\uD55C \uBC30\uACBD \uC704\uCE58\uC640 \uD06C\uAE30\uB97C \uACB0\uC815\uD569\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">calculatePieceStyles</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">index</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">numberOfPieces</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> PieceStyles <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> gridDimensions <span class="token operator">=</span> <span class="token function">calculateGridDimensions</span><span class="token punctuation">(</span>numberOfPieces<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> pieceDimensions <span class="token operator">=</span> <span class="token function">calculatePieceDimensions</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> numberOfPieces<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">rows</span><span class="token operator">:</span> columns<span class="token punctuation">,</span> <span class="token literal-property property">columns</span><span class="token operator">:</span> rows <span class="token punctuation">}</span> <span class="token operator">=</span> gridDimensions<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> pieceWidth<span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> pieceHeight <span class="token punctuation">}</span> <span class="token operator">=</span> pieceDimensions<span class="token punctuation">;</span>

  <span class="token keyword">const</span> row <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>index <span class="token operator">/</span> gridDimensions<span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> col <span class="token operator">=</span> index <span class="token operator">%</span> gridDimensions<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>

  <span class="token keyword">const</span> backgroundSizeX <span class="token operator">=</span> pieceWidth <span class="token operator">*</span> columns<span class="token punctuation">;</span>
  <span class="token keyword">const</span> backgroundSizeY <span class="token operator">=</span> pieceHeight <span class="token operator">*</span> rows<span class="token punctuation">;</span>
  <span class="token keyword">const</span> backgroundSize <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>backgroundSizeX<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>backgroundSizeY<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> shiftXBy <span class="token operator">=</span> columns <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token punctuation">(</span>columns <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> shiftYBy <span class="token operator">=</span> rows <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">100</span> <span class="token operator">/</span> <span class="token punctuation">(</span>rows <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> backgroundPositionX <span class="token operator">=</span> col <span class="token operator">*</span> shiftXBy<span class="token punctuation">;</span>
  <span class="token keyword">const</span> backgroundPositionY <span class="token operator">=</span> row <span class="token operator">*</span> shiftYBy<span class="token punctuation">;</span>
  <span class="token keyword">const</span> backgroundPosition <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>backgroundPositionX<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">% </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>backgroundPositionY<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    backgroundPosition<span class="token punctuation">,</span>
    backgroundSize<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,3),P=o(`<p>\uB9C8\uC9C0\uB9C9 \uB2E8\uACC4\uB85C \uC870\uAC01\uB4E4\uC744 \uD569\uCCD0\uBD05\uC2DC\uB2E4!</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;./Animations/styles.module.css&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  calculateGridDimensions<span class="token punctuation">,</span>
  calculatePieceDimensions<span class="token punctuation">,</span>
  calculatePiecePosition<span class="token punctuation">,</span>
  calculatePieceStyles
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./Animations/utils&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> type AnimationsComponentProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./types&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> ImagePiece <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> AnimationsComponentProps
<span class="token punctuation">)</span><span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">JSX</span><span class="token punctuation">.</span><span class="token parameter">Element</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    imgSrc<span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token constant">CONTAINER_HEIGHT</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token constant">CONTAINER_WIDTH</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pieces</span><span class="token operator">:</span> <span class="token constant">PIECES</span><span class="token punctuation">,</span>
    animationDirection <span class="token operator">=</span> <span class="token string">&#39;normal&#39;</span><span class="token punctuation">,</span>
    animationDuration <span class="token operator">=</span> <span class="token string">&#39;1s&#39;</span><span class="token punctuation">,</span>
    animationIterationCount <span class="token operator">=</span> <span class="token string">&#39;infinite&#39;</span>
  <span class="token punctuation">}</span> <span class="token operator">=</span> props

  <span class="token keyword">function</span> <span class="token function">createNumberArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">result</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token constant">PIECES</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> pieceDimensions <span class="token operator">=</span> <span class="token function">calculatePieceDimensions</span><span class="token punctuation">(</span>
    <span class="token constant">CONTAINER_WIDTH</span><span class="token punctuation">,</span>
    <span class="token constant">CONTAINER_HEIGHT</span><span class="token punctuation">,</span>
    <span class="token constant">PIECES</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div
        className<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">}</span>
        style<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token constant">CONTAINER_WIDTH</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token constant">CONTAINER_HEIGHT</span> <span class="token punctuation">}</span>
      <span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token function">createNumberArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> pieceDimensions

          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div
              key<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span>
              style<span class="token operator">=</span><span class="token punctuation">{</span>
                width<span class="token punctuation">,</span>
                height<span class="token punctuation">,</span>
                animationIterationCount<span class="token punctuation">,</span>
                animationDuration<span class="token punctuation">,</span>
                animationDirection<span class="token punctuation">,</span>
                <span class="token literal-property property">backgroundImage</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>imgSrc<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
                <span class="token operator">...</span><span class="token function">calculatePieceStyles</span><span class="token punctuation">(</span>
                  index<span class="token punctuation">,</span>
                  <span class="token constant">CONTAINER_WIDTH</span><span class="token punctuation">,</span>
                  <span class="token constant">CONTAINER_HEIGHT</span><span class="token punctuation">,</span>
                  <span class="token constant">PIECES</span>
                <span class="token punctuation">)</span>
              <span class="token punctuation">}</span>
              className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>styles<span class="token punctuation">.</span>piece<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
                styles<span class="token punctuation">[</span>
                  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">piece_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">calculatePiecePosition</span><span class="token punctuation">(</span>
                    index<span class="token punctuation">,</span>
                    <span class="token constant">PIECES</span><span class="token punctuation">,</span>
                    <span class="token function">calculateGridDimensions</span><span class="token punctuation">(</span><span class="token constant">PIECES</span><span class="token punctuation">)</span>
                  <span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
                <span class="token punctuation">]</span>
              <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span>
            <span class="token operator">/</span><span class="token operator">&gt;</span>
          <span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://miro.medium.com/v2/resize:fit:1028/1*EmKEdlU7saaqS_2owuuvOQ.gif" alt="\uC774\uBBF8\uC9C0"></p><p><strong>\uACB0\uB860:</strong></p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),_=n("p",null,"\uB9C8\uC9C0\uB9C9\uC73C\uB85C, CSS \uC18D\uC131\uC778 background-size\uC640 background-position\uACFC \uAC19\uC740 \uC18D\uC131\uB4E4\uC774 \uD558\uB098\uC758 \uC774\uBBF8\uC9C0\uB97C \uC774\uB3D9\uD558\uB294 \uC870\uAC01\uB4E4\uC758 \uB3D9\uC801 \uBAA8\uC790\uC774\uD06C\uB85C \uBCC0\uD658\uC2DC\uD0AC \uC218 \uC788\uB2E4\uB294 \uAC83\uC744 \uC0B4\uD3B4\uBCF4\uC558\uC2B5\uB2C8\uB2E4. \uC774\uB7EC\uD55C \uC18D\uC131\uB4E4\uC744 \uCC3D\uC758\uC801\uC73C\uB85C \uC0AC\uC6A9\uD568\uC73C\uB85C\uC368, \uB9E4\uB825\uC801\uC778 \uB3D9\uC791\uC744 \uD558\uB294 \uC774\uBBF8\uC9C0\uB97C \uB9CC\uB4E4\uC5B4\uBCF4\uC558\uC2B5\uB2C8\uB2E4. \uC5EC\uB7EC\uBD84\uB3C4 \uC9C1\uC811 \uC2DC\uB3C4\uD574\uBCF4\uACE0 \uC2F6\uB2E4\uBA74, React \uD504\uB85C\uC81D\uD2B8\uC5D0\uC11C \uC774\uB7EC\uD55C \uC560\uB2C8\uBA54\uC774\uC158\uC744 \uC27D\uAC8C \uB9CC\uB4E4 \uC218 \uC788\uB3C4\uB85D \uB9CC\uB4E0 'react-img-pieces'\uB77C\uB294 npm \uD328\uD0A4\uC9C0\uB97C \uD655\uC778\uD574\uBCF4\uC138\uC694.",-1),T=n("p",null,"\uB2E4\uB9CC, \uC774 \uAE30\uBC95\uC740 \uC2DC\uAC01\uC801\uC73C\uB85C \uB180\uB77C\uC6B4 \uACB0\uACFC\uBB3C\uC744 \uB9CC\uB4E4\uC5B4\uB0B4\uC9C0\uB9CC \uACE0\uB824\uD574\uC57C \uD560 \uBB38\uC81C\uAC00 \uD558\uB098 \uC788\uC2B5\uB2C8\uB2E4. \uC218\uCC9C \uAC1C\uC640 \uAC19\uC774 \uB300\uB7C9\uC758 \uC774\uBBF8\uC9C0 \uC870\uAC01\uC744 \uB2E4\uB8F0 \uB54C \uC131\uB2A5 \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),D=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),E=n("p",null,"\uC77D\uC5B4 \uC8FC\uC154\uC11C \uAC10\uC0AC\uD569\uB2C8\uB2E4! \uCF54\uB529 \uC990\uAE30\uC138\uC694!",-1);function x(S,I){const c=l("ExternalLinkIcon");return s(),u("div",null,[d,v,m,b,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),y,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),g,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),w,n("p",null,[n("a",h,[a("Github"),r(c)])]),f,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),P,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),_,T,D,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),E])}var C=i(k,[["render",x],["__file","index.html.vue"]]);export{C as default};
