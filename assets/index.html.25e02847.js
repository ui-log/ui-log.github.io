import{_ as l}from"./app.d68f74da.js";import{j as i,l as a,m as u,E as t,G as p,p as s,Y as o,C as n,z as r,K as e}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";var k="/assets/HowtouseflyioandTigristodeployaNextjsapp_0.3b189098.png",d="/assets/HowtouseflyioandTigristodeployaNextjsapp_1.69a1dfd5.png",v="/assets/HowtouseflyioandTigristodeployaNextjsapp_2.6512ab73.png",m="/assets/HowtouseflyioandTigristodeployaNextjsapp_3.ba51912d.png",b="/assets/HowtouseflyioandTigristodeployaNextjsapp_4.2c08575c.png",y="/assets/HowtouseflyioandTigristodeployaNextjsapp_5.1971a03b.png",g="/assets/HowtouseflyioandTigristodeployaNextjsapp_6.397b67af.png";const f={},w=n("p",null,[n("img",{src:k,alt:"How to use fly.io and Tigris to deploy a Next.js app"})],-1),_=n("h1",{id:"\u1109\u1169\u1100\u1162",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1109\u1169\u1100\u1162","aria-hidden":"true"},"#"),s(" \uC18C\uAC1C")],-1),h=n("p",null,"\uC624\uB298\uC740 \uC571 \uBC30\uD3EC \uD50C\uB7AB\uD3FC\uC778 fly.io\uC640 \uAE00\uB85C\uBC8C\uC73C\uB85C \uBD84\uC0B0\uB41C S3 \uD638\uD658 \uAC1D\uCCB4 \uC800\uC7A5 \uC11C\uBE44\uC2A4 Tigris\uC5D0 \uB300\uD574 \uBC30\uC6CC\uBCFC \uAC83\uC785\uB2C8\uB2E4. \uB450 \uD50C\uB7AB\uD3FC\uC740 \uBC00\uC811\uD558\uAC8C \uC5F0\uACB0\uB418\uC5B4 \uC788\uC5B4 \uD504\uB85C\uC81D\uD2B8\uC5D0 \uC801\uD569\uD55C \uC120\uD0DD\uC9C0\uC785\uB2C8\uB2E4. fly.io\uB85C\uBD80\uD130 \uC571 \uBC30\uD3EC \uACBD\uD5D8\uACFC Tigris\uB85C\uBD80\uD130 \uAC1D\uCCB4 \uC800\uC7A5 \uAE30\uB2A5\uC744 \uC5BB\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC571 \uBC30\uD3EC\uB294 \uB9E4\uC6B0 \uC9C1\uAD00\uC801\uC774\uAE30 \uB54C\uBB38\uC5D0 \uB300\uC2E0\uC5D0 Tigris\uAC00 \uC0AC\uC6A9\uD558\uB294 \uBC84\uD0B7 \uC800\uC7A5\uC18C\uC5D0 \uB300\uD574 \uAC04\uB2E8\uD788 \uC18C\uAC1C\uD574\uBCF4\uACA0\uC2B5\uB2C8\uB2E4.",-1),E=n("p",null,"Amazon S3 \uBC84\uD0B7\uC740 AWS(Amazon Web Services)\uC758 Simple Storage Service (S3) \uD50C\uB7AB\uD3FC\uC744 \uD1B5\uD574 \uC811\uADFC\uD560 \uC218 \uC788\uB294 \uD37C\uBE14\uB9AD \uD074\uB77C\uC6B0\uB4DC \uC800\uC7A5\uC18C \uC790\uC6D0\uC785\uB2C8\uB2E4. \uC804 \uC138\uACC4\uC5D0 \uBD84\uC0B0\uB418\uC5B4 \uC788\uB294 S3 \uD638\uD658 \uAC1D\uCCB4 \uC800\uC7A5 \uC11C\uBE44\uC2A4 Tigris\uAC00 \uC0AC\uC6A9\uD558\uB294 \uC800\uC9C0\uC5F0 \uC800\uC7A5\uC18C\uB294 \uADF8 \uC911\uC694\uD55C \uAE30\uB2A5\uC785\uB2C8\uB2E4. \uC774\uB294 Tigris\uC5D0\uC11C Amazon\uC758 S3 \uBC84\uD0B7\uC5D0 \uC811\uADFC\uD558\uC5EC \uC800\uC7A5\uC18C \uC694\uAD6C \uC0AC\uD56D\uC744 \uCDA9\uC871\uD560 \uC218 \uC788\uB2E4\uB294 \uAC83\uC744 \uC758\uBBF8\uD569\uB2C8\uB2E4. Tigris\uB294 Fly.io\uC640 \uC644\uC804\uD788 \uD1B5\uD569\uB418\uC5B4 \uC788\uC73C\uBA70, Fly.io\uC758 \uD558\uB4DC\uC6E8\uC5B4\uC5D0\uC11C \uC791\uB3D9\uD558\uB294 flyctl\uACFC \uC644\uC804\uD788 \uD1B5\uD569\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4. Fly.io\uC758 \uBA85\uB839\uC904 \uC778\uD130\uD398\uC774\uC2A4\uC778 flyctl\uC744 \uD1B5\uD574 \uACC4\uC815 \uC0DD\uC131\uBD80\uD130 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uBC30\uD3EC\uAE4C\uC9C0 \uD50C\uB7AB\uD3FC\uC744 \uB2E4\uB8F0 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),S=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),C=n("p",null,"\uC774 \uD50C\uB7AB\uD3FC\uC758 \uAE30\uCD08\uB97C \uBC30\uC6B0\uAE30 \uC704\uD574 \uC0AC\uC6A9\uC790 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uB9CC\uB4E4 \uAC83\uC785\uB2C8\uB2E4. \uC774\uD574\uD558\uAE30 \uC27D\uC2B5\uB2C8\uB2E4. \uC0AC\uC2E4, \uC6B0\uB9AC\uB294 \uC77D\uAE30, \uCD94\uAC00, \uC218\uC815 \uBC0F \uC0AD\uC81C\uC640 \uAC19\uC740 \uC804\uCCB4 CRUD \uC694\uCCAD\uC744 \uC218\uD589\uD560 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4. Next.js\uAC00 \uC8FC\uC694 \uD504\uB808\uC784\uC6CC\uD06C\uAC00 \uB420 \uAC83\uC774\uBA70, \uBCC4\uB3C4\uC758 \uC11C\uBC84\uB97C \uC0DD\uC131\uD558\uC9C0 \uC54A\uACE0\uB3C4 \uD480 \uC2A4\uD0DD \uC571\uC744 \uAD6C\uCD95\uD560 \uC218 \uC788\uB3C4\uB85D \uD574\uC90D\uB2C8\uB2E4.",-1),T=n("p",null,[n("img",{src:d,alt:"\uC774\uBBF8\uC9C0 \uCC38\uC870"})],-1),j=n("p",null,"fly.io\uC640 tigris\uC5D0 \uB300\uD574 \uB354 \uC54C\uC544\uBCF4\uACE0, \uB450 \uD50C\uB7AB\uD3FC\uC5D0 \uACC4\uC815\uC744 \uC0DD\uC131\uD574\uC57C \uD569\uB2C8\uB2E4. \uC5B4\uCA0C\uB4E0, \uC124\uBA85\uC740 \uC5EC\uAE30\uAE4C\uC9C0\uD558\uACE0 \uB2E4\uC74C \uC139\uC158\uC5D0\uC11C \uACC4\uC815\uC744 \uC791\uC131\uD558\uACE0 \uC571\uC744 \uB9CC\uB4E4\uAE30 \uC2DC\uC791\uD569\uC2DC\uB2E4.",-1),U={href:"https://github.com/andrewbaisden/fly-tigris-user-database",target:"_blank",rel:"noopener noreferrer"},I=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),N=n("h1",{id:"fly-io\u110B\u116A-tigris\u110B\u1166\u1109\u1165-\u1100\u1168\u110C\u1165\u11BC-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fly-io\u110B\u116A-tigris\u110B\u1166\u1109\u1165-\u1100\u1168\u110C\u1165\u11BC-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175","aria-hidden":"true"},"#"),s(" fly.io\uC640 Tigris\uC5D0\uC11C \uACC4\uC815 \uB9CC\uB4E4\uAE30")],-1),R=n("p",null,"\uB450 \uD50C\uB7AB\uD3FC \uBAA8\uB450 \uC2DC\uC791\uD558\uB824\uBA74 \uB2E4\uC74C \uB2E8\uACC4\uB97C \uB530\uB77C\uC8FC\uC138\uC694.",-1),P=n("ul",null,[n("li",null,"\uBA3C\uC800, Tigris\uB97C \uD65C\uC6A9\uD558\uB824\uBA74 Fly.io \uACC4\uC815\uC774 \uD544\uC694\uD558\uBBC0\uB85C fly.io\uC5D0 \uACC4\uC815\uC744 \uB9CC\uB4E4\uC5B4\uC57C \uD569\uB2C8\uB2E4."),n("li",null,"\uADF8 \uB2E4\uC74C\uC73C\uB85C, \uCEF4\uD4E8\uD130\uC5D0 flyctl \uBA85\uB839\uC904 \uB3C4\uAD6C\uB97C \uC124\uCE58\uD574\uC57C \uD569\uB2C8\uB2E4. \uC774 \uB3C4\uAD6C\uB294 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uBC30\uD3EC\uD560 \uB54C \uACC4\uC815\uC744 \uC124\uC815\uD558\uB294 \uB370 \uD544\uC218\uC801\uC785\uB2C8\uB2E4.")],-1),x=n("p",null,"\uC790, \uB2E4\uC74C \uB2E8\uACC4\uB85C \uB118\uC5B4\uAC00\uC11C \uD504\uB85C\uC81D\uD2B8\uB97C \uC124\uC815\uD558\uACE0 Tigris \uBC84\uD0B7 \uC2A4\uD1A0\uB9AC\uC9C0\uB97C \uB9CC\uB4E4\uC5B4\uBD05\uC2DC\uB2E4.",-1),L=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),A=e(`<h1 id="\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1111\u1173\u1105\u1169\u110C\u1166\u11A8\u1110\u1173-\u1109\u1165\u11AF\u110C\u1165\u11BC\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1111\u1173\u1105\u1169\u110C\u1166\u11A8\u1110\u1173-\u1109\u1165\u11AF\u110C\u1165\u11BC\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uC0AC\uC6A9\uC790 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uD504\uB85C\uC81D\uD2B8 \uC124\uC815\uD558\uAE30</h1><p>\uD504\uB85C\uC81D\uD2B8\uB97C \uC0DD\uC131\uD560 \uCEF4\uD4E8\uD130 \uB514\uB809\uD1A0\uB9AC\uB85C \uC774\uB3D9\uD55C \uD6C4 fly-tigris-user-database\uB77C\uB294 \uD3F4\uB354\uB97C \uB9CC\uB4E4\uACE0 \uD574\uB2F9 \uD3F4\uB354\uB85C \uC774\uB3D9\uD558\uC138\uC694. \uADF8\uB7F0 \uB2E4\uC74C \uD574\uB2F9 \uD3F4\uB354 \uB0B4\uC5D0\uC11C Next.js \uD504\uB85C\uC81D\uD2B8\uB97C \uC124\uC815\uD558\uAE30 \uC704\uD55C \uBA85\uB839\uC744 \uC2E4\uD589\uD558\uC138\uC694:</p><p>\uC774 \uD504\uB85C\uC81D\uD2B8\uC5D0\uC11C\uB294 Tailwind CSS\uC640 App \uB77C\uC6B0\uD130\uC5D0 \uB300\uD574 &#39;yes&#39;\uB85C \uC120\uD0DD\uD574\uC57C \uD569\uB2C8\uB2E4. \uC774\uAC83\uB4E4\uC774 \uD504\uB85C\uC81D\uD2B8\uC5D0 \uD544\uC694\uD558\uAE30 \uB54C\uBB38\uC785\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npx create<span class="token operator">-</span>next<span class="token operator">-</span>app <span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),D=e(`<p>\uC6B0\uB9AC\uAC00 \uC124\uCE58\uD574\uC57C \uD560 \uD328\uD0A4\uC9C0\uB294 @aws-sdk/client-s3 \uD558\uB098 \uBFD0\uC774\uC5D0\uC694. \uC774 \uD328\uD0A4\uC9C0\uB294 \uC6B0\uB9AC\uC758 \uBC84\uD0B7\uC5D0 \uC5F0\uACB0\uD558\uAE30 \uC704\uD574 \uD544\uC694\uD569\uB2C8\uB2E4. \uB2E4\uC74C \uBA85\uB839\uC5B4\uB85C \uC124\uCE58\uD558\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install @aws<span class="token operator">-</span>sdk<span class="token operator">/</span>client<span class="token operator">-</span>s3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\uC88B\uC544\uC694, \uC774\uC81C \uBC29\uAE08 \uB9CC\uB4E0 \uD504\uB85C\uC81D\uD2B8\uB97C \uC704\uD55C \uBC84\uD0B7\uC744 \uC0DD\uC131\uD560 \uC2DC\uAC04\uC774\uC5D0\uC694. \uC5EC\uAE30 https://www.tigrisdata.com/docs/get-started/\uC5D0\uC11C \uACF5\uC2DD \uBB38\uC11C\uB97C \uCC38\uACE0\uD574\uC8FC\uC138\uC694.</p><p>\uB2E4\uC74C \uBA85\uB839\uC5B4\uB97C \uC2E4\uD589\uD574 \uBC84\uD0B7\uC744 \uC0DD\uC131\uD558\uC138\uC694:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),q=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\uD50C\uB77C\uC774 \uC2A4\uD1A0\uB9AC\uC9C0 \uC0DD\uC131
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\uC774\uC81C \uC124\uC815 \uD654\uBA74\uC5D0\uC11C \uBC84\uD0B7\uC758 \uC774\uB984\uC744 \uC120\uD0DD\uD558\uC138\uC694. \uC774\uB984\uC740 \uACE0\uC720\uD574\uC57C \uD558\uBBC0\uB85C \uB2E4\uB978 \uC0AC\uB78C\uC774 \uC120\uD0DD\uD55C \uC774\uB984\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC744 \uAC70\uC5D0\uC694. \uC774\uC81C \uAC00\uC7A5 \uC911\uC694\uD55C \uB2E8\uACC4\uC778\uB370\uC694, \uC5EC\uAE30 \uC608\uC2DC\uCC98\uB7FC AWS \uBC0F \uBC84\uD0B7 \uBE44\uBC00\uC744 \uAC00\uC9C0\uACE0 \uC788\uC5B4\uC57C \uD574\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">AWS_ACCESS_KEY_ID</span><span class="token operator">:</span> \uB2F9\uC2E0\uC758 \uD0A4
<span class="token constant">AWS_ENDPOINT_URL_S3</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>fly<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>tigris<span class="token punctuation">.</span>dev
<span class="token constant">AWS_REGION</span><span class="token operator">:</span> auto
<span class="token constant">AWS_SECRET_ACCESS_KEY</span><span class="token operator">:</span> \uB2F9\uC2E0\uC758 \uBE44\uBC00 \uC561\uC138\uC2A4
<span class="token constant">BUCKET_NAME</span><span class="token operator">:</span> \uB2F9\uC2E0\uC758 \uBC84\uD0B7 \uC774\uB984
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB2F9\uC2E0\uC758 Next.js \uD504\uB85C\uC81D\uD2B8 \uB8E8\uD2B8\uC5D0 .env.local \uD30C\uC77C\uC744 \uC0DD\uC131\uD558\uACE0, \uC774 \uBE44\uBC00 \uD658\uACBD \uBCC0\uC218\uB97C \uBAA8\uB450 \uBCF5\uC0AC\uD574\uC11C \uBD99\uC5EC\uB123\uC73C\uC138\uC694. \uC544\uC9C1 \uB05D\uB098\uC9C0 \uC54A\uC558\uC5B4\uC694. \uC774 \uD658\uACBD \uBCC0\uC218\uB4E4\uC774 \uC6B0\uB9AC\uC758 Next.js \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC548\uC5D0\uC11C \uC81C\uB300\uB85C \uC791\uB3D9\uD558\uB824\uBA74, \uADF8\uB4E4\uC758 \uC774\uB984\uC744 \uACF5\uAC1C\uC801\uC73C\uB85C \uB9CC\uB4E4\uC5B4\uC57C \uD574\uC694. \uC544\uB798 \uC608\uC2DC\uB97C \uCC38\uACE0\uD558\uACE0 .env.local \uD30C\uC77C\uC744 \uC218\uC815\uD574\uC8FC\uC138\uC694. \uB610\uD55C \uB9E8 \uC704\uC5D0 \uB85C\uCEEC\uD638\uC2A4\uD2B8\uB97C \uC704\uD55C \uBCC4\uB3C4\uC758 \uD658\uACBD \uBCC0\uC218\uB97C \uC0DD\uC131\uD574\uC8FC\uC138\uC694. \uCF54\uB4DC\uBCA0\uC774\uC2A4\uB97C fly.io\uC5D0 \uC5C5\uB85C\uB4DC\uD560 \uB54C NEXT_PUBLIC_SECRET_HOST \uD658\uACBD \uBCC0\uC218\uB97C \uC628\uB77C\uC778 \uACBD\uB85C\uB85C \uBCC0\uACBD\uD560 \uAC70\uC5D0\uC694.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),B=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">NEXT_PUBLIC_SECRET_HOST</span><span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3000</span>

<span class="token constant">NEXT_PUBLIC_SECRET_AWS_ACCESS_KEY_ID</span><span class="token operator">:</span> \uB2F9\uC2E0\uC758 \uD0A4
<span class="token constant">NEXT_PUBLIC_SECRET_AWS_ENDPOINT_URL_S3</span><span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>fly<span class="token punctuation">.</span>storage<span class="token punctuation">.</span>tigris<span class="token punctuation">.</span>dev
<span class="token constant">NEXT_PUBLIC_SECRET_AWS_REGION</span><span class="token operator">:</span> auto
<span class="token constant">NEXT_PUBLIC_SECRET_AWS_SECRET_ACCESS_KEY</span><span class="token operator">:</span> \uB2F9\uC2E0\uC758 \uC2DC\uD06C\uB9BF \uC561\uC138\uC2A4
<span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token operator">:</span> \uB2F9\uC2E0\uC758 \uBC84\uD0B7 \uC774\uB984
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uD604\uC7AC \uD2F0\uADF8\uB9AC\uC2A4 \uBB38\uC11C \uD398\uC774\uC9C0\uC5D0 \uB4E4\uC5B4\uAC00\uC11C \uB300\uC2DC\uBCF4\uB4DC \uBC84\uD2BC\uC744 \uD074\uB9AD\uD558\uACE0 \uACC4\uC815\uC5D0 \uB85C\uADF8\uC778\uD558\uBA74 \uB2E4\uC74C\uC758 \uC608\uC2DC\uCC98\uB7FC \uC0C8\uB85C \uC0DD\uC131\uD55C \uBC84\uD0B7\uC744 \uBCFC \uC218 \uC788\uC5B4\uC694:</p><img src="`+v+'"><p>\uC88B\uC544\uC694, \uCCAB \uBC88\uC9F8 \uB2E8\uACC4\uB97C \uB9C8\uCCE4\uC5B4\uC694. \uC628\uB77C\uC778\uC73C\uB85C \uC571 \uB370\uC774\uD130\uB97C \uC800\uC7A5\uD560 \uBC84\uD0B7\uC774 \uC788\uC73C\uB2C8 \uB2E4\uC74C \uC139\uC158\uC5D0\uC11C \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uB9CC\uB4DC\uB294 \uAC83\uC744 \uC2DC\uC791\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.```</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),O=e('<h1 id="\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u110B\u1162\u1111\u1173\u11AF\u1105\u1175\u110F\u1166\u110B\u1175\u1109\u1167\u11AB-\u1100\u116E\u110E\u116E\u11A8\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u110B\u1162\u1111\u1173\u11AF\u1105\u1175\u110F\u1166\u110B\u1175\u1109\u1167\u11AB-\u1100\u116E\u110E\u116E\u11A8\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uC0AC\uC6A9\uC790 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uAD6C\uCD95\uD558\uAE30</h1><p>\uC548\uB155\uD558\uC138\uC694! \uC5EC\uAE30\uC11C\uB294 \uB450 \uAC00\uC9C0 \uC139\uC158\uC73C\uB85C \uB098\uB220\uC11C \uC9C4\uD589\uD560 \uAC70\uC608\uC694. \uBA3C\uC800 \uC11C\uBC84\uB97C \uAD6C\uCD95\uD558\uACE0 \uC2E4\uD589\uD558\uC5EC CRUD \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB97C \uD14C\uC2A4\uD2B8\uD560 \uAC70\uC5D0\uC694. \uADF8\uB7F0 \uB2E4\uC74C, \uD504\uB860\uD2B8 \uC5D4\uB4DC\uB97C \uB9C8\uBB34\uB9AC\uD558\uACA0\uC2B5\uB2C8\uB2E4.</p><h2 id="\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1109\u1165\u1107\u1165-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1109\u1165\u1107\u1165-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175" aria-hidden="true">#</a> \uC0AC\uC6A9\uC790 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC11C\uBC84 \uB9CC\uB4E4\uAE30</h2><p>\uBA3C\uC800 \uBC31\uC5D4\uB4DC \uC544\uD0A4\uD14D\uCC98\uB97C \uB9CC\uB4E4\uC5B4\uBD05\uC2DC\uB2E4. CRUD \uC694\uCCAD\uB9C8\uB2E4 1\uAC1C\uC529 4\uAC1C\uC758 \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB97C \uB9CC\uB4E4 \uAC83\uC774\uC5D0\uC694. \uB610\uD55C \uC0AC\uC6A9\uC790\uB97C \uAC1D\uCCB4 \uC800\uC7A5\uC18C\uC5D0\uC11C \uAC00\uC838\uC624\uB294 \uBA87 \uAC00\uC9C0 \uD568\uC218\uAC00 \uC788\uB294 \uB3C4\uC6B0\uBBF8 \uD30C\uC77C\uC774 \uD544\uC694\uD569\uB2C8\uB2E4. \uD504\uB85C\uC81D\uD2B8\uC758 \uB8E8\uD2B8 \uB514\uB809\uD1A0\uB9AC\uB85C \uC774\uB3D9\uD558\uC9C0 \uC54A\uC558\uB2E4\uBA74 \uC544\uB798 \uBA85\uB839\uC744 \uC2E4\uD589\uD558\uC5EC \uBAA8\uB4E0 \uD30C\uC77C\uACFC \uD3F4\uB354\uB97C \uBE60\uB974\uAC8C \uC124\uC815\uD574\uC8FC\uC138\uC694:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),K=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>cd src<span class="token operator">/</span>app
mkdir api
mkdir api<span class="token operator">/</span>deleteuser api<span class="token operator">/</span>getusers api<span class="token operator">/</span>postuser api<span class="token operator">/</span>updateuser
touch api<span class="token operator">/</span>deleteuser<span class="token operator">/</span>route<span class="token punctuation">.</span>js
touch api<span class="token operator">/</span>getusers<span class="token operator">/</span>route<span class="token punctuation">.</span>js
touch api<span class="token operator">/</span>postuser<span class="token operator">/</span>route<span class="token punctuation">.</span>js
touch api<span class="token operator">/</span>updateuser<span class="token operator">/</span>route<span class="token punctuation">.</span>js
mkdir helpers
touch helpers<span class="token operator">/</span>getUsers<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uBE60\uB974\uAC8C \uC9C4\uD589\uB418\uC5C8\uB124\uC694! \uC774\uC81C 5\uAC1C \uD30C\uC77C\uC5D0 \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uAE30\uB9CC \uD558\uBA74 \uBC31\uC5D4\uB4DC API\uAC00 \uD14C\uC2A4\uD2B8 \uC900\uBE44\uAC00 \uB05D\uB0A9\uB2C8\uB2E4.</p><p>\uBA3C\uC800 helpers \uD30C\uC77C\uC744 \uC218\uC815\uD574\uBD05\uC2DC\uB2E4. helpers/getUsers.js \uD30C\uC77C\uC5D0 \uC774 \uCF54\uB4DC\uB97C \uB123\uC5B4\uC8FC\uC138\uC694. \uC55E\uC11C \uB9D0\uD588\uB4EF\uC774 \uC774 \uD30C\uC77C\uC5D0\uB294 \uC0AC\uC6A9\uC790\uB97C \uAC00\uC838\uC624\uACE0, \uC774\uBA54\uC77C \uB610\uB294 ID\uC5D0 \uB530\uB77C \uC0AC\uC6A9\uC790\uB97C \uAC00\uC838\uC624\uB294 \uD568\uC218\uAC00 \uB4E4\uC5B4 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  S3Client<span class="token punctuation">,</span>
  ListObjectsV2Command<span class="token punctuation">,</span>
  GetObjectCommand<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aws-sdk/client-s3&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">streamToString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">stream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> chunks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> chunks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>chunks<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchAllUsersFromS3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> s3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">S3Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">region</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_REGION</span><span class="token punctuation">,</span>
      <span class="token literal-property property">endpoint</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ENDPOINT_URL_S3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">accessKeyId</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ACCESS_KEY_ID</span><span class="token punctuation">,</span>
        <span class="token literal-property property">secretAccessKey</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_SECRET_ACCESS_KEY</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> commandDetails <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListObjectsV2Command</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
      <span class="token literal-property property">MaxKeys</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> Contents <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>commandDetails<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;List Result&#39;</span><span class="token punctuation">,</span> Contents<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Contents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;no users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
        Contents<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> getObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetObjectCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
            <span class="token literal-property property">Key</span><span class="token operator">:</span> item<span class="token punctuation">.</span>Key<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> <span class="token punctuation">{</span> Body <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>getObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">streamToString</span><span class="token punctuation">(</span>Body<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">const</span> userObject <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Data&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> userObject<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> users<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getUserById</span><span class="token punctuation">(</span><span class="token parameter">users<span class="token punctuation">,</span> userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>users<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;no users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>id <span class="token operator">===</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getUserByIdEmail</span><span class="token punctuation">(</span><span class="token parameter">users<span class="token punctuation">,</span> email</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>users<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;no users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> users<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>email<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> email<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),X=e(`<p>\uC54C\uACA0\uC5B4\uC694, \uC774\uC81C\uB294 \uACBD\uB85C\uB9CC \uB0A8\uC558\uB124\uC694. \uC0AC\uC6A9\uC790\uB4E4\uC744 Tigris \uBC84\uD0B7\uC5D0\uC11C \uBAA8\uB450 \uAC00\uC838\uC62C GET \uACBD\uB85C\uB97C \uB9CC\uB4E4\uC5B4 \uBCFC \uAC70\uC5D0\uC694. \uADF8\uB7EC\uB2C8 getusers/route.js \uD30C\uC77C\uC5D0 \uC774 \uCF54\uB4DC\uB97C \uB123\uC5B4\uBCF4\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  S3Client<span class="token punctuation">,</span>
  ListObjectsV2Command<span class="token punctuation">,</span>
  GetObjectCommand<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aws-sdk/client-s3&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">GET</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">streamToString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">stream</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> chunks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> chunks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
      stream<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span>Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>chunks<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> s3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">S3Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">region</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_REGION</span><span class="token punctuation">,</span>
      <span class="token literal-property property">endpoint</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ENDPOINT_URL_S3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">accessKeyId</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ACCESS_KEY_ID</span><span class="token punctuation">,</span>
        <span class="token literal-property property">secretAccessKey</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_SECRET_ACCESS_KEY</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> listParams <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
      <span class="token literal-property property">MaxKeys</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListObjectsV2Command</span><span class="token punctuation">(</span>listParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> Contents <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;List Result&#39;</span><span class="token punctuation">,</span> Contents<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Contents <span class="token operator">||</span> Contents<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;No users found&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;No users found&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">404</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> users <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
      Contents<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> getObjectParams <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
          <span class="token literal-property property">Key</span><span class="token operator">:</span> item<span class="token punctuation">.</span>Key<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> getObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetObjectCommand</span><span class="token punctuation">(</span>getObjectParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> Body <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>getObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">streamToString</span><span class="token punctuation">(</span>Body<span class="token punctuation">)</span><span class="token punctuation">;</span>

        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Backend API GET Data:&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span>
      <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> e<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">&#39;Unknown error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB2E4\uC74C\uC740 POST \uACBD\uB85C\uC5D0\uC694. \uC5EC\uAE30\uC11C\uB294 \uB370\uC774\uD130\uB97C Tigris \uBC84\uD0B7\uC5D0 \uBCF4\uB0B4\uB294 \uC791\uC5C5\uC744 \uD560 \uAC70\uC5D0\uC694. \uADF8 \uCF54\uB4DC\uB97C postuser/route.js \uD30C\uC77C\uC5D0 \uB123\uC5B4\uBCF4\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> fetchAllUsersFromS3<span class="token punctuation">,</span> getUserByIdEmail <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../helpers/getUsers&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> S3Client<span class="token punctuation">,</span> PutObjectCommand <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aws-sdk/client-s3&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">POST</span><span class="token punctuation">(</span><span class="token parameter">req</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> firstname<span class="token punctuation">,</span> lastname<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> req<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> firstname<span class="token punctuation">,</span> lastname<span class="token punctuation">,</span> email<span class="token punctuation">,</span> password<span class="token punctuation">,</span> id <span class="token punctuation">}</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Request body data&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> allUsers <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchAllUsersFromS3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;all users&#39;</span><span class="token punctuation">,</span> allUsers<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> existingUser <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserByIdEmail</span><span class="token punctuation">(</span>allUsers<span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>existingUser<span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>existingUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Email address already in use&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> s3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">S3Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">region</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_REGION</span><span class="token punctuation">,</span>
      <span class="token literal-property property">endpoint</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ENDPOINT_URL_S3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">accessKeyId</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ACCESS_KEY_ID</span><span class="token punctuation">,</span>
        <span class="token literal-property property">secretAccessKey</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_SECRET_ACCESS_KEY</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> commandDetails <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PutObjectCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">Body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
      <span class="token literal-property property">Key</span><span class="token operator">:</span> email<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>commandDetails<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;User added&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Failed to create user&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),F=e(`<p>\uC774\uC5B4\uC11C UPDATE \uB8E8\uD2B8\uB97C \uB530\uB77C\uAC00\uBA74 \uC774 \uCF54\uB4DC\uB97C \uD1B5\uD574 \uBC84\uD0B7 \uB0B4\uC758 \uB370\uC774\uD130\uB97C \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC774 \uCF54\uB4DC\uB294 updateuser/route.js\uC5D0 \uB4E4\uC5B4\uAC11\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getUserById<span class="token punctuation">,</span> fetchAllUsersFromS3 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../helpers/getUsers&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
  S3Client<span class="token punctuation">,</span>
  DeleteObjectCommand<span class="token punctuation">,</span>
  PutObjectCommand<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aws-sdk/client-s3&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">PUT</span><span class="token punctuation">(</span><span class="token parameter">req</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> firstname<span class="token punctuation">,</span> lastname<span class="token punctuation">,</span> email<span class="token punctuation">,</span> originalEmail<span class="token punctuation">,</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> req<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;request data&#39;</span><span class="token punctuation">,</span> firstname<span class="token punctuation">,</span> lastname<span class="token punctuation">,</span> email<span class="token punctuation">,</span> originalEmail<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> allUsers <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchAllUsersFromS3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;all users&#39;</span><span class="token punctuation">,</span> allUsers<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> userToUpdate <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserById</span><span class="token punctuation">(</span>allUsers<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;user to update&#39;</span><span class="token punctuation">,</span> userToUpdate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> user <span class="token operator">=</span> allUsers<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> user<span class="token punctuation">.</span>id <span class="token operator">===</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> userEmail <span class="token operator">=</span> user <span class="token operator">?</span> user<span class="token punctuation">.</span>email <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;User Email&#39;</span><span class="token punctuation">,</span> userEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userToUpdate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;User not found&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>originalEmail <span class="token operator">||</span> <span class="token operator">!</span>email<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Both originalEmail and email are required for update&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span> firstname<span class="token punctuation">,</span> lastname<span class="token punctuation">,</span> email<span class="token punctuation">,</span> id <span class="token punctuation">}</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Updated data&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> s3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">S3Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">region</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_REGION</span><span class="token punctuation">,</span>
      <span class="token literal-property property">endpoint</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ENDPOINT_URL_S3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">accessKeyId</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ACCESS_KEY_ID</span><span class="token punctuation">,</span>
        <span class="token literal-property property">secretAccessKey</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_SECRET_ACCESS_KEY</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Original email&#39;</span><span class="token punctuation">,</span> originalEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;New email&#39;</span><span class="token punctuation">,</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>userEmail <span class="token operator">===</span> originalEmail<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;The emails are the same so its a match&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> deleteCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteObjectCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
        <span class="token literal-property property">Key</span><span class="token operator">:</span> originalEmail<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>deleteCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> putCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PutObjectCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">Body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
        <span class="token literal-property property">Key</span><span class="token operator">:</span> email<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>putCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;User updated successfully&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error: The emails do not match&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Failed to update user&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB0A8\uC740 \uAC83\uC740 DELETE \uB8E8\uD2B8\uC778\uB370, \uC774\uAC83\uC740 \uBC84\uD0B7\uC5D0\uC11C \uB370\uC774\uD130\uB97C \uC81C\uAC70\uD558\uB294 \uB370 \uC0AC\uC6A9\uB429\uB2C8\uB2E4. deleteuser/route.js\uC5D0 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> S3Client<span class="token punctuation">,</span> DeleteObjectCommand <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@aws-sdk/client-s3&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> fetchAllUsersFromS3<span class="token punctuation">,</span> getUserById <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../helpers/getUsers&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">DELETE</span><span class="token punctuation">(</span><span class="token parameter">req</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token keyword">await</span> req<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Id&#39;</span><span class="token punctuation">,</span> id<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> allUsers <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchAllUsersFromS3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;all users&#39;</span><span class="token punctuation">,</span> allUsers<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> userToDelete <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserById</span><span class="token punctuation">(</span>allUsers<span class="token punctuation">,</span> id<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;user to delete&#39;</span><span class="token punctuation">,</span> userToDelete<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userToDelete<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;User not found&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> userEmail <span class="token operator">=</span> userToDelete<span class="token punctuation">.</span>email<span class="token punctuation">;</span>
    <span class="token keyword">const</span> s3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">S3Client</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">region</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_REGION</span><span class="token punctuation">,</span>
      <span class="token literal-property property">endpoint</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ENDPOINT_URL_S3</span><span class="token punctuation">,</span>
      <span class="token literal-property property">credentials</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">accessKeyId</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_ACCESS_KEY_ID</span><span class="token punctuation">,</span>
        <span class="token literal-property property">secretAccessKey</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_AWS_SECRET_ACCESS_KEY</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> deleteCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteObjectCommand</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">Bucket</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NEXT_PUBLIC_SECRET_BUCKET_NAME</span><span class="token punctuation">,</span>
      <span class="token literal-property property">Key</span><span class="token operator">:</span> userEmail<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> s3<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>deleteCommand<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;User deleted successfully&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Failed to delete user&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),W=n("p",null,"\uD14C\uC774\uBE14 \uD0DC\uADF8\uB97C \uB9C8\uD06C\uB2E4\uC6B4 \uD615\uC2DD\uC73C\uB85C \uBCC0\uACBD\uD574 \uC8FC\uC138\uC694.",-1),M=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),G=n("p",null,[n("img",{src:m,alt:"How to use fly.io and Tigris to deploy a Next.js app"})],-1),Y=n("p",null,"GET requests are pretty easy. Just go to http://localhost:3000/api/getusers.",-1),H=n("p",null,"Doing POST Requests",-1),J=n("p",null,[n("img",{src:b,alt:"How to use fly.io and Tigris to deploy a Next.js app"})],-1),V=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),$=n("p",null,"POST \uC694\uCCAD\uC740 \uC5EC\uAE30\uC11C \uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4 http://localhost:3000/api/postuser.",-1),z=n("p",null,"PUT \uC694\uCCAD \uC218\uD589\uD558\uAE30",-1),Q=n("p",null,[n("img",{src:y,alt:"\uC774\uBBF8\uC9C0"})],-1),Z=n("p",null,"PUT \uC694\uCCAD\uC740 \uC774 \uACBD\uB85C\uB85C \uC774\uB3D9\uD558\uC138\uC694 http://localhost:3000/api/updateuser. \uC911\uC694\uD55C \uC810\uC740 ID\uC5D0 \uD574\uB2F9\uD558\uB294 \uC6D0\uB798 \uC774\uBA54\uC77C \uC8FC\uC18C\uB97C \uAF2D \uC785\uB825\uD574\uC57C \uD569\uB2C8\uB2E4. \uADF8\uB807\uC9C0 \uC54A\uC73C\uBA74 \uC791\uB3D9\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uADF8\uB9AC\uACE0 \uD504\uB860\uD2B8 \uC5D4\uB4DC\uC5D0\uC11C\uB3C4 \uC774\uAC83\uC744 \uAE30\uC5B5\uD574 \uC8FC\uC138\uC694, \uC65C\uB0D0\uD558\uBA74 \uAE30\uBCF8 \uC624\uB958 \uCC98\uB9AC\uB9CC \uAD6C\uD604\uB418\uC5B4 \uC788\uAE30 \uB54C\uBB38\uC785\uB2C8\uB2E4.",-1),nn=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),sn=n("p",null,"DELETE \uC694\uCCAD \uBCF4\uB0B4\uAE30",-1),an=n("p",null,[n("img",{src:g,alt:"\uC774\uBBF8\uC9C0"})],-1),tn=n("p",null,"DELETE \uC694\uCCAD\uC740 http://localhost:3000/api/deleteuser\uC5D0\uC11C \uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),pn=n("p",null,"\uC88B\uC544\uC694, \uC774\uC81C \uBC31\uC5D4\uB4DC\uB294 \uC644\uBCBD\uD558\uAC8C \uC791\uB3D9\uD574\uC57C \uD569\uB2C8\uB2E4. \uC774\uC81C \uD504\uB860\uD2B8\uC5D4\uB4DC\uB9CC \uB0A8\uC558\uB124\uC694. \uADF8\uB7EC\uBA74 \uC628\uB77C\uC778\uC5D0\uC11C \uC571\uC744 fly.io\uC5D0 \uBC30\uD3EC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),on=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),en=e(`<h2 id="\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-ui-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1109\u1161\u110B\u116D\u11BC\u110C\u1161-\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-ui-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175" aria-hidden="true">#</a> \uC0AC\uC6A9\uC790 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 UI \uB9CC\uB4E4\uAE30</h2><p>\uC774\uC81C \uD504\uB860\uD2B8\uC5D4\uB4DC \uC791\uC5C5\uC5D0\uC11C\uB294 4\uAC1C\uC758 \uC0AC\uC6A9\uC790 \uC815\uC758 \uD6C5\uC744 \uB9CC\uB4E4\uAE30\uB9CC \uD558\uBA74 \uB429\uB2C8\uB2E4. \uAC01\uAC01\uC774 \uC790\uBA85\uD569\uB2C8\uB2E4. \uC774\uB7EC\uD55C \uD6C5\uC740 CRUD \uC694\uCCAD\uC744 \uC218\uD589\uD558\uBA70 \uADF8\uAC8C \uC804\uBD80\uC785\uB2C8\uB2E4. \uADF8 \uC678\uC5D0\uB3C4 \uBA87 \uAC00\uC9C0 \uD30C\uC77C\uC744 \uC218\uC815\uD558\uC5EC Tailwind CSS \uC2A4\uD0C0\uC77C\uC774 \uC791\uB3D9\uD558\uB3C4\uB85D \uB9CC\uB4E0 \uB2E4\uC74C \uD504\uB860\uD2B8\uC5D4\uB4DC \uAD6C\uC131 \uC694\uC18C\uB97C \uB9C8\uBB34\uB9AC\uD558\uBA74 \uB429\uB2C8\uB2E4. \uC81C\uC791 \uB2E8\uACC4\uC758 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0\uC11C\uB294 UI\uC640 \uB85C\uC9C1\uC744\uC704\uD55C \uBAA8\uB4E0 \uCEF4\uD3EC\uB10C\uD2B8\uB97C \uB9CC\uB4DC\uB294 \uAC83\uC774 \uD604\uBA85\uD558\uC9C0\uB9CC,\uC774 \uD29C\uD1A0\uB9AC\uC5BC\uC5D0\uC11C\uB294 \uBAA8\uB4E0 \uBA54\uC778 \uCF54\uB4DC\uB97C \uD558\uB098\uC758 \uD30C\uC77C\uC5D0 \uB123\uC5B4 \uB530\uB85C \uCEF4\uD3EC\uB10C\uD2B8\uB97C \uAD6C\uCD95\uD558\uB294 \uB370 \uC624\uB79C \uC2DC\uAC04\uC744 \uC18C\uBE44\uD558\uC9C0 \uC54A\uC544\uB3C4 \uB418\uAC8C \uD569\uB2C8\uB2E4.</p><p>\uC2DC\uC791\uD558\uAE30 \uC804\uC5D0 \uB8E8\uD2B8 \uD504\uB85C\uC81D\uD2B8 \uD3F4\uB354\uC5D0\uC11C \uC774 \uC2A4\uD06C\uB9BD\uD2B8\uB97C \uC2E4\uD589\uD558\uC5EC \uC0AC\uC6A9\uC790 \uC815\uC758 \uD6C5\uC744\uC704\uD55C \uD504\uB85C\uC81D\uD2B8 \uD3F4\uB354 \uAD6C\uC870\uB97C \uC124\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>cd src<span class="token operator">/</span>app
mkdir hooks
touch hooks<span class="token operator">/</span>useDelete<span class="token punctuation">.</span>js
touch hooks<span class="token operator">/</span>useFetch<span class="token punctuation">.</span>js
touch hooks<span class="token operator">/</span>usePost<span class="token punctuation">.</span>js
touch hooks<span class="token operator">/</span>useUpdate<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),cn=e(`<p>\uC9C0\uAE08 \uD3F4\uB354\uB294 \uB05D\uB0AC\uC73C\uB2C8, \uCF54\uB4DC\uBCA0\uC774\uC2A4\uB97C \uC644\uC131\uD558\uAE30 \uC804\uC5D0 Tailwind CSS \uBC0F \uC2A4\uD0C0\uC77C\uB9C1\uC744 \uC704\uD55C \uC124\uC815\uC744 \uBE68\uB9AC \uD574\uBD05\uC2DC\uB2E4.</p><p>\uAE00\uB85C\uBC8C.css \uD30C\uC77C\uC758 \uBAA8\uB4E0 \uCF54\uB4DC\uB97C \uB2E4\uC74C\uC73C\uB85C \uAD50\uCCB4\uD558\uC2ED\uC2DC\uC624. \uC774 \uCF54\uB4DC\uB294 \uB2E8\uC21C\uD788 \uBC30\uACBD\uC0C9\uC744 \uC124\uC815\uD569\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>@tailwind base<span class="token punctuation">;</span>
@tailwind components<span class="token punctuation">;</span>
@tailwind utilities<span class="token punctuation">;</span>

body <span class="token punctuation">{</span>
  <span class="token literal-property property">background</span><span class="token operator">:</span> #eeeff1<span class="token punctuation">;</span>
  font<span class="token operator">-</span>size<span class="token operator">:</span> 16px<span class="token punctuation">;</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> #0e0e0e<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uC81C layout.js\uC5D0\uC11C\uB3C4 \uB3D9\uC77C\uD55C \uC791\uC5C5\uC744 \uC218\uD589\uD558\uACA0\uC2B5\uB2C8\uB2E4. \uB2E8\uC9C0 Arsenal \uD3F0\uD2B8\uB97C \uC0AC\uC6A9\uD560 \uC608\uC815\uC785\uB2C8\uB2E4:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),ln=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Arsenal <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/font/google&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&#39;./globals.css&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> arsenal <span class="token operator">=</span> <span class="token function">Arsenal</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">weight</span><span class="token operator">:</span> <span class="token string">&#39;400&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">subsets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;latin&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> metadata <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;Create Next App&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">&#39;Generated by create next app&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">RootLayout</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;en&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>body className<span class="token operator">=</span><span class="token punctuation">{</span>arsenal<span class="token punctuation">.</span>className<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8\uB7FC \uB2E4\uC74C\uC73C\uB85C, \uC774 \uD6C5\uC744 \uB9C8\uBB34\uB9AC\uD558\uACA0\uC2B5\uB2C8\uB2E4. \uBA3C\uC800 useFetch.js\uC5D0 \uB2E4\uC74C \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useFetch</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setIsLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> pollInterval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">clearInterval</span><span class="token punctuation">(</span>pollInterval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>url<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> error<span class="token punctuation">,</span> isLoading <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uC81C usePost\uC5D0 \uC774 \uCF54\uB4DC\uB97C \uCD94\uAC00\uD558\uC138\uC694:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),un=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">usePost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setIsLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>response<span class="token punctuation">,</span> setResponse<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">postRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> formData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setError</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setResponse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> responseData <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setResponse</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> isLoading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> postRequest <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB2E4\uC74C\uC740 useUpdate.js\uC774\uBA70, \uC544\uB798 \uCF54\uB4DC\uB97C \uBC1B\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setIsLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>response<span class="token punctuation">,</span> setResponse<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">updateRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> formData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setError</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setResponse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> responseData <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setResponse</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> isLoading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> updateRequest <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB9C8\uC9C0\uB9C9\uC73C\uB85C useDelete.js\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uC5EC\uAE30\uC5D0 \uC788\uB294 \uCF54\uB4DC\uC785\uB2C8\uB2E4:\`\`\`</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),rn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isLoading<span class="token punctuation">,</span> setIsLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>response<span class="token punctuation">,</span> setResponse<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">const</span> <span class="token function-variable function">deleteRequest</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> formData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setError</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setResponse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      <span class="token keyword">const</span> responseData <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setResponse</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">setError</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">{</span> isLoading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> response<span class="token punctuation">,</span> deleteRequest <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB9C8\uCE68\uB0B4, \uC774 \uD398\uC774\uC9C0.js \uD30C\uC77C\uC774 \uC774 \uBC29\uB300\uD55C \uCF54\uB4DC \uC2A4\uB2C8\uD3AB\uC744 \uBC1B\uAC8C \uB420 \uAC83\uC785\uB2C8\uB2E4. \uC774 \uBE60\uB978 \uD29C\uD1A0\uB9AC\uC5BC\uC5D0\uC11C\uB294 \uC5EC\uB7EC \uAC1C\uC758 \uCEF4\uD3EC\uB10C\uD2B8 \uD30C\uC77C\uC744 \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uAE30 \uB54C\uBB38\uC785\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use client&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useFetch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hooks/useFetch&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> usePost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hooks/usePost&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useUpdate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hooks/useUpdate&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useDelete <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./hooks/useDelete&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// GET API HOST URL</span>
<span class="token comment">// \uC608\uC2DC fly.io \uC628\uB77C\uC778: https://fly-your-app-online.fly.dev/</span>
<span class="token comment">// \uB85C\uCEEC \uBC84\uC804: http://localhost:3000/</span>
<span class="token keyword">const</span> <span class="token constant">API</span> <span class="token operator">=</span> <span class="token string">&#39;http://localhost:3000/&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// POST form input \uC0C1\uD0DC</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>firstname<span class="token punctuation">,</span> setFirstname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>lastname<span class="token punctuation">,</span> setlastname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>email<span class="token punctuation">,</span> setEmail<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>password<span class="token punctuation">,</span> setPassword<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE/PUT form input \uC0C1\uD0DC</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>updateId<span class="token punctuation">,</span> setUpdateId<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>updateFirstname<span class="token punctuation">,</span> setUpdateFirstname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>updateLastname<span class="token punctuation">,</span> setUpdateLastname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>updateEmail<span class="token punctuation">,</span> setUpdateEmail<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>originalemail<span class="token punctuation">,</span> setOriginalemail<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>updatePassword<span class="token punctuation">,</span> setUpdatePassword<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// DELETE form input \uC0C1\uD0DC</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>deleteId<span class="token punctuation">,</span> setDeleteId<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// GET \uB77C\uC6B0\uD2B8</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> error<span class="token punctuation">,</span> isLoading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">API</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/getusers</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>isLoading<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\uB85C\uB529 \uC911<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uD074\uB77C\uC774\uC5B8\uD2B8 API GET \uB370\uC774\uD130:&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> postRequest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> updateRequest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> deleteRequest <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// CRUD \uBA54\uC2DC\uC9C0 \uC0C1\uC790 \uC0C1\uD0DC</span>
<span class="token keyword">const</span> useToggleMessage <span class="token operator">=</span> <span class="token punctuation">(</span>initialState <span class="token operator">=</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>message<span class="token punctuation">,</span> setMessage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">toggleMessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token string">&#39;hidden&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>message<span class="token punctuation">,</span> toggleMessage<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>addUserMessage<span class="token punctuation">,</span> setAddUserMessage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useToggleMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>updateUserMessage<span class="token punctuation">,</span> setUpdateUserMessage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useToggleMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>deleteUserMessage<span class="token punctuation">,</span> setDeleteUserMessage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useToggleMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">handlePostForm</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>
firstname <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
lastname <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
email <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
password <span class="token operator">===</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC591\uC2DD\uC5D0 \uBAA8\uB4E0 \uD544\uB4DC\uB97C \uC791\uC131\uD574\uC57C\uD569\uB2C8\uB2E4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token literal-property property">firstname</span><span class="token operator">:</span> firstname<span class="token punctuation">,</span>
<span class="token literal-property property">lastname</span><span class="token operator">:</span> lastname<span class="token punctuation">,</span>
<span class="token literal-property property">email</span><span class="token operator">:</span> email<span class="token punctuation">,</span>
<span class="token literal-property property">password</span><span class="token operator">:</span> password<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// POST \uB77C\uC6B0\uD2B8</span>
<span class="token function">postRequest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">API</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/postuser</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\uC0AC\uC6A9\uC790 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>user<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setFirstname</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setlastname</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setAddUserMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleUpdateForm</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>
updateId <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
updateFirstname <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
updateLastname <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
originalemail <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
updateEmail <span class="token operator">===</span> <span class="token string">&#39;&#39;</span> <span class="token operator">||</span>
updatePassword <span class="token operator">===</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC591\uC2DD\uC5D0 \uBAA8\uB4E0 \uD544\uB4DC\uB97C \uC791\uC131\uD574\uC57C\uD569\uB2C8\uB2E4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token literal-property property">id</span><span class="token operator">:</span> updateId<span class="token punctuation">,</span>
<span class="token literal-property property">firstname</span><span class="token operator">:</span> updateFirstname<span class="token punctuation">,</span>
<span class="token literal-property property">lastname</span><span class="token operator">:</span> updateLastname<span class="token punctuation">,</span>
<span class="token literal-property property">originalEmail</span><span class="token operator">:</span> originalemail<span class="token punctuation">,</span>
<span class="token literal-property property">email</span><span class="token operator">:</span> updateEmail<span class="token punctuation">,</span>
<span class="token literal-property property">password</span><span class="token operator">:</span> updatePassword<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\uC0AC\uC6A9\uC790: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>user<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// UPDATE \uB77C\uC6B0\uD2B8</span>
<span class="token function">updateRequest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">API</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/updateuser</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setUpdateId</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setUpdateFirstname</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setUpdateLastname</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setOriginalemail</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setUpdateEmail</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setUpdatePassword</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setUpdateUserMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">handleDeleteForm</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>deleteId <span class="token operator">===</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC591\uC2DD\uC5D0 id\uB97C \uC81C\uCD9C\uD574\uC57C\uD569\uB2C8\uB2E4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token keyword">const</span> userId <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token literal-property property">id</span><span class="token operator">:</span> deleteId<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uC0AC\uC6A9\uC790 ID&#39;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// DELETE \uB77C\uC6B0\uD2B8</span>
<span class="token function">deleteRequest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">API</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/deleteuser</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\uC0AC\uC6A9\uC790 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>deleteId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \uC0AD\uC81C\uB428</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\uC0AC\uC6A9\uC790 ID </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>userId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setDeleteId</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setDeleteUserMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span>
<span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;container mx-auto mt-4&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token string">&quot;text-4xl mb-2 text-center uppercase&quot;</span><span class="token operator">&gt;</span>\uC0AC\uC6A9\uC790 \uB370\uC774\uD130\uBCA0\uC774\uC2A4<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;bg-gray-900 text-white p-4 rounded flex justify-center&quot;</span><span class="token operator">&gt;</span>
### <span class="token constant">ID</span> <span class="token operator">|</span> Firstname <span class="token operator">|</span> Lastname <span class="token operator">|</span> Email  
<span class="token operator">|</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">-</span><span class="token operator">|</span><span class="token operator">--</span><span class="token operator">-</span>   
            <span class="token punctuation">{</span>data <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
              <span class="token operator">&lt;</span>tbody<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>tbody<span class="token operator">&gt;</span>
              <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
                <span class="token operator">&lt;</span>tbody<span class="token operator">&gt;</span>
                 <span class="token punctuation">{</span>data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                  <span class="token operator">&lt;</span>tr key<span class="token operator">=</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token operator">&gt;</span>
                     <span class="token operator">&lt;</span>td className<span class="token operator">=</span><span class="token string">&quot;border border-slate-600 p-2 bg-gray-800 hover:bg-gray-600&quot;</span><span class="token operator">&gt;</span>
                        <span class="token punctuation">{</span>user<span class="token punctuation">.</span>id<span class="token punctuation">}</span>
                     <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
                     <span class="token operator">&lt;</span>td className<span class="token operator">=</span><span class="token string">&quot;border border-slate-600 p-2 bg-gray-800 hover:bg-gray-600&quot;</span><span class="token operator">&gt;</span>
                        <span class="token punctuation">{</span>user<span class="token punctuation">.</span>firstname<span class="token punctuation">}</span>
                     <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
                     <span class="token operator">&lt;</span>td className<span class="token operator">=</span><span class="token string">&quot;border border-slate-600 p-2 bg-gray-800 hover:bg-gray-600&quot;</span><span class="token operator">&gt;</span>
                       <span class="token punctuation">{</span>user<span class="token punctuation">.</span>lastname<span class="token punctuation">}</span>
                     <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
                     <span class="token operator">&lt;</span>td className<span class="token operator">=</span><span class="token string">&quot;border border-slate-600 p-2 bg-gray-800 hover:bg-gray-600&quot;</span><span class="token operator">&gt;</span>
                       <span class="token punctuation">{</span>user<span class="token punctuation">.</span>email<span class="token punctuation">}</span>
                     <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">&gt;</span>
                 <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>tbody<span class="token operator">&gt;</span>
            <span class="token punctuation">)</span><span class="token punctuation">}</span>
###  
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;bg-slate-100 rounded p-10 drop-shadow-lg&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;bg-white p-4 rounded drop-shadow-md&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token string">&quot;text-2xl mb-4&quot;</span><span class="token operator">&gt;</span>\uC0AC\uC6A9\uC790 \uCD94\uAC00<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">handlePostForm</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-wrap items-center mb-2&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>label className<span class="token operator">=</span><span class="token string">&quot;p-2 w-36 border-solid border-2&quot;</span><span class="token operator">&gt;</span>
        Firstname
      <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input
        type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span>
        value<span class="token operator">=</span><span class="token punctuation">{</span>firstname<span class="token punctuation">}</span>
        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setFirstname</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;grow p-2 border border-2&quot;</span>
        required
      <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-wrap items-center mb-2&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>label className<span class="token operator">=</span><span class="token string">&quot;p-2 w-36 border-solid border-2&quot;</span><span class="token operator">&gt;</span>Lastname<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input
        type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span>
        value<span class="token operator">=</span><span class="token punctuation">{</span>lastname<span class="token punctuation">}</span>
        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setlastname</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;grow p-2 border border-2&quot;</span>
        required
      <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-wrap items-center mb-2&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>label className<span class="token operator">=</span><span class="token string">&quot;p-2 w-36 border-solid border-2&quot;</span><span class="token operator">&gt;</span>Email<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input
        type<span class="token operator">=</span><span class="token string">&quot;email&quot;</span>
        value<span class="token operator">=</span><span class="token punctuation">{</span>email<span class="token punctuation">}</span>
        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setEmail</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;grow p-2 border border-2&quot;</span>
        required
      <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-wrap items-center mb-2&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>label className<span class="token operator">=</span><span class="token string">&quot;p-2 w-36 border-solid border-2&quot;</span><span class="token operator">&gt;</span>Password<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input
        type<span class="token operator">=</span><span class="token string">&quot;password&quot;</span>
        value<span class="token operator">=</span><span class="token punctuation">{</span>password<span class="token punctuation">}</span>
        onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setPassword</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;grow p-2 border border-2&quot;</span>
        required
      <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span>
        className<span class="token operator">=</span><span class="token string">&quot;bg-slate-600 hover:bg-slate-400 p-2 text-white cursor-pointer font-bold rounded-lg&quot;</span>
      <span class="token operator">&gt;</span>
        \uC0AC\uC6A9\uC790 \uCD94\uAC00
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">bg-amber-100 p-2 mt-4 rounded </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>addUserMessage<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        \uC0AC\uC6A9\uC790 \uCD94\uAC00\uB428
      <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,4),kn=n("p",null,"\uC571\uC774 \uC815\uC0C1\uC801\uC73C\uB85C \uC791\uB3D9\uD558\uB3C4\uB85D \uC644\uB8CC\uD588\uC73C\uBBC0\uB85C \uC774\uC81C \uB9C8\uC9C0\uB9C9 \uB2E8\uAC8C\uC5D0\uC11C \uC628\uB77C\uC778\uC73C\uB85C \uBC30\uD3EC\uD574\uC57C \uD569\uB2C8\uB2E4.",-1),dn=n("h2",{id:"fly-io\u1105\u1169-\u110B\u1162\u11B8-\u1107\u1162\u1111\u1169\u1112\u1161\u1100\u1175",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fly-io\u1105\u1169-\u110B\u1162\u11B8-\u1107\u1162\u1111\u1169\u1112\u1161\u1100\u1175","aria-hidden":"true"},"#"),s(" fly.io\uB85C \uC571 \uBC30\uD3EC\uD558\uAE30")],-1),vn=n("p",null,"\uBC30\uD3EC\uB294 \uB9C8\uC9C0\uB9C9 \uB2E8\uACC4\uC774\uBA70 \uC5EC\uAE30 https://fly.io/docs/apps/launch/ \uC5D0\uC11C \uBB38\uC11C\uB97C \uC77D\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uBA85\uB839\uC5B4\uB294 fly launch \uADF8\uB9AC\uACE0 fly deploy \uC5EC\uB7EC\uBD84\uC758 \uC571\uC744 \uC628\uB77C\uC778\uC73C\uB85C \uAC00\uC838\uC624\uAE30 \uC704\uD55C \uAC83\uC785\uB2C8\uB2E4.",-1),mn=n("p",null,"\uC571\uC744 fly.io\uC5D0\uC11C Secrets \uD398\uC774\uC9C0\uC5D0 \uD658\uACBD \uBCC0\uC218\uB97C \uCD94\uAC00\uD558\uB294 \uAC83\uC744 \uC78A\uC9C0 \uB9C8\uC138\uC694 .env.local \uD30C\uC77C\uC5D0. \uC571\uC744 \uC628\uB77C\uC778\uC73C\uB85C \uBC30\uD3EC\uD560 \uB54C \uBA54\uC778 page.js \uD30C\uC77C \uB0B4\uC758 frontend routes\uB97C \uC704\uD55C API HOST URL\uC744 \uC5C5\uB370\uC774\uD2B8\uD558\uC138\uC694. \uC0AC\uC6A9 \uC608\uC2DC \uCF54\uB4DC\uB294 \uC5EC\uAE30\uC11C \uD655\uC778\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4:",-1),bn=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),yn=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// API \uD638\uC2A4\uD2B8 URL \uAC00\uC838\uC624\uAE30</span>
<span class="token comment">// \uC608\uC2DC fly.io \uC628\uB77C\uC778: https://fly-your-app-online.fly.dev/</span>
<span class="token comment">// \uB85C\uCEEC \uBC84\uC804: http://localhost:3000/</span>
<span class="token keyword">const</span> <span class="token constant">API</span> <span class="token operator">=</span> <span class="token string">&#39;http://localhost:3000/&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uC81C \uBC30\uD3EC\uB3C4 \uC644\uB8CC\uB418\uC5C8\uACE0, \uC6B0\uB9AC \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uC628\uB77C\uC778\uC73C\uB85C \uC561\uC138\uC2A4\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4!</p><h1 id="\u1100\u1167\u11AF\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1100\u1167\u11AF\u1105\u1169\u11AB" aria-hidden="true">#</a> \uACB0\uB860</h1><p>\uC624\uB298\uC740 Next.js\uB97C \uC0AC\uC6A9\uD558\uC5EC \uD480\uC2A4\uD0DD \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uAD6C\uCD95\uD558\uACE0 fly.io \uC571 \uD638\uC2A4\uD305 \uD50C\uB7AB\uD3FC\uC5D0 \uC628\uB77C\uC778\uC73C\uB85C \uBC30\uD3EC\uD558\uB294 \uBC29\uBC95\uC744 \uBC30\uC6E0\uC2B5\uB2C8\uB2E4. \uB610\uD55C \uC0AC\uC6A9\uC790 \uB370\uC774\uD130\uB97C AWS \uBC84\uD0B7\uC5D0 \uC800\uC7A5\uD558\uAE30 \uC704\uD574 Tigris\uB97C \uD65C\uC6A9\uD588\uC2B5\uB2C8\uB2E4. \uB450 \uD50C\uB7AB\uD3FC\uC758 \uC870\uD569\uC740 \uC571\uC744 \uC628\uB77C\uC778\uC73C\uB85C \uB9CC\uB4DC\uB294 \uB370 \uB9E4\uC6B0 \uC720\uC6A9\uD558\uACE0 \uAC15\uB825\uD55C \uD50C\uB7AB\uD3FC\uC73C\uB85C \uB9CC\uB4ED\uB2C8\uB2E4. \uB450 \uD50C\uB7AB\uD3FC\uC740 \uAC01\uAC01 \uB9CE\uC740 \uB2E4\uC591\uD55C \uAE30\uB2A5\uC744 \uC81C\uACF5\uD558\uBBC0\uB85C \uC774\uB97C \uD65C\uC6A9\uD558\uC5EC \uD504\uB85C\uC81D\uD2B8\uC5D0 \uC5B4\uB5BB\uAC8C \uC720\uC6A9\uD560\uC9C0 \uC0B4\uD3B4\uBCF4\uB294 \uAC83\uC774 \uC88B\uC2B5\uB2C8\uB2E4.\`\`\`</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),gn=n("h1",{id:"\u110E\u1175\u11AB\u110C\u1165\u11AF\u1112\u1161\u1100\u1166-\u1106\u1161\u11AF\u1112\u1161\u110C\u1161\u1106\u1167\u11AB-\u{1F680}",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u110E\u1175\u11AB\u110C\u1165\u11AF\u1112\u1161\u1100\u1166-\u1106\u1161\u11AF\u1112\u1161\u110C\u1161\u1106\u1167\u11AB-\u{1F680}","aria-hidden":"true"},"#"),s(" \uCE5C\uC808\uD558\uAC8C \uB9D0\uD558\uC790\uBA74 \u{1F680}")],-1),fn=n("p",null,"In Plain English \uCEE4\uBBA4\uB2C8\uD2F0\uC5D0 \uCC38\uC5EC\uD574 \uC8FC\uC154\uC11C \uAC10\uC0AC\uD569\uB2C8\uB2E4! \uAC00\uAE30 \uC804\uC5D0:",-1),wn=n("ul",null,[n("li",null,"\uD544\uC790\uB97C \uD074\uB7A9\uD558\uACE0 \uD314\uB85C\uC6B0\uD574\uC8FC\uC138\uC694 \u{1F44F}"),n("li",null,"\uD314\uB85C\uC6B0\uD558\uAE30: X | LinkedIn | YouTube | Discord | Newsletter"),n("li",null,"\uB2E4\uB978 \uD50C\uB7AB\uD3FC \uBC29\uBB38\uD558\uAE30: Stackademic | CoFeed | Venture | Cubed"),n("li",null,"\uB354 \uB9CE\uC740 \uCEE8\uD150\uCE20: PlainEnglish.io")],-1);function _n(hn,En){const c=i("ExternalLinkIcon");return a(),u("div",null,[w,_,h,E,S,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),C,T,j,n("p",null,[s("\uC774 \uD504\uB85C\uC81D\uD2B8\uC5D0\uC11C \uC628\uB77C\uC778\uC73C\uB85C \uCF54\uB4DC\uBCA0\uC774\uC2A4\uB97C \uCC3E\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4: "),n("a",U,[s("https://github.com/andrewbaisden/fly-tigris-user-database"),r(c)]),s(".")]),I,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),N,R,P,x,L,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),A,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),D,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),q,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),B,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),O,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),K,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),X,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),F,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),W,M,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),G,Y,H,J,V,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),$,z,Q,Z,nn,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),sn,an,tn,pn,on,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),en,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),cn,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),ln,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),un,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),rn,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),kn,dn,vn,mn,bn,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),yn,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),gn,fn,wn])}var Nn=l(f,[["render",_n],["__file","index.html.vue"]]);export{Nn as default};
