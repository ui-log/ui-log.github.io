import{_ as l}from"./app.3052dcfb.js";import{l as a,m as c,E as t,G as p,p as s,Y as e,K as o,C as n}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";var i="/assets/ReactLikeLEGO_0.6ffc1f4d.png",r="/assets/ReactLikeLEGO_1.6d58e18b.png",u="/assets/ReactLikeLEGO_3.bee8e54f.png",k="/assets/ReactLikeLEGO_4.2e858da9.png",d="/assets/ReactLikeLEGO_5.ddddbc07.png",v="/assets/ReactLikeLEGO_6.5a811aea.png";const m={},b=o('<h2 id="react-ts\u110B\u116A-\u1105\u1166\u1100\u1169-\u1107\u1173\u11AF\u1105\u1169\u11A8\u110B\u1175-\u1106\u1161\u11AB\u1102\u1161\u1106\u1167\u11AB" tabindex="-1"><a class="header-anchor" href="#react-ts\u110B\u116A-\u1105\u1166\u1100\u1169-\u1107\u1173\u11AF\u1105\u1169\u11A8\u110B\u1175-\u1106\u1161\u11AB\u1102\u1161\u1106\u1167\u11AB" aria-hidden="true">#</a> React TS\uC640 \uB808\uACE0 \uBE14\uB85D\uC774 \uB9CC\uB098\uBA74\u2026</h2><p><img src="'+i+'" alt="\uC774\uBBF8\uC9C0"></p><h1 id="\u110E\u1169\u1105\u1169\u11A8" tabindex="-1"><a class="header-anchor" href="#\u110E\u1169\u1105\u1169\u11A8" aria-hidden="true">#</a> \uCD08\uB85D</h1><p>\uB808\uACE0 \uC138\uACC4\uB294 \uB180\uB78D\uC2B5\uB2C8\uB2E4. \uADF8 \uD2B9\uBCC4\uD55C \uAC04\uB2E8\uD568\uC73C\uB85C \uC5B4\uB9B0\uC774\uC640 \uC131\uC778\uB4E4\uC758 \uCC3D\uC758\uB825\uC744 \uC790\uADF9\uD569\uB2C8\uB2E4. \uC800\uB294 \uC5EC\uAE30\uC5D0 \uC7A0\uC7AC\uB825\uC744 \uBCF4\uACE0 React TS \uAC1C\uBC1C\uC790\uB85C\uC11C \uB808\uACE0 \uBE14\uB85D\uC758 \uB9C8\uBC95\uC744 \uC77C\uD130 \uACBD\uD5D8\uC73C\uB85C \uAC00\uC838\uC624\uACE0 \uC2F6\uC2B5\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),g=o('<p>React TS\uB97C \uC120\uD0DD\uD574\uC57C \uD558\uB294 \uC774\uC720\uB294 \uC6F9 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uAD6C\uD604\uD558\uB294 \uAC00\uC7A5 \uC88B\uC740 \uBC29\uBC95\uC774\uAE30 \uB54C\uBB38\uC774\uC8E0. React 16.8\uC5D0\uC11C \uC18C\uAC1C\uB41C \uD6C5\uC2A4\uAC00 \uADF8 \uD575\uC2EC\uC785\uB2C8\uB2E4. \uD6C5\uC2A4\uAC00 \uBB34\uC5C7\uC778\uC9C0, \uCF54\uB4DC\uB97C \uB35C verbose\uD558\uAC8C \uB9CC\uB4E4\uC5B4\uC8FC\uBA70 \uB354 \uC77D\uAE30 \uC27D\uACE0 \uB2E4\uC591\uD558\uAC8C \uB9CC\uB4DC\uB294 \uBC29\uBC95\uC744 \uC0B4\uD3B4\uBCF4\uACA0\uC2B5\uB2C8\uB2E4. \uBB3C\uB860, LEGO\uB85C \uD45C\uD604\uD569\uB2C8\uB2E4. \u{1F642}</p><h1 id="\u1106\u1169\u11A8\u110E\u1161" tabindex="-1"><a class="header-anchor" href="#\u1106\u1169\u11A8\u110E\u1161" aria-hidden="true">#</a> \uBAA9\uCC28</h1><ul><li>\uC18C\uAC1C</li><li>\uD0C0\uC785 \u2013 \uC694\uCCAD(request), \uC751\uB2F5 \uB370\uC774\uD130(ResponseData), \uC5D0\uB7EC \uB370\uC774\uD130(ErrorData)</li><li>\uD0C0\uC785 \u2013 GateRequest, GateResponse, GateError</li><li>\uD0C0\uC785 \u2013 GateCallbacks</li><li>\uD6C5\uC2A4 \u2013 useAxios</li><li>\uD6C5\uC2A4 \u2013 useGateLoader</li><li>\uD6C5\uC2A4 \u2013 useGateError</li><li>\uD6C5\uC2A4 \u2013 useGateMock</li></ul><h1 id="_1-\u1109\u1169\u1100\u1162" tabindex="-1"><a class="header-anchor" href="#_1-\u1109\u1169\u1100\u1162" aria-hidden="true">#</a> 1. \uC18C\uAC1C</h1><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),y=n("p",null,"\uC774 \uAE30\uC0AC\uC5D0\uB294 \uD615\uC2DD \uAD00\uB9AC\uC5D0 \uAD00\uD55C \uC138 \uAC00\uC9C0 \uC139\uC158\uC774 \uD3EC\uD568\uB418\uC5B4 \uC788\uACE0 \uD6C4\uD06C \uAD6C\uD604\uC5D0 \uAD00\uD55C \uB124 \uAC1C\uC758 \uC139\uC158\uC774 \uB354 \uC788\uC2B5\uB2C8\uB2E4.",-1),h=n("p",null,"\uC5EC\uAE30\uC11C React TS \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC758 \uB124\uD2B8\uC6CC\uD0B9 \uB808\uC774\uC5B4\uC5D0 \uCD08\uC810\uC744 \uB9DE\uCDA5\uB2C8\uB2E4. \uC774 \uB808\uC774\uC5B4\uB294 useAxios\uB77C\uB294 \uC0AC\uC6A9\uC790 \uC815\uC758 React \uD6C4\uD06C\uC5D0 \uC758\uD574 \uCC98\uB9AC\uB420 \uAC83\uC785\uB2C8\uB2E4. \uC774\uBBF8 axios\uB97C \uC54C\uACE0 \uACC4\uC2E0\uAC00\uC694? REST(Representational State Transfer)\uAC00 \uAC00\uC7A5 \uC77C\uBC18\uC801\uC778 \uC2DC\uB098\uB9AC\uC624\uC778 HTTP \uD074\uB77C\uC774\uC5B8\uD2B8\uB97C \uD1B5\uD569\uD558\uB294 \uB370 \uAC00\uC7A5 \uC778\uAE30 \uC788\uB294 \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC785\uB2C8\uB2E4.",-1),w=n("p",null,"\uC81C\uAC00 \uBAA8\uB974\uB294 \uAC83\uC77C\uC9C0\uB3C4 \uBAA8\uB974\uACA0\uC9C0\uB9CC, \uB124\uD2B8\uC6CC\uD0B9 \uB808\uC774\uC5B4\uB294 \uACF5\uD56D\uC744 \uB5A0\uC62C\uB9AC\uAC8C \uD569\uB2C8\uB2E4. \uD2B9\uD788:",-1),f=n("ul",null,[n("li",null,"Gate = REST API (\uC608: POST /payment, GET /payment-status \uAC8C\uC774\uD2B8)"),n("li",null,'Terminal = scope\uC5D0 \uB530\uB77C \uADF8\uB8F9\uD654\uB41C \uAC8C\uC774\uD2B8 \uC138\uD2B8 (\uC608: "payment" \uD130\uBBF8\uB110)')],-1),_=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),G=o(`<p>\uC6B0\uB9AC\uC758 \uB808\uACE0 \uACBD\uD5D8 \uC911\uC5D0 \uC774\uAC83\uC744 \uAE30\uC5B5\uD574\uC8FC\uC138\uC694. \uC124\uB808\uC2DC\uB098\uC694? \uADF8\uB7FC, \uCD9C\uBC1C\uD574\uBD05\uC2DC\uB2E4!</p><h2 id="_2-\u110C\u1169\u11BC\u1105\u1172-\u2013-\u110B\u116D\u110E\u1165\u11BC-request-\u110B\u1173\u11BC\u1103\u1161\u11B8-\u1103\u1166\u110B\u1175\u1110\u1165-responsedata-\u110B\u1169\u1105\u1172-\u1103\u1166\u110B\u1175\u1110\u1165-errordata" tabindex="-1"><a class="header-anchor" href="#_2-\u110C\u1169\u11BC\u1105\u1172-\u2013-\u110B\u116D\u110E\u1165\u11BC-request-\u110B\u1173\u11BC\u1103\u1161\u11B8-\u1103\u1166\u110B\u1175\u1110\u1165-responsedata-\u110B\u1169\u1105\u1172-\u1103\u1166\u110B\u1175\u1110\u1165-errordata" aria-hidden="true">#</a> 2. \uC885\uB958 \u2013 \uC694\uCCAD(Request), \uC751\uB2F5 \uB370\uC774\uD130(ResponseData), \uC624\uB958 \uB370\uC774\uD130(ErrorData)</h2><p>React TS \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0\uC11C \uC601\uC6C5\uB4E4\uC758 \uBAA9\uB85D\uC744 \uAD00\uB9AC\uD558\uAE30 \uC704\uD574 \uAD6C\uD604 \uC911\uC774\uB77C\uACE0 \uC0C1\uC0C1\uD574\uBD05\uC2DC\uB2E4. \uC624\uB298\uC740 \uC9C0\uC815\uB41C \uBAA9\uB85D\uC5D0 \uC601\uC6C5\uC744 \uCD94\uAC00\uD558\uAE30 \uC704\uD574 POST API\uB97C \uD1B5\uD569\uD574\uC57C \uD569\uB2C8\uB2E4. \uB530\uB77C\uC11C \uBC31\uC5D4\uB4DC \uCE5C\uAD6C\uAC00 \uB2E4\uC74C \uAC00\uC9DC \uC815\uBCF4\uB97C \uC81C\uACF5\uD588\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> method <span class="token operator">=</span> <span class="token string">&#39;POST&#39;</span>
<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://my-backend/v1/hero/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>heroesListId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?top=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>top<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

type Hero <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string
  <span class="token literal-property property">terrestrial</span><span class="token operator">:</span> boolean
  <span class="token literal-property property">strength</span><span class="token operator">:</span> number <span class="token operator">|</span> <span class="token keyword">undefined</span>
<span class="token punctuation">}</span>

type Request <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">token</span><span class="token operator">:</span> string <span class="token punctuation">}</span>     <span class="token comment">// \uC694\uCCAD \uD5E4\uB354</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">heroesListId</span><span class="token operator">:</span> number <span class="token punctuation">}</span> <span class="token comment">// \uACBD\uB85C \uB9E4\uAC1C\uBCC0\uC218</span>
  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">top</span><span class="token operator">:</span> boolean <span class="token punctuation">}</span>       <span class="token comment">// \uCFFC\uB9AC \uBB38\uC790\uC5F4 \uB9E4\uAC1C\uBCC0\uC218</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> Hero                     <span class="token comment">// \uBCF8\uBB38</span>
<span class="token punctuation">}</span>

type ResponseData <span class="token operator">=</span> Hero <span class="token comment">// \u2705 \uC131\uACF5\uD55C \uACBD\uC6B0 (\uCD94\uAC00\uB41C \uC601\uC6C5)</span>

type ErrorData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u274C \uC2E4\uD328\uD55C \uACBD\uC6B0 (\uC624\uB958 \uBC1C\uC0DD)</span>
  <span class="token literal-property property">code</span><span class="token operator">:</span> string
  <span class="token literal-property property">description</span><span class="token operator">:</span> string
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),x=n("p",null,"\uC9C0\uAE08\uAE4C\uC9C0 \uAF64 \uC26C\uC6E0\uC8E0. \uB9C8\uC9C0\uB9C9 \uC138 \uAC00\uC9C0 \uC720\uD615(Request, ResponseData, ErrorData)\uC740 API \uC655\uBCF5 \uC5EC\uC815\uC758 \uD615\uD0DC\uB97C \uC815\uC758\uD569\uB2C8\uB2E4. LEGO \uC138\uACC4\uC5D0\uC11C \uC774\uB7EC\uD55C \uC720\uD615\uB4E4\uC740 \uB2E4\uC74C\uACFC \uAC19\uC740 \uBA4B\uC9C4 \uCC28\uB7C9\uC73C\uB85C \uBCC0\uD569\uB2C8\uB2E4.",-1),E=n("p",null,[n("img",{src:r,alt:"ReactLikeLEGO_1"})],-1),R=n("p",null,"\uBC14\uD034\uB4E4\uC740 \uC5B4\uB514\uC5D0 \uC0AC\uC6A9\uD560\uAE4C\uC694? \uACE7 \uC54C\uAC8C \uB420 \uAC70\uC5D0\uC694. \u{1F61C}",-1),I=n("h3",{id:"_3-\u110B\u1172\u1112\u1167\u11BC-\u2013-gaterequest-gateresponse-gateerror",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-\u110B\u1172\u1112\u1167\u11BC-\u2013-gaterequest-gateresponse-gateerror","aria-hidden":"true"},"#"),s(" 3. \uC720\uD615 \u2013 GateRequest, GateResponse, GateError")],-1),q=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),T=o(`<p>\uC790, \uC774\uC81C POST API\uB97C \uACF5\uD56D \uAC8C\uC774\uD2B8\uB85C \uC0C1\uC0C1\uD574\uBD05\uC2DC\uB2E4. \uC81C\uAC00 \uC18C\uAC1C\uD55C \uB300\uB85C\uC694. \uADF8\uB7EC\uBA74 axios\uC5D0 \uC758\uD574 \uB178\uCD9C\uB41C \uB2E4\uC74C \uC138 \uAC00\uC9C0 \uC77C\uBC18\uC801\uC778 \uD615\uC2DD\uB4E4\uC758 \uC774\uB984\uC744 \uBCC0\uACBD\uD560 \uC218 \uC788\uC5B4\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AxiosError<span class="token punctuation">,</span> AxiosRequestConfig<span class="token punctuation">,</span> AxiosResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

type GateRequest<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span> <span class="token operator">=</span> AxiosRequestConfig <span class="token operator">&amp;</span> <span class="token constant">D</span>
type GateResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> AxiosResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
type GateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span> <span class="token operator">=</span> AxiosError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC54C\uACA0\uC8E0, \uC774\uAC83\uC740 \uBCF5\uC7A1\uD574 \uBCF4\uC77C \uC218 \uC788\uC5B4\uC694... \uC774 \uC0C8\uB85C\uC6B4 \uD615\uC2DD\uB4E4\uC740 \uBB50\uC8E0?? \uC74C, axios\uB294 \uC694\uCCAD\uC758 \uBAA8\uC591, responseData \uBC0F errorData\uB97C \uC9C0\uC815\uD560 \uC218 \uC788\uB3C4\uB85D \uC77C\uBC18 \uD615\uC2DD\uC744 \uC0AC\uC6A9\uD574\uC694. \uC774 \uAC1C\uB150\uC744 \uBA85\uD655\uD788 \uD558\uAE30 \uC704\uD574 \uB450 \uAC00\uC9C0 \uC608\uC81C\uB97C \uC0B4\uD3B4\uBCF4\uC8E0:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \uC608\uC81C 1</span>
<span class="token keyword">const</span> <span class="token literal-property property">request</span><span class="token operator">:</span> Request <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token string">&#39;1234&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">heroListId</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Ironman&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">terrestrial</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token literal-property property">gateRequest</span><span class="token operator">:</span> GateRequest<span class="token operator">&lt;</span>Request<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://my-backend/v1/hero/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>request<span class="token punctuation">.</span>path<span class="token punctuation">.</span>heroListId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token operator">...</span>request<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC608\uC81C 2</span>
<span class="token keyword">const</span> <span class="token literal-property property">responseData</span><span class="token operator">:</span> ResponseData <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Ironman&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">terrestrial</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token literal-property property">gateResponse</span><span class="token operator">:</span> GateResponse<span class="token operator">&lt;</span>ResponseData<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token literal-property property">statusText</span><span class="token operator">:</span> <span class="token string">&#39;OK&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> responseData<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),L=n("p",null,"\u2757\uC911\uC694 \u2013 \uC704\uC5D0\uC11C \uC5B8\uAE09\uB41C Gate* \uC720\uD615\uB4E4\uC740 \uB0B4\uBD80\uC801\uC73C\uB85C \uB2E4\uC74C\uACFC \uAC19\uC740 \uD2B9\uC9D5\uC744 \uAC00\uC9C0\uACE0 \uC788\uC2B5\uB2C8\uB2E4:",-1),D=n("ul",null,[n("li",null,"meta-info = \uC720\uD615\uC774 \uACE0\uC815\uB420 \uC218 \uC788\uB294 \uD544\uB4DC\uB4E4 (\uC608: method, url, status, \u2026)"),n("li",null,"data-info = \uC720\uD615\uC774 \uD655\uC7A5\uB420 \uC218 \uC788\uB294 \uD544\uB4DC\uB4E4 (\uC608: data, params, \u2026)")],-1),j=n("p",null,"\uD6C4\uC790\uB294 \uC774\uC804\uC5D0 \uBCF8 Request, ResponseData, ErrorData \uC720\uD615\uACFC \uC77C\uCE58\uD569\uB2C8\uB2E4. \uC544\uB9C8\uB3C4 \uC774\uAC83\uB4E4\uC774 Gate* \uC720\uD615\uB4E4\uACFC \uC77C\uB300\uC77C \uB300\uC751\uB428\uC744 \uC9D0\uC791\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC694\uC57D\uD558\uBA74, \uC6B0\uB9AC\uB294 Gate* \uC720\uD615\uB4E4\uC744 \uB7A9\uD37C\uB85C \uC0DD\uAC01\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC544\uB798\uC758 LEGO \uCC28\uB7C9\uB4E4\uB85C \uD45C\uC2DC\uB41C \uAC83\uCC98\uB7FC\uC694.",-1),P=n("p",null,"\uC774 \uD14D\uC2A4\uD2B8\uB97C Markdown \uD615\uC2DD\uC73C\uB85C \uBC14\uAFB8\uC5C8\uC2B5\uB2C8\uB2E4.",-1),O=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),S=o(`<p>\uC870\uAE08 \uD5F7\uAC08\uB9AC\uC2E0 \uAC00\uC694? \uAC71\uC815\uD558\uC9C0 \uB9C8\uC138\uC694. \uACE7 \uC774\uB7EC\uD55C \uC720\uD615\uB4E4\uC744 \uC0AC\uC6A9\uD558\uBA74 \uBAA8\uB4E0 \uAC83\uC774 \uB354\uC6B1 \uBA85\uD655\uD574\uC9C8 \uAC70\uC608\uC694. \u{1F4AA}</p><h1 id="_4-\u110B\u1172\u1112\u1167\u11BC-gatecallbacks" tabindex="-1"><a class="header-anchor" href="#_4-\u110B\u1172\u1112\u1167\u11BC-gatecallbacks" aria-hidden="true">#</a> 4. \uC720\uD615 - GateCallbacks</h1><p>\uC704\uC5D0\uC11C \uC124\uBA85\uD55C \uC138 \uAC00\uC9C0 Gate* \uC720\uD615\uC5D0 \uCD94\uAC00\uB85C \uC77C\uBC18\uC801\uC778 \uC720\uD615\uC744 \uC18C\uAC1C\uD574\uC57C \uD569\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> type GateCallbacks<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  onIdle<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  onPending<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  onSuccess<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token literal-property property">response</span><span class="token operator">:</span> GateResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
  onFailure<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">error</span><span class="token operator">:</span> GateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),A=n("p",null,"4 \uAC1C\uC758 \uCF5C\uBC31\uC744 \uD615\uC131\uD558\uAE30 \uC704\uD574 useAxios \uD6C5\uC5D0\uC11C \uC0AC\uC6A9\uB418\uB294 \uCF5C\uBC31 \uC720\uD615\uC740 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4.",-1),F=n("p",null,"\uD544\uC694\uD558\uB2E4\uBA74, \uC774 \uC139\uC158\uC73C\uB85C \uB2E4\uC2DC \uB3CC\uC544\uC624\uC138\uC694.",-1),C=n("h1",{id:"_5-hook-\u2013-useaxios",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-hook-\u2013-useaxios","aria-hidden":"true"},"#"),s(" 5. Hook \u2013 useAxios")],-1),M=n("p",null,"\uC9C0\uAE08\uAE4C\uC9C0 \uC6B0\uB9AC\uB294 \uD0C0\uC785\uC744 \uB2E4\uB8E8\uC5C8\uB294\uB370, \uC774\uC81C useAxios \uD6C5\uC744 \uAD6C\uD604\uD558\uB294 \uC7AC\uBBF8\uC788\uB294 \uC2DC\uAC04\uC785\uB2C8\uB2E4.",-1),$=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),H=o(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// axios.hook.ts</span>

<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GateCallbacks<span class="token punctuation">,</span> GateError<span class="token punctuation">,</span> GateRequest<span class="token punctuation">,</span> GateResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/types&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useAxios <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> <span class="token function-variable function">crossGate</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>
    request<span class="token operator">:</span> GateRequest<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    callbacks<span class="token operator">:</span> GateCallbacks<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> onSuccess<span class="token punctuation">,</span> onFailure<span class="token punctuation">,</span> onIdle<span class="token punctuation">,</span> onPending <span class="token punctuation">}</span> <span class="token operator">=</span> callbacks
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      onPending<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> GateResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
      onSuccess<span class="token operator">?.</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      onFailure<span class="token operator">?.</span><span class="token punctuation">(</span>error <span class="token keyword">as</span> GateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      onIdle<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> crossGate <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774 \uAE30\uC0AC\uB97C \uC77D\uACE0 \uACC4\uC2E0\uB2E4\uBA74 \uD504\uB85C\uADF8\uB798\uBC0D \uACBD\uD5D8\uC774 \uC788\uC73C\uC2DC\uB2E4\uB294 \uAC78 \uC54C\uACA0\uC2B5\uB2C8\uB2E4. \uADF8\uB798\uC11C \uC124\uBA85\uC740 \uC0DD\uB7B5\uD558\uACA0\uC2B5\uB2C8\uB2E4. \uC81C\uAC00 \uB450 \uAC00\uC9C0 \uAD00\uCC30 \uB0B4\uC6A9\uC744 \uACF5\uC720\uD558\uACA0\uC2B5\uB2C8\uB2E4:</p><ul><li>\uBAA8\uB4E0 \uCF5C\uBC31\uC740 crossGate \uD568\uC218\uC758 \uC120\uD0DD\uC801 \uB9E4\uAC1C\uBCC0\uC218\uC774\uBBC0\uB85C .? \uC5F0\uC0B0\uC790\uB97C \uC0AC\uC6A9\uD558\uC5EC \uC548\uC804\uD558\uAC8C \uD638\uCD9C\uB429\uB2C8\uB2E4.</li><li>\uD574\uB2F9 \uD6C4\uD06C\uB294 \uC774\uC804 \uC139\uC158\uC5D0\uC11C \uBCF4\uC558\uB358 D, T, E \uC81C\uB124\uB9AD \uD0C0\uC785\uC744 \uC0AC\uC6A9\uD569\uB2C8\uB2E4.</li></ul><p>\uC5EC\uAE30\uC5D0 \uC0AC\uC6A9 \uC608\uC2DC\uAC00 \uC788\uC2B5\uB2C8\uB2E4:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),B=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \uC0AC\uC6A9 \uC608\uC2DC</span>

<span class="token keyword">const</span> <span class="token literal-property property">request</span><span class="token operator">:</span> Request <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u2B05\uFE0F \uC704\uC5D0\uC11C \uC815\uC758\uB41C\uB300\uB85C</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token string">&#39;1234&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">heroListId</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Ironman&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">terrestrial</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token literal-property property">gateRequest</span><span class="token operator">:</span> GateRequest<span class="token operator">&lt;</span>Request<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u2B05\uFE0F \uC704\uC5D0\uC11C \uC815\uC758\uB41C\uB300\uB85C</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://my-backend/v1/hero/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>request<span class="token punctuation">.</span>path<span class="token punctuation">.</span>heroListId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token operator">...</span>request<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> crossGate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAxios</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">crossGate</span><span class="token punctuation">(</span>
  gateRequest<span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">onSuccess</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">responseData<span class="token punctuation">,</span> gateResponse</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gateResponse<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token comment">// responseData\uC640 \uB3D9\uC77C</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>gateResponse<span class="token punctuation">.</span>status<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">onFailure</span><span class="token operator">:</span> console<span class="token punctuation">.</span>error<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8\uB7FC \uC774\uC0C1\uC73C\uB85C, \uC774\uB97C LEGO \uBE14\uB85D\uC73C\uB85C \uC5B4\uB5BB\uAC8C \uBC88\uC5ED\uD560\uAE4C\uC694?</p><p><img src="`+u+'" alt="LEGO \uBE14\uB85D \uC774\uBBF8\uC9C0"></p><p>\uC704 \uADF8\uB9BC\uC5D0\uC11C \uBCF4\uC2DC\uB2E4\uC2DC\uD53C, \uD750\uB984\uC740 \uC544\uB798\uC640 \uAC19\uC2B5\uB2C8\uB2E4:```</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),N=o(`<ul><li>crossGate \uD568\uC218\uAC00 \uAC8C\uC774\uD2B8 \uC694\uCCAD(\uB178\uB780 \uCC28\uB7C9)\uACFC \uD568\uAED8 \uD638\uCD9C\uB429\uB2C8\uB2E4.</li><li>\uB300\uAE30 \uC911\uC778 \uCF5C\uBC31\uC778 onPending\uC774 \uD638\uCD9C\uB429\uB2C8\uB2E4.</li><li>\uAC8C\uC774\uD2B8 \uCC28\uB7C9\uC744 \uC6B4\uC1A1\uD558\uB294 \uBE44\uD589\uAE30\uB85C \uD45C\uC2DC\uB41C HTTP \uC655\uBCF5\uC774 \uC2DC\uC791\uB429\uB2C8\uB2E4.</li><li>\uC694\uCCAD\uC774 \uC131\uACF5\uC801\uC73C\uB85C \uC774\uD589\uB420 \uC218 \uC788\uC73C\uBBC0\uB85C, ResponseData\uC640 GateResponse(\uB179\uC0C9 \uCC28\uB7C9)\uC640 \uD568\uAED8 onSuccess \uCF5C\uBC31\uC774 \uD638\uCD9C\uB429\uB2C8\uB2E4.</li><li>\uC694\uCCAD\uC774 \uC2E4\uD328\uD560 \uC218 \uC788\uC73C\uBBC0\uB85C, \uBC1C\uC0DD\uD55C GateError(\uBE68\uAC04 \uCC28\uB7C9)\uC640 \uD568\uAED8 onFailure \uCF5C\uBC31\uC774 \uD638\uCD9C\uB429\uB2C8\uB2E4.</li><li>4\uC640 5\uC758 \uACBD\uC6B0\uC5D0\uB294 onIdle \uCF5C\uBC31\uC774 \uBAA8\uB450 \uD638\uCD9C\uB429\uB2C8\uB2E4.</li></ul><h1 id="_6-\u1112\u116E\u110F\u1173-\u2013-usegateloader" tabindex="-1"><a class="header-anchor" href="#_6-\u1112\u116E\u110F\u1173-\u2013-usegateloader" aria-hidden="true">#</a> 6. \uD6C4\uD06C \u2013 useGateLoader</h1><p>\uC774\uC804 \uC139\uC158\uC5D0\uC11C, \uC694\uCCAD \uC0C1\uD0DC\uC5D0 \uB300\uD574 crossGate \uD638\uCD9C\uC790\uC5D0\uAC8C \uC54C\uB9AC\uAE30 \uC704\uD574 onIdle\uACFC onPending \uC120\uD0DD\uC801 \uCF5C\uBC31\uC744 \uC0AC\uC6A9\uD588\uC2B5\uB2C8\uB2E4. \uCF54\uB4DC\uB97C \uC911\uC559 \uC9D1\uC911\uD654\uD558\uAE30 \uC704\uD574 useGateLoader\uB77C\uB294 \uC0C8\uB85C\uC6B4 \uD6C4\uD06C\uB97C \uD1B5\uD569\uD558\uC5EC \uAE30\uBCF8 \uB3D9\uC791\uC744 \uC124\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// gate-loader.hook.ts</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useGateLoader</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">gateId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uD6C4\uD06C</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleIdle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TODO - \uB300\uAE30 \uC911 \uC0C1\uD0DC\uC758 \uC911\uC559 \uAD00\uB9AC (\uC608: Recoil \uC0AC\uC6A9)&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">gateId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gateId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handlePending</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TODO - \uB300\uAE30 \uC911 \uC0C1\uD0DC\uC758 \uC911\uC559 \uAD00\uB9AC (\uC608: Recoil \uC0AC\uC6A9)&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">gateId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gateId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> handleIdle<span class="token punctuation">,</span> handlePending <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),V=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// axios.hook.ts</span>

<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GateCallbacks<span class="token punctuation">,</span> GateError<span class="token punctuation">,</span> GateRequest<span class="token punctuation">,</span> GateResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/types&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> useGateLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./gate-loader.hook&#39;</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 import</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useAxios <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">gateId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 gateId \uB9E4\uAC1C\uBCC0\uC218 (\uC911\uC559\uD654\uC5D0 \uC720\uC6A9\uD568)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> handleIdle<span class="token punctuation">,</span> handlePending <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGateLoader</span><span class="token punctuation">(</span>gateId<span class="token punctuation">)</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 hook \uD638\uCD9C </span>

  <span class="token keyword">const</span> <span class="token function-variable function">crossGate</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>
    <span class="token parameter"><span class="token literal-property property">request</span><span class="token operator">:</span> GateRequest<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">callbacks</span><span class="token operator">:</span> GateCallbacks<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span></span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> 
      onSuccess<span class="token punctuation">,</span>
      onFailure<span class="token punctuation">,</span>
      onIdle <span class="token operator">=</span> handleIdle<span class="token punctuation">,</span>      <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uAE30\uBCF8 \uCF5C\uBC31</span>
      onPending <span class="token operator">=</span> handlePending <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uAE30\uBCF8 \uCF5C\uBC31</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> callbacks
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">onPending</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uAE30\uBCF8 \uCF5C\uBC31 \uB355\uBD84\uC5D0 \uB354 \uC774\uC0C1 ?. \uC5F0\uC0B0\uC790\uAC00 \uD544\uC694\uD558\uC9C0 \uC54A\uC74C</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> GateResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
      onSuccess<span class="token operator">?.</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      onFailure<span class="token operator">?.</span><span class="token punctuation">(</span>error <span class="token keyword">as</span> GateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token function">onIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uAE30\uBCF8 \uCF5C\uBC31 \uB355\uBD84\uC5D0 \uB354 \uC774\uC0C1 ?. \uC5F0\uC0B0\uC790\uAC00 \uD544\uC694\uD558\uC9C0 \uC54A\uC74C</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> crossGate <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC5EC\uAE30\uAC00 \uD6C5\uC758 \uD798\uC785\uB2C8\uB2E4: \uB450 \uAC00\uC9C0 \uB2E4\uB978 \uAD6C\uD604\uC744 \uB450 \uAC00\uC9C0 \uB2E4\uB978 \uD6C5\uC73C\uB85C \uBD84\uB9AC\uD55C \uB2E4\uC74C, \uB9C8\uCE58... \uB808\uACE0\uCC98\uB7FC \uD1B5\uD569\uD588\uC2B5\uB2C8\uB2E4!</p><img src="`+k+'"><p>\uC774\uC81C onIdle \uBC0F onPending\uC5D0 \uAD00\uACC4\uB41C \uB450 \uAC1C\uC758 \uC804\uBC29 \uD3EC\uD138\uC774 \uAEBC\uC838 \uC788\uC2B5\uB2C8\uB2E4. \uC65C\uB0D0\uD558\uBA74 \uC774 \uC2DC\uB098\uB9AC\uC624\uC5D0\uC11C \uD638\uCD9C\uC790\uAC00 \uADF8 \uAC12\uC744 \uC804\uB2EC\uD558\uC9C0 \uC54A\uC558\uAE30 \uB54C\uBB38\uC774\uC8E0. \uADF8\uB7EC\uB098 \uCF54\uB4DC\uC5D0\uC11C \uBCFC \uC218 \uC788\uB4EF\uC774 \uAE30\uBCF8 \uCF5C\uBC31\uC744 \uB098\uD0C0\uB0B4\uB294 \uB450 \uAC1C\uC758 \uCF1C\uC9C4 \uD3EC\uD138\uC774 \uB4A4\uC5D0 \uC788\uC2B5\uB2C8\uB2E4.```</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),K=o(`<h1 id="_7-\u1112\u116E\u110F\u1173-usegateerror" tabindex="-1"><a class="header-anchor" href="#_7-\u1112\u116E\u110F\u1173-usegateerror" aria-hidden="true">#</a> 7. \uD6C4\uD06C - useGateError</h1><p>\uC694\uD589\uC774 \uBA39\uC5B4\uB4E4\uC774\uB294 \uAC83\uACFC \uD568\uAED8 \uC624\uB958 \uCC98\uB9AC\uB97C \uC704\uD574 \uC774\uC804 \uBC29\uBC95\uC744 \uC801\uC751\uC2DC\uD0AC \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB798\uC11C \uC6B0\uB9AC\uB294 useGateError \uD6C4\uD06C\uB97C \uC18C\uAC1C\uD569\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// gate-error.hook.ts</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> GateError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/types&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useGateError <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">gateId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uD6C4\uD06C</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleFailure</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">error</span><span class="token operator">:</span> GateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\uD560 \uC77C - \uC624\uB958\uB4E4\uC758 \uC911\uC559 \uC9D1\uC911 \uAD00\uB9AC (\uC608\uB97C \uB4E4\uC5B4 Recoil \uC0AC\uC6A9)&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">gateId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gateId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> handleFailure <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// axios.hook.ts</span>

<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GateCallbacks<span class="token punctuation">,</span> GateError<span class="token punctuation">,</span> GateRequest<span class="token punctuation">,</span> GateResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/types&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> useGateError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./gate-error.hook&#39;</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uC784\uD3EC\uD2B8</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useGateLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./gate-loader.hook&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useAxios <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">gateId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> handleIdle<span class="token punctuation">,</span> handlePending <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGateLoader</span><span class="token punctuation">(</span>gateId<span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> handleFailure <span class="token punctuation">}</span> <span class="token operator">=</span> useGateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>gateId<span class="token punctuation">)</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uD6C4\uD06C \uD638\uCD9C</span>

  <span class="token keyword">const</span> <span class="token function-variable function">crossGate</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">request</span><span class="token operator">:</span> GateRequest<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">callbacks</span><span class="token operator">:</span> GateCallbacks<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      onSuccess<span class="token punctuation">,</span>
      onFailure <span class="token operator">=</span> handleFailure<span class="token punctuation">,</span> <span class="token comment">// \u2B05\uFE0F \uAE30\uBCF8 \uCF5C\uBC31</span>
      onIdle <span class="token operator">=</span> handleIdle<span class="token punctuation">,</span>
      onPending <span class="token operator">=</span> handlePending<span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> callbacks
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">onPending</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> GateResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
      onSuccess<span class="token operator">?.</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onFailure</span><span class="token punctuation">(</span>error <span class="token keyword">as</span> GateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4: \uAE30\uBCF8 \uCF5C\uBC31 \uB355\uBD84\uC5D0 ?. \uC5F0\uC0B0\uC790\uAC00 \uB354 \uC774\uC0C1 \uD544\uC694\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token function">onIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> crossGate <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),Y=n("p",null,"\uC0C1\uC0C1\uD558\uC2E4 \uC218 \uC788\uACA0\uC9C0\uB9CC, LEGO \uBC84\uC804\uC758 \uC774 \uD1B5\uD569\uC740 \uC774\uC804 \uAC83\uACFC\uB3C4 \uBE44\uC2B7\uD569\uB2C8\uB2E4.",-1),z=n("p",null,[n("img",{src:d,alt:"LEGO version"})],-1),J=n("p",null,"\uC774 \uC2DC\uB098\uB9AC\uC624\uC5D0\uC11C \uD638\uCD9C\uC790\uB294 onFailure \uCF5C\uBC31\uC744 \uB9E4\uAC1C\uBCC0\uC218\uB85C \uC804\uB2EC\uD558\uC9C0 \uC54A\uAE30 \uB54C\uBB38\uC5D0 \uBC1C\uC0DD\uD55C GateError\uB294 \uAE30\uBCF8 \uCF5C\uBC31(\uCF1C\uC9C4 \uB4B7\uBB38 \uD3EC\uD138\uB85C \uB098\uD0C0\uB0C4)\uC5D0 \uC758\uD574 \uCC98\uB9AC\uB429\uB2C8\uB2E4.",-1),Q=n("h1",{id:"_8-\u1112\u116E\u11A8-\u2013-usegatemock",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_8-\u1112\u116E\u11A8-\u2013-usegatemock","aria-hidden":"true"},"#"),s(" 8. \uD6C5 \u2013 useGateMock")],-1),U=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),W=o(`<p>useAxios\uC5D0 \uD1B5\uD569\uD558\uB294 \uB9C8\uC9C0\uB9C9 \uD6C4\uD06C\uB294 \uBAA8\uC758 \uB370\uC774\uD130\uB97C \uAD00\uB9AC\uD558\uB294 useGateMock\uACFC \uAD00\uB828\uC774 \uC788\uC2B5\uB2C8\uB2E4.</p><p>\uBAA8\uC758 \uB370\uC774\uD130\uB97C \uAD00\uB9AC\uD558\uACE0 \uD65C\uC131\uD654/\uBE44\uD65C\uC131\uD654\uD558\uB294 \uAC83\uC740 \uC27D\uC9C0 \uC54A\uC744 \uC218 \uC788\uC73C\uBBC0\uB85C, console.log\uC5D0\uC11C \uCD94\uCC9C\uD558\uB294 \uB300\uB85C \uC804\uC6A9 \uC678\uBD80 \uD6C4\uD06C(e.g. useMockend)\uC5D0 \uC758\uC874\uD558\uB294 \uAC83\uC774 \uB354 \uB098\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// gate-mock.hook.ts</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useGateMock</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">gateId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token string">&#39;TODO - \uC911\uC559 \uC9D1\uC911\uC2DD \uBAA8\uC758 \uB370\uC774\uD130 \uD65C\uC131\uD654/\uBE44\uD65C\uC131\uD654 (\uC608: \uC0AC\uC6A9\uC790 \uC9C0\uC815 \uD6C4\uD06C &quot;useMockend&quot;\uB97C \uC0AC\uC6A9\uD558\uC5EC)&#39;</span>
  <span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">gateId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gateId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> mocked <span class="token operator">=</span> <span class="token boolean">false</span>

  <span class="token keyword">const</span> <span class="token function-variable function">getMock</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;TODO - \uC5EC\uAE30\uC11C \uBAA8\uC758 \uB370\uC774\uD130\uB97C \uBC18\uD658\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4 (\uC608: \uC0AC\uC6A9\uC790 \uC9C0\uC815 \uD6C4\uD06C &quot;useMockend&quot;\uB97C \uC0AC\uC6A9\uD558\uC5EC)&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">gateId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>gateId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> mocked<span class="token punctuation">,</span> getMock <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// axios.hook.ts</span>

<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GateCallbacks<span class="token punctuation">,</span> GateError<span class="token punctuation">,</span> GateRequest<span class="token punctuation">,</span> GateResponse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;src/types&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> useGateError <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./gate-error.hook&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useGateLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./gate-loader.hook&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useGateMock <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./gate-mock.hook&#39;</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 import \uBD80\uBD84</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useAxios <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">D</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">gateId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> handleIdle<span class="token punctuation">,</span> handlePending <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGateLoader</span><span class="token punctuation">(</span>gateId<span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> handleFailure <span class="token punctuation">}</span> <span class="token operator">=</span> useGateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>gateId<span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> mocked<span class="token punctuation">,</span> getMock <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useGateMock</span><span class="token punctuation">(</span>gateId<span class="token punctuation">)</span> <span class="token comment">// \u2B05\uFE0F \uC0C8\uB85C\uC6B4 \uD6C4\uD06C \uD638\uCD9C \uBD80\uBD84</span>

  <span class="token keyword">const</span> <span class="token function-variable function">crossGate</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">request</span><span class="token operator">:</span> GateRequest<span class="token operator">&lt;</span><span class="token constant">D</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">callbacks</span><span class="token operator">:</span> GateCallbacks<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">E</span><span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      onSuccess<span class="token punctuation">,</span>
      onFailure <span class="token operator">=</span> handleFailure<span class="token punctuation">,</span>
      onIdle <span class="token operator">=</span> handleIdle<span class="token punctuation">,</span>
      onPending <span class="token operator">=</span> handlePending<span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> callbacks
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">onPending</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token punctuation">(</span>
        mocked              <span class="token comment">// \u2B05\uFE0F \uBAA8\uC758 \uB370\uC774\uD130\uC778\uC9C0 \uD655\uC778</span>
          <span class="token operator">?</span> <span class="token keyword">await</span> <span class="token function">getMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u2B05\uFE0F \uBAA8\uC758 \uB370\uC774\uD130 \uC0AC\uC6A9 \uBD80\uBD84</span>
          <span class="token operator">:</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>
      <span class="token punctuation">)</span> <span class="token keyword">as</span> GateResponse<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
      onSuccess<span class="token operator">?.</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">,</span> response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onFailure</span><span class="token punctuation">(</span>error <span class="token keyword">as</span> GateError<span class="token operator">&lt;</span><span class="token constant">E</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token function">onIdle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> crossGate <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),X=n("p",null,"\uC774\uC81C \uC751\uB2F5\uC740 \uBAA9 \uBAA8\uB4DC\uAC00 \uD65C\uC131\uD654\uB418\uC5B4 \uC788\uB294\uC9C0\uC5D0 \uB530\uB77C \uC2E4\uC81C\uC77C \uC218\uB3C4 \uAC00\uC9DC\uC77C \uC218\uB3C4 \uC788\uC2B5\uB2C8\uB2E4. \uC774\uAC83\uC740 \uAE38\uC5D0 \uAC08\uB9BC\uAE38\uCC98\uB7FC \uBCF4\uC785\uB2C8\uB2E4, \uB530\uB77C\uC11C useGateMock\uC758 LEGO \uD45C\uD604\uC740 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4.",-1),Z=n("p",null,[n("img",{src:v,alt:"LEGO representation"})],-1),nn=n("p",null,"\uC5EC\uAE30\uC5D0\uB294 \uBE44\uD589\uAE30\uB098 \uBE44\uD589\uC774 \uC5C6\uC2B5\uB2C8\uB2E4: \uD638\uCD9C \uACB0\uACFC\uB294 \uC774\uC81C \uD130\uB110\uC5D0 \uD45C\uC2DC\uB41C \uAC83\uCC98\uB7FC \uAC00\uC9DC\uC785\uB2C8\uB2E4.",-1),sn=n("p",null,"LEGO \uBE44\uC720\uB97C \uC990\uAE30\uC168\uAE30\uB97C \uBC14\uB78D\uB2C8\uB2E4. \uAC1C\uC120\uD560 \uC810\uC774 \uC788\uB2E4\uBA74 \uD53C\uB4DC\uBC31\uC744 \uC8FC\uC2DC\uACE0 \uBE44\uC2B7\uD55C \uAE30\uC0AC\uB97C \uB354 \uC791\uC131\uD558\uB3C4\uB85D \uACA9\uB824\uD574 \uC8FC\uC154\uC11C \uBBF8\uB514\uC5C4\uC5D0\uC11C \uD314\uB85C\uC6B0\uD574 \uC8FC\uC2ED\uC2DC\uC624.",-1),an=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),tn=n("p",null,"\uC77D\uC5B4 \uC8FC\uC154\uC11C \uAC10\uC0AC\uD569\uB2C8\uB2E4.",-1);function pn(en,on){return a(),c("div",null,[b,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),g,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),y,h,w,f,_,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),G,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),x,E,R,I,q,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),T,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),L,D,j,P,O,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),S,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),A,F,C,M,$,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),H,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),B,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),N,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),V,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),K,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),Y,z,J,Q,U,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),W,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),X,Z,nn,sn,an,(a(),t(e("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),tn])}var vn=l(m,[["render",pn],["__file","index.html.vue"]]);export{vn as default};
