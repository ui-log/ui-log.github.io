import{_ as l,f as i,o as a,c as u,a as t,w as p,b as s,r as o,e as n,g as r,d as e}from"./app.12680021.js";var k="/assets/Building-an-Admin-Console-With-Minimum-Code-Using-React-Admin-Prisma-and-Zenstack_0.5123753e.png",d="/assets/Building-an-Admin-Console-With-Minimum-Code-Using-React-Admin-Prisma-and-Zenstack_2.52cbb52e.png";const v={},m=n("h2",{id:"\u1109\u1171\u11B8\u1100\u1169-\u110B\u1161\u11AB\u110C\u1165\u11AB\u1112\u1161\u11AB-\u1107\u1161\u11BC\u1107\u1165\u11B8\u110B\u1173\u1105\u1169-crud-\u110B\u1162\u11B8-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1109\u1171\u11B8\u1100\u1169-\u110B\u1161\u11AB\u110C\u1165\u11AB\u1112\u1161\u11AB-\u1107\u1161\u11BC\u1107\u1165\u11B8\u110B\u1173\u1105\u1169-crud-\u110B\u1162\u11B8-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175","aria-hidden":"true"},"#"),s(" \uC27D\uACE0 \uC548\uC804\uD55C \uBC29\uBC95\uC73C\uB85C CRUD \uC571 \uB9CC\uB4E4\uAE30")],-1),b=n("p",null,[n("img",{src:k,alt:"image"})],-1),g=n("p",null,"\uACE0\uAC1D\uC744 \uB300\uC0C1\uC73C\uB85C \uD558\uB294 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uB9CC\uB4DC\uB294 \uAC83\uC740 \uD765\uBBF8\uB86D\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uC5B4\uB4DC\uBBFC \uCF58\uC194 \uBD80\uBD84\uC744 \uB2E4\uB8F0 \uB54C \uC7AC\uBBF8\uC788\uC9C0 \uC54A\uC744 \uC218\uB3C4 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uC2E4\uC81C\uB85C\uB294 \uB300\uBD80\uBD84\uC758 \uC571\uC774 \uC6B4\uC601\uC5D0 \uD544\uC694\uD55C \uC5B4\uB5A4 \uC885\uB958\uC758 \uC5B4\uB4DC\uBBFC \uCF58\uC194\uC744 \uC694\uAD6C\uD569\uB2C8\uB2E4. \uB514\uC790\uC778\uC774 \uBA4B\uC9C0\uAC70\uB098 \uC131\uB2A5\uC774 \uBE60\uB974\uC9C0 \uC54A\uC544\uB3C4 \uAD1C\uCC2E\uC2B5\uB2C8\uB2E4. \uC8FC\uC694 \uCD08\uC810\uC740 \uC2E0\uB8B0\uC131, \uBE44\uC6A9 \uD6A8\uC728\uC131, \uD655\uC7A5\uC131\uC5D0 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.",-1),y=n("p",null,"\uB2E4\uC591\uD55C \uC720\uD615\uC758 \uC5B4\uB4DC\uBBFC \uCF58\uC194\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uC774 \uAC8C\uC2DC\uBB3C\uC5D0\uC11C\uB294 \uAC00\uC7A5 \uC77C\uBC18\uC801\uC778 \uC720\uD615\uC758 \uCF58\uC194\uC5D0 \uB300\uD574 \uC774\uC57C\uAE30\uD558\uACA0\uC2B5\uB2C8\uB2E4: \uBE44\uAE30\uC220\uC790\uB3C4 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uB97C \uBCC0\uACBD\uD558\uACE0 \uB3D9\uC2DC\uC5D0 \uC801\uC808\uD55C \uAD8C\uD55C \uAD00\uB9AC\uB97C \uBCF4\uC7A5\uD560 \uC218 \uC788\uB294 \uCF58\uC194\uC785\uB2C8\uB2E4.",-1),h=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),f=n("p",null,"\uC774\uB7EC\uD55C \uAD00\uB9AC\uC790 \uCF58\uC194\uC744 \uAD6C\uCD95\uD558\uB824\uBA74 \uC138 \uAC00\uC9C0 \uC120\uD0DD\uC9C0\uAC00 \uC788\uC2B5\uB2C8\uB2E4:",-1),w=n("ul",null,[n("li",null,"\uAD6C\uCD95\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uADF8\uB0E5 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uD3B8\uC9D1\uAE30(phpMyAdmin, Prisma Studio \uB4F1)\uB97C \uC0AC\uC6A9\uD558\uC138\uC694."),n("li",null,"\uACE0\uC218\uC900 \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC640 \uB3C4\uAD6C\uB97C \uACB0\uD569\uD558\uC5EC \uCC98\uC74C\uBD80\uD130 \uBE60\uB974\uAC8C \uAD6C\uCD95\uD569\uB2C8\uB2E4."),n("li",null,"\uACE0\uAC1D\uC744 \uB300\uC0C1\uC73C\uB85C \uD558\uB294 \uC571\uC744 \uAD6C\uCD95\uD560 \uB54C\uC640 \uB3D9\uC77C\uD55C \uBC29\uC2DD\uC73C\uB85C \uAD6C\uCD95\uD569\uB2C8\uB2E4.")],-1),q=n("p",null,"\uAC01 \uC120\uD0DD\uC9C0\uB9C8\uB2E4 \uC7A5\uB2E8\uC810\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uC774 \uAE00\uC740 \uB300\uBD80\uBD84\uC758 \uC2E4\uC81C \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0 \uAC00\uC7A5 \uC801\uD569\uD55C \uBE44\uC6A9\uACFC \uD488\uC9C8 \uC0AC\uC774\uC758 \uADE0\uD615\uC744 \uC81C\uACF5\uD558\uB294 \uB450 \uBC88\uC9F8 \uC120\uD0DD\uC9C0\uC5D0 \uCD08\uC810\uC744 \uB9DE\uCD9C \uAC83\uC785\uB2C8\uB2E4.",-1),_=n("h1",{id:"\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u11AF-\u1105\u1161\u110B\u1175\u1107\u1173\u1105\u1165\u1105\u1175\u1103\u1173\u11AF-\u1100\u1161\u11AB\u1103\u1161\u11AB\u1112\u1175-\u1109\u1161\u11AF\u1111\u1167\u1107\u1169\u1100\u1175",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u11AF-\u1105\u1161\u110B\u1175\u1107\u1173\u1105\u1165\u1105\u1175\u1103\u1173\u11AF-\u1100\u1161\u11AB\u1103\u1161\u11AB\u1112\u1175-\u1109\u1161\u11AF\u1111\u1167\u1107\u1169\u1100\u1175","aria-hidden":"true"},"#"),s(" \uC0AC\uC6A9\uD560 \uB77C\uC774\uBE0C\uB7EC\uB9AC\uB4E4 \uAC04\uB2E8\uD788 \uC0B4\uD3B4\uBCF4\uAE30")],-1),P=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),A=e('<h2 id="react-admin" tabindex="-1"><a class="header-anchor" href="#react-admin" aria-hidden="true">#</a> React-Admin</h2><p>React-Admin\uC740 \uBC31\uC5D4\uB4DC \uB370\uC774\uD130 API\uC640 \uD1B5\uC2E0\uD558\uB294 \uAD00\uB9AC\uC790 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uBE4C\uB4DC\uD558\uAE30 \uC704\uD55C React \uAE30\uBC18 \uD504\uB860\uD2B8\uC5D4\uB4DC \uD504\uB808\uC784\uC6CC\uD06C\uC785\uB2C8\uB2E4. \uBC31\uC5D4\uB4DC\uC758 \uD2B9\uC815 API \uC2A4\uD0C0\uC77C\uC5D0 \uC27D\uAC8C \uC801\uC751\uD560 \uC218 \uC788\uB294 \uD50C\uB7EC\uADF8\uC778 \uBA54\uCEE4\uB2C8\uC998\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4.</p><h2 id="prisma" tabindex="-1"><a class="header-anchor" href="#prisma" aria-hidden="true">#</a> Prisma</h2><p>Prisma\uB294 \uCD5C\uC2E0 TypeScript-\uC911\uC2EC ORM\uC73C\uB85C, \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC2A4\uD0A4\uB9C8\uB97C \uC27D\uAC8C \uAD00\uB9AC\uD558\uACE0 \uCFFC\uB9AC\uC640 \uBBA4\uD14C\uC774\uC158\uC744 \uB192\uC740 \uC720\uC5F0\uC131\uC73C\uB85C \uC218\uD589\uD558\uBA70 \uC6B0\uC218\uD55C \uC720\uD615 \uC548\uC804\uC131\uC744 \uBCF4\uC7A5\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),x=e('<h2 id="zenstack" tabindex="-1"><a class="header-anchor" href="#zenstack" aria-hidden="true">#</a> ZenStack</h2><p>ZenStack\uC740 Prisma \uC704\uC5D0 \uAD6C\uCD95\uB41C \uB3C4\uAD6C \uC0C1\uC790\uB85C, \uC811\uADFC \uC81C\uC5B4, \uC790\uB3D9 CRUD \uC6F9 API \uB4F1\uC774 \uCD94\uAC00\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4. \uC774\uB97C \uD1B5\uD574 ORM\uC758 \uC804\uCCB4 \uAE30\uB2A5\uC744 \uBC1C\uD718\uD558\uC5EC \uD480 \uC2A4\uD0DD \uAC1C\uBC1C\uC774 \uAC00\uB2A5\uD574\uC9D1\uB2C8\uB2E4.</p><h1 id="\u1103\u1162\u1109\u1161\u11BC-\u110B\u1162\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1103\u1162\u1109\u1161\u11BC-\u110B\u1162\u11B8" aria-hidden="true">#</a> \uB300\uC0C1 \uC571</h1><p>\uD1A0\uB860\uC744 \uC6A9\uC774\uD558\uAC8C \uD558\uAE30 \uC704\uD574 \uC608\uC2DC\uB85C \uD310\uD0C0\uC9C0 \uCEE8\uD150\uCE20 \uBC1C\uD589 \uC571\uC744 \uC0AC\uC6A9\uD558\uACA0\uC2B5\uB2C8\uB2E4. \uC774 \uC571\uC740 \uBE14\uB85C\uADF8 \uAC8C\uC2DC\uBB3C\uC744 \uB9CC\uB4E4\uACE0 \uD3B8\uC9D1\uD558\uC5EC \uBC1C\uD589\uD558\uB294 \uB0B4\uC6A9\uC744 \uB2E4\uB8F9\uB2C8\uB2E4. \uC0AC\uC6A9\uC790 \uC5ED\uD560\uB85C\uB294 \uC138 \uAC00\uC9C0\uAC00 \uD3EC\uD568\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),S=e('<ul><li>\uC791\uC131\uC790: \uAC8C\uC2DC\uBB3C\uC744 \uC791\uC131\uD558\uACE0 \uD3B8\uC9D1 \uAC80\uD1A0\uB97C \uC694\uCCAD\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li><li>\uD3B8\uC9D1\uC790: \uAE30\uC0AC\uB97C \uD3B8\uC9D1\uD558\uACE0 \uAC8C\uC2DC\uBB3C\uC744 \uBC1C\uD589\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li><li>\uAD00\uB9AC\uC790: \uBAA8\uB4E0 \uC791\uC5C5\uC744 \uC218\uD589\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li></ul><p>\uBE14\uB85C\uADF8 \uAC8C\uC2DC\uBB3C\uC740 \uB2E4\uC74C \uC911 \uD558\uB098\uC758 \uC0C1\uD0DC\uC5D0 \uC788\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><ul><li>\uCD08\uC548 \uC791\uC131\uC790\uAC00 \uBE44\uACF5\uAC1C\uB85C \uC791\uC5C5 \uC911\uC785\uB2C8\uB2E4. \uC791\uC131\uC790\uC640 \uAD00\uB9AC\uC790\uB9CC \uC561\uC138\uC2A4\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li><li>\uC81C\uCD9C\uB428 \uC791\uC131\uC790\uAC00 \uAC80\uD1A0\uB97C \uC694\uCCAD\uD588\uC2B5\uB2C8\uB2E4. \uD3B8\uC9D1\uC790\uB294 \uC77D\uC744 \uC218 \uC788\uACE0 \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li><li>\uAC8C\uC2DC\uB428 \uAC8C\uC2DC\uBB3C\uC774 \uAC8C\uC2DC\uB418\uC5B4 \uBAA8\uB450\uAC00 \uC77D\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uD3B8\uC9D1\uC790\uB294 \uAC8C\uC2DC\uB97C \uCDE8\uC18C\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li></ul><p>\uBB3C\uB860, \uAD00\uB9AC\uC790 \uC0AC\uC6A9\uC790\uB294 \uBAA8\uB4E0 \uC0C1\uD0DC\uC758 \uAC8C\uC2DC\uBB3C\uC5D0 \uB300\uD574 \uC5B4\uB5A4 \uC791\uC5C5\uC774\uB77C\uB3C4 \uC218\uD589\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),R=e('<h1 id="\u110C\u1161\u11A8\u110B\u1165\u11B8\u1103\u1173\u11AF\u110B\u1173\u11AF-\u110B\u1167\u11AB\u1100\u1167\u11AF\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u110C\u1161\u11A8\u110B\u1165\u11B8\u1103\u1173\u11AF\u110B\u1173\u11AF-\u110B\u1167\u11AB\u1100\u1167\u11AF\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uC791\uC5C5\uB4E4\uC744 \uC5F0\uACB0\uD558\uAE30</h1><p>\uAD00\uB9AC\uC790 \uCF58\uC194\uC740 \uD480 \uC2A4\uD0DD \uC6F9 \uC571\uC774\uAE30 \uB54C\uBB38\uC5D0 \uD504\uB860\uD2B8\uC5D4\uB4DC\uC640 \uBC31\uC5D4\uB4DC\uB97C \uD558\uB098\uC758 \uD504\uB85C\uC81D\uD2B8\uB85C \uACB0\uD569\uD558\uB294 \uD480 \uC2A4\uD0DD \uD504\uB808\uC784\uC6CC\uD06C\uB97C \uC0AC\uC6A9\uD558\uB294 \uAC83\uC774 \uAC00\uC7A5 \uC26C\uC6B4 \uBC29\uBC95\uC785\uB2C8\uB2E4. \uC774 \uD3EC\uC2A4\uD2B8\uC5D0\uC11C\uB294 Next.js\uB97C \uC0AC\uC6A9\uD560 \uAC83\uC774\uC9C0\uB9CC, \uBD84\uB9AC\uB41C \uD504\uB860\uD2B8\uC5D4\uB4DC\uC640 \uBC31\uC5D4\uB4DC(Vite React SPA\uC640 ExpressJS \uBC31\uC5D4\uB4DC)\uB85C \uC9C4\uD589\uD560 \uC218\uB3C4 \uC788\uC2B5\uB2C8\uB2E4. \uAE30\uBCF8 \uC0AC\uD56D\uC740 \uBCC0\uACBD\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.</p><p>\uD3EC\uC2A4\uD2B8 \uB05D\uC5D0 \uC644\uC131\uB41C \uD504\uB85C\uC81D\uD2B8\uC758 GitHub \uC800\uC7A5\uC18C \uB9C1\uD06C\uB97C \uCC3E\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><h2 id="\u110B\u1162\u11B8-\u1108\u1167\u1103\u1162-\u1100\u116E\u1109\u1165\u11BC\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1162\u11B8-\u1108\u1167\u1103\u1162-\u1100\u116E\u1109\u1165\u11BC\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uC571 \uBF08\uB300 \uAD6C\uC131\uD558\uAE30</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),I=e(`<p>\uC81C\uAC00 \uC0AC\uC6A9\uD55C create-t3-app\uC740 Next.js \uC571\uC744 TypeScript, Prisma \uBC0F &quot;app router&quot;\uB97C \uC635\uC158\uC73C\uB85C \uD65C\uC131\uD654\uD55C \uC0C1\uD0DC\uB85C \uC0DD\uC131\uD558\uC600\uC5B4\uC694. \uC791\uC5C5\uC744 \uC704\uD574 create-next-app\uC744 \uC0AC\uC6A9\uD558\uACE0 Prisma\uB97C \uC218\uB3D9\uC73C\uB85C \uC124\uCE58\uD560 \uC218\uB3C4 \uC788\uC5B4\uC694.</p><p>\uADF8\uB9AC\uACE0 react-admin, ZenStack \uBC0F \uBA87 \uAC00\uC9C0 \uB2E4\uB978 \uC885\uC18D\uC131\uC744 \uC124\uCE58\uD574\uC8FC\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install react<span class="token operator">-</span>admin jsonwebtoken
npm install <span class="token operator">-</span><span class="token constant">D</span> tsx
npx zenstack@latest init
npm install @zenstackhq<span class="token operator">/</span>server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC911\uC694\uD55C \uD55C \uAC00\uC9C0\uB294 zenstack init \uBA85\uB839\uC774 prisma/schema.prisma \uD30C\uC77C\uC744 /schema.zmodel\uB85C \uBCF5\uC0AC\uD55C\uB2E4\uB294 \uAC83\uC774\uC5D0\uC694. ZModel \uC5B8\uC5B4\uB294 ZenStack\uC774 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC2A4\uD0A4\uB9C8 \uBC0F \uC561\uC138\uC2A4 \uC81C\uC5B4 \uC815\uCC45\uACFC \uAC19\uC740 \uB2E4\uB978 \uAC83\uB4E4\uC744 \uBAA8\uB378\uB9C1\uD558\uB294 \uB370 \uC0AC\uC6A9\uD558\uB294 DSL\uC785\uB2C8\uB2E4. ZModel\uC740 Prisma Schema\uC758 \uC288\uD37C\uC14B\uC774\uC5D0\uC694. \uC6B0\uC120\uC740 Prisma \uC2A4\uD0A4\uB9C8\uB97C \uC791\uC131\uD558\uB294 \uAC83\uCC98\uB7FC \uC774\uB97C \uC791\uC131\uD560 \uAC70\uC608\uC694.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),j=n("p",null,"\uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC2A4\uD0A4\uB9C8 \uBCC0\uACBD\uC774 \uD544\uC694\uD560 \uB54C \uAE30\uC5B5\uD574 \uC8FC\uC138\uC694:",-1),C=n("ul",null,[n("li",null,"\uD56D\uC0C1 schema.zmodel\uC744 \uD3B8\uC9D1\uD574\uC8FC\uC138\uC694."),n("li",null,"npx prisma generate \uB300\uC2E0 npx zenstack generate\uB97C \uC2E4\uD589\uD574\uC8FC\uC138\uC694")],-1),D=n("h1",{id:"\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1109\u1173\u110F\u1175\u1106\u1161",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1103\u1166\u110B\u1175\u1110\u1165\u1107\u1166\u110B\u1175\u1109\u1173-\u1109\u1173\u110F\u1175\u1106\u1161","aria-hidden":"true"},"#"),s(" \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC2A4\uD0A4\uB9C8")],-1),U=n("p",null,"\uC6B0\uB9AC \uC571\uC758 \uC2A4\uD0A4\uB9C8\uB294 \uC5EC\uAE30 \uC788\uC2B5\uB2C8\uB2E4:",-1),T=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),E=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>generator client <span class="token punctuation">{</span>
    provider <span class="token operator">=</span> <span class="token string">&quot;prisma-client-js&quot;</span>
<span class="token punctuation">}</span>

datasource db <span class="token punctuation">{</span>
    provider <span class="token operator">=</span> <span class="token string">&quot;sqlite&quot;</span>
    url      <span class="token operator">=</span> <span class="token string">&quot;file:./db.sqlite&quot;</span>
<span class="token punctuation">}</span>

model User <span class="token punctuation">{</span>
    id Int @id @<span class="token keyword">default</span><span class="token punctuation">(</span><span class="token function">autoincrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    createdAt DateTime @<span class="token keyword">default</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    updatedAt DateTime @updatedAt
    email String @unique
    password String @password @omit
    name String<span class="token operator">?</span>
    role String @<span class="token keyword">default</span><span class="token punctuation">(</span><span class="token string">&#39;Author&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Author, Editor, Admin</span>
    posts Post<span class="token punctuation">[</span><span class="token punctuation">]</span>
    @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

model Post <span class="token punctuation">{</span>
    id Int @id @<span class="token keyword">default</span><span class="token punctuation">(</span><span class="token function">autoincrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    createdAt DateTime @<span class="token keyword">default</span><span class="token punctuation">(</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    updatedAt DateTime @updatedAt
    title String
    content String
    status String @<span class="token keyword">default</span><span class="token punctuation">(</span><span class="token string">&#39;Draft&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Draft, Submitted, Published</span>
    user User @<span class="token function">relation</span><span class="token punctuation">(</span>fields<span class="token operator">:</span> <span class="token punctuation">[</span>userId<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">references</span><span class="token operator">:</span> <span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">onDelete</span><span class="token operator">:</span> Cascade<span class="token punctuation">)</span>
    userId Int

    @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uAC04\uB2E8\uD55C \uC8FC\uC758 \uC0AC\uD56D:</p><ul><li>@password \uC18D\uC131\uC740 bcryptjs\uB97C \uC0AC\uC6A9\uD558\uC5EC \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0 \uC800\uC7A5\uD558\uAE30 \uC804\uC5D0 \uBE44\uBC00\uBC88\uD638 \uD544\uB4DC\uB97C \uC790\uB3D9\uC73C\uB85C \uD574\uC2F1\uD558\uB3C4\uB85D \uD45C\uC2DC\uD569\uB2C8\uB2E4. @omit \uC18D\uC131\uC740 \uCFFC\uB9AC\uB97C \uC704\uD574 \uC5D4\uD2F0\uD2F0\uAC00 \uBC18\uD658\uB418\uAE30 \uC804\uC5D0 \uD574\uB2F9 \uD544\uB4DC\uAC00 \uC0AD\uC81C\uB418\uB3C4\uB85D \uD45C\uC2DC\uD569\uB2C8\uB2E4. \uC774\uAC83\uB4E4\uC740 ZenStack\uC774 Prisma\uC5D0 \uCD94\uAC00\uD55C \uD655\uC7A5 \uAE30\uB2A5\uC785\uB2C8\uB2E4.</li><li>@@allow \uC18D\uC131\uC740 \uC870\uC791 \uD5C8\uC6A9 \uC815\uCC45\uC744 \uC815\uC758\uD558\uC5EC \uD5C8\uC6A9\uB41C \uC791\uC5C5\uC744 \uACB0\uC815\uD569\uB2C8\uB2E4. \uC6B0\uB9AC\uB294 \uC77C\uB2E8 \uC544\uBB34\uB3C4 \uBAA8\uB4E0 \uAC83\uC744 \uD558\uB3C4\uB85D \uD5C8\uC6A9\uD560 \uAC83\uC785\uB2C8\uB2E4. \uC811\uADFC \uC81C\uC5B4\uB294 ZenStack\uC774 Prisma\uC5D0 \uCD94\uAC00\uD55C \uAC00\uC7A5 \uC911\uC694\uD55C \uD655\uC7A5 \uAE30\uB2A5\uC785\uB2C8\uB2E4. \uACE7 \uB2E4\uC2DC \uC0B4\uD3B4\uBCFC \uAC83\uC785\uB2C8\uB2E4.</li></ul><h2 id="\u110B\u1175\u11AB\u110C\u1173\u11BC-\u1109\u1175\u1109\u1173\u1110\u1166\u11B7-\u1100\u116E\u110E\u116E\u11A8\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11AB\u110C\u1173\u11BC-\u1109\u1175\u1109\u1173\u1110\u1166\u11B7-\u1100\u116E\u110E\u116E\u11A8\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uC778\uC99D \uC2DC\uC2A4\uD15C \uAD6C\uCD95\uD558\uAE30</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),F=e(`<p>React-Admin\uC740 \uB0B4\uC7A5\uB41C \uC778\uC99D(AuthN) \uD50C\uB85C\uC6B0\uC640 UI\uB97C \uC81C\uACF5\uD569\uB2C8\uB2E4. \uBC31\uC5D4\uB4DC\uC758 \uC778\uC99D \uBA54\uCEE4\uB2C8\uC998\uC5D0 \uB9DE\uAC8C \uC801\uC751\uD558\uAE30 \uC704\uD574 &quot;auth provider&quot;\uB97C \uAD6C\uD604\uD558\uB294 \uAC83\uB9CC \uD544\uC694\uD569\uB2C8\uB2E4. \uAC04\uB2E8\uD788 \uB9D0\uD574\uC11C, \uC6B0\uB9AC\uB294 \uC774\uBA54\uC77C\uACFC \uBE44\uBC00\uBC88\uD638\uB97C \uC790\uACA9 \uC99D\uBA85\uC73C\uB85C \uC0AC\uC6A9\uD558\uB294 \uAC04\uB2E8\uD55C JWT \uAE30\uBC18\uC758 \uC778\uC99D \uB514\uC790\uC778\uC744 \uC0AC\uC6A9\uD560 \uAC83\uC785\uB2C8\uB2E4. \uC774\uB97C \uC704\uD574 \uBA3C\uC800 /src/app/api/auth/login/route.ts\uC5D0 API \uD578\uB4E4\uB7EC\uB97C \uC0DD\uC131\uD558\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> compare <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;bcryptjs&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> sign <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jsonwebtoken&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> db <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;~/server/db&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">POST</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">request</span><span class="token operator">:</span> Request</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> email<span class="token punctuation">,</span> password <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">email</span><span class="token operator">:</span> string<span class="token punctuation">;</span> password<span class="token operator">:</span> string <span class="token punctuation">}</span> <span class="token operator">=</span>
    <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>user<span class="token punctuation">.</span><span class="token function">findUnique</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span> email <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token string">&quot;\uC798\uBABB\uB41C \uC774\uBA54\uC77C \uBC0F \uBE44\uBC00\uBC88\uD638 \uC870\uD569&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">401</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">compare</span><span class="token punctuation">(</span>password<span class="token punctuation">,</span> user<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token string">&quot;\uC798\uBABB\uB41C \uC774\uBA54\uC77C \uBC0F \uBE44\uBC00\uBC88\uD638 \uC870\uD569&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">401</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> user<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
    <span class="token literal-property property">email</span><span class="token operator">:</span> user<span class="token punctuation">.</span>email<span class="token punctuation">,</span>
    <span class="token literal-property property">token</span><span class="token operator">:</span> <span class="token function">sign</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">sub</span><span class="token operator">:</span> user<span class="token punctuation">.</span>id<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">email</span><span class="token operator">:</span> user<span class="token punctuation">.</span>email<span class="token punctuation">,</span> <span class="token literal-property property">role</span><span class="token operator">:</span> user<span class="token punctuation">.</span>role <span class="token punctuation">}</span><span class="token punctuation">,</span>
      process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">JWT_SECRET</span><span class="token operator">!</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8 \uB2E4\uC74C, \uD504\uB860\uD2B8\uC5D4\uB4DC\uAC00 \uBC31\uC5D4\uB4DC\uC640 \uC0C1\uD638\uC791\uC6A9\uD558\uB294 \uBC29\uBC95\uC744 \uC815\uC758\uD558\uB294 React-Admin auth provider\uB97C \uAD6C\uD604\uD558\uC138\uC694:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> type <span class="token punctuation">{</span> AuthProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-admin&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">authProvider</span><span class="token operator">:</span> AuthProvider <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">login</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> username<span class="token punctuation">,</span> password <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/api/auth/login&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">email</span><span class="token operator">:</span> username<span class="token punctuation">,</span> password <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resp<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token operator">||</span> resp<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> resp<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">auth</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">logout</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">checkAuth</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span> <span class="token operator">?</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  <span class="token function-variable function">checkError</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access</span>
    <span class="token keyword">const</span> status <span class="token operator">=</span> error<span class="token punctuation">.</span>status<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// other error code (404, 500, etc): no need to log out</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">getIdentity</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> auth <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\uC778\uC99D\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> email <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">email</span><span class="token operator">:</span> string <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token punctuation">,</span> email <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">getPermissions</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> authProvider<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),L=n("p",null,"Auth provider\uB294 React-Admin\uC744 \uC0AC\uC6A9\uD558\uC5EC CRUD UI\uB97C \uAD6C\uCD95\uD560 \uB54C \uC0AC\uC6A9\uB429\uB2C8\uB2E4.",-1),z=n("h2",{id:"\u1103\u1166\u110B\u1175\u1110\u1165-\u110C\u1166\u1100\u1169\u11BC\u110C\u1161-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1103\u1166\u110B\u1175\u1110\u1165-\u110C\u1166\u1100\u1169\u11BC\u110C\u1161-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1100\u1175","aria-hidden":"true"},"#"),s(" \uB370\uC774\uD130 \uC81C\uACF5\uC790 \uB9CC\uB4E4\uAE30")],-1),N=n("p",null,"\uC6B0\uB9AC\uC758 \uAD00\uB9AC\uC790 \uCF58\uC194\uC740 \uBCF8\uC9C8\uC801\uC73C\uB85C \uAE30\uBCF8 \uB370\uC774\uD130\uBC98\uC5D0 \uCFFC\uB9AC \uBC0F \uBBA4\uD14C\uC774\uC158\uC744 \uC218\uD589\uD558\uB294 \uAC83\uC785\uB2C8\uB2E4. \uADF8\uB97C \uB2EC\uC131\uD558\uAE30 \uC704\uD574 \uB450 \uAC00\uC9C0 \uC791\uC5C5\uC744 \uC644\uB8CC\uD574\uC57C \uD569\uB2C8\uB2E4:",-1),Z=n("ul",null,[n("li",null,"\uBC31\uC5D4\uB4DC: CRUD API"),n("li",null,"\uD504\uB860\uD2B8\uC5D4\uB4DC: \uBC31\uC5D4\uB4DC API\uB97C \uC0AC\uC6A9\uD558\uB294 \uB370\uC774\uD130 \uC81C\uACF5\uC790")],-1),G=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),J=e(`<p>ZenStack\uC740 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC2A4\uD0A4\uB9C8\uB97C \uAE30\uBC18\uC73C\uB85C \uC790\uB3D9 RESTful API\uB97C \uC81C\uACF5\uD558\uC5EC \uBC31\uC5D4\uB4DC \uBD80\uBD84\uC744 \uAC70\uC758 \uC190\uC27D\uAC8C \uCC98\uB9AC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uB2E4\uC74C\uC740 Next.js API \uD578\uB4E4\uB7EC\uB85C \uC124\uCE58\uD558\uB294 \uBC29\uBC95\uC785\uB2C8\uB2E4 (&quot;src/app/api/model/[\u2026path]/router.ts&quot;):</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> type AuthUser<span class="token punctuation">,</span> enhance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@zenstackhq/runtime&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> RestApiHandler <span class="token keyword">from</span> <span class="token string">&quot;@zenstackhq/server/api/rest&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> NextRequestHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@zenstackhq/server/next&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> type JwtPayload<span class="token punctuation">,</span> verify <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jsonwebtoken&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> NextRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;next/server&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> db <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;~/server/db&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// &#39;getPrisma&#39; \uCF5C\uBC31\uC740 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0 \uC561\uC138\uC2A4\uD558\uB294 \uB370 \uC0AC\uC6A9\uB418\uB294 &#39;PrismaClient&#39; \uC778\uC2A4\uD134\uC2A4\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4</span>
<span class="token comment">// \uC694\uCCAD\uC5D0 \uB300\uD574 \uC5EC\uAE30\uC5D0\uC11C\uB294 \uC561\uC138\uC2A4 \uC81C\uC5B4\uB97C \uAC15\uD654\uD558\uAE30 \uC704\uD574 ZenStack \uD5A5\uC0C1\uB41C \`PrismaClient\`\uB97C \uBC18\uD658\uD569\uB2C8\uB2E4</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getPrisma</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">req</span><span class="token operator">:</span> NextRequest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token literal-property property">user</span><span class="token operator">:</span> AuthUser <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> auth <span class="token operator">=</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;authorization&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> auth<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;Bearer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> decoded <span class="token operator">=</span> <span class="token function">verify</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">JWT_SECRET</span><span class="token operator">!</span><span class="token punctuation">)</span> <span class="token keyword">as</span> JwtPayload<span class="token punctuation">;</span>
      user <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>decoded<span class="token punctuation">.</span>sub<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">role</span><span class="token operator">:</span> decoded<span class="token punctuation">.</span>role <span class="token keyword">as</span> string<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// JWT \uD1A0\uD070\uC5D0\uC11C \uCD94\uCD9C\uB41C \uC0AC\uC6A9\uC790 \uC2DD\uBCC4 \uC815\uBCF4\uB97C \uC0AC\uC6A9\uD558\uC5EC \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0 \uC561\uC138\uC2A4\uD569\uB2C8\uB2E4</span>
  <span class="token keyword">return</span> <span class="token function">enhance</span><span class="token punctuation">(</span>db<span class="token punctuation">,</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token function">NextRequestHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  getPrisma<span class="token punctuation">,</span>
  <span class="token literal-property property">handler</span><span class="token operator">:</span> <span class="token function">RestApiHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">endpoint</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">useAppDir</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span>
  handler <span class="token keyword">as</span> <span class="token constant">DELETE</span><span class="token punctuation">,</span>
  handler <span class="token keyword">as</span> <span class="token constant">GET</span><span class="token punctuation">,</span>
  handler <span class="token keyword">as</span> <span class="token constant">PATCH</span><span class="token punctuation">,</span>
  handler <span class="token keyword">as</span> <span class="token constant">POST</span><span class="token punctuation">,</span>
  handler <span class="token keyword">as</span> <span class="token constant">PUT</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC704\uC758 \uCF54\uB4DC\uB97C \uC0AC\uC6A9\uD558\uBA74 &quot;/api/model&quot;\uC5D0\uC11C \uC644\uC804\uD55C CRUD API \uC138\uD2B8\uB97C \uC5BB\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4, GET /api/model/user\uB85C \uBAA8\uB4E0 \uC0AC\uC6A9\uC790\uB97C \uB098\uC5F4\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. CRUD API\uC758 \uC804\uCCB4 \uC0AC\uC591\uC740 \uC5EC\uAE30\uC5D0\uC11C \uD655\uC778\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uCF54\uB4DC\uB294 Authorization \uD5E4\uB354\uC5D0 JWT \uD1A0\uD070\uC744 \uC608\uC0C1\uD558\uBA70, React-Admin\uC744 \uC0AC\uC6A9\uD558\uC5EC CRUD UI \uAD6C\uCD95 \uBD80\uBD84\uC5D0 \uB3C4\uB2EC\uD558\uBA74 \uD504\uB860\uD2B8\uC5D4\uB4DC\uAC00 \uD1A0\uD070\uC744 \uBCF4\uB0B4\uB294 \uBC29\uBC95\uC744 \uBCFC \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p>\uC774\uC81C React-Admin \uB370\uC774\uD130 \uC81C\uACF5\uC790 \uBD80\uBD84\uC744 \uB2E4\uB8E8\uC5B4 \uBCF4\uACA0\uC2B5\uB2C8\uB2E4. \uC774 \uBD80\uBD84\uC740 \uB9E4\uC6B0 \uC9C1\uAD00\uC801\uC785\uB2C8\uB2E4. \uAC04\uB7B5\uD558\uAC8C \uC124\uBA85\uD558\uAE30 \uC704\uD574 \uC5EC\uAE30\uC5D0\uC11C\uB294 \uC77C\uBD80 \uCF54\uB4DC\uB9CC \uBCF4\uC5EC\uC8FC\uC9C0\uB9CC, \uC804\uCCB4 \uAD6C\uD604\uC740 \uC774 \uAE00\uC758 \uB05D\uC5D0\uC11C \uCC3E\uC73C\uC2E4 \uC218 \uC788\uC2B5\uB2C8\uB2E4.\`\`\`</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),O=e(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">FetchFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> init<span class="token operator">:</span> RequestInit<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Response<span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createDataProvider</span><span class="token punctuation">(</span>
  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  customFetch<span class="token operator">?</span><span class="token operator">:</span> FetchFn<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> DataProvider <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fetcher <span class="token operator">=</span> customFetch <span class="token operator">??</span> fetch<span class="token punctuation">;</span>

  <span class="token comment">// make the API fetch</span>
  <span class="token keyword">const</span> <span class="token function-variable function">doFetch</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> init<span class="token operator">:</span> RequestInit<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetcher</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>resp<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token operator">||</span> resp<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">HttpError</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>statusText<span class="token punctuation">,</span> resp<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> resp<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// convert React-Admin query params to URL search params</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getListQuerySearchParams</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
    params<span class="token operator">:</span> GetListParams <span class="token operator">|</span> GetManyReferenceParams<span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> searchParams <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>filter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">entries</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>filter<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        searchParams<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">filter[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    searchParams<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      <span class="token string">&quot;sort&quot;</span><span class="token punctuation">,</span>
      params<span class="token punctuation">.</span>sort<span class="token punctuation">.</span>order <span class="token operator">===</span> <span class="token string">&quot;ASC&quot;</span> <span class="token operator">?</span> params<span class="token punctuation">.</span>sort<span class="token punctuation">.</span>field <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>sort<span class="token punctuation">.</span>field<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    searchParams<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      <span class="token string">&quot;page[offset]&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>page <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> params<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>perPage<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    searchParams<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;page[limit]&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>perPage<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> searchParams<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// convert the API response to React-Admin query result</span>
  <span class="token keyword">const</span> <span class="token function-variable function">makeListQueryResult</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
    data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    meta<span class="token operator">:</span> <span class="token punctuation">{</span> total<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    params<span class="token operator">:</span> GetListParams <span class="token operator">|</span> GetManyReferenceParams<span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      data<span class="token operator">:</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> id<span class="token operator">:</span> item<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token operator">...</span>item<span class="token punctuation">.</span>attributes <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      total<span class="token operator">:</span> meta<span class="token punctuation">.</span>total<span class="token punctuation">,</span>
      pageInfo<span class="token operator">:</span> <span class="token punctuation">{</span>
        hasNextPage<span class="token operator">:</span>
          meta<span class="token punctuation">.</span>total <span class="token operator">&gt;</span> params<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>page <span class="token operator">*</span> params<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>perPage<span class="token punctuation">,</span>
        hasPreviousPage<span class="token operator">:</span> params<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>page <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">getList</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>resource<span class="token punctuation">,</span> params<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reqUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resource<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getListQuerySearchParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> meta <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doFetch</span><span class="token punctuation">(</span>reqUrl<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">makeListQueryResult</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> meta<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token function-variable function">getOne</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>resource<span class="token punctuation">,</span> params<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reqUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>resource<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>params<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">doFetch</span><span class="token punctuation">(</span>reqUrl<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        method<span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        data<span class="token operator">:</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> data<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token operator">...</span>data<span class="token punctuation">.</span>attributes <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token operator">...</span>
  <span class="token punctuation">}</span> satisfies DataProvider<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uC81C \uD544\uC694\uD55C \uBAA8\uB4E0 \uC778\uD504\uB77C\uB97C \uAC16\uCDC4\uC2B5\uB2C8\uB2E4. \uC774\uC81C UI\uB97C \uB9CC\uB4DC\uB294 \uC791\uC5C5\uC73C\uB85C \uB118\uC5B4\uAC11\uC2DC\uB2E4!</p><h2 id="crud-ui-\u1100\u116E\u110E\u116E\u11A8" tabindex="-1"><a class="header-anchor" href="#crud-ui-\u1100\u116E\u110E\u116E\u11A8" aria-hidden="true">#</a> CRUD UI \uAD6C\uCD95</h2><p>\uC5EC\uAE30\uC11C React-Admin\uC774 \uBE5B\uC744 \uBC1C\uD569\uB2C8\uB2E4 - CRUD UI\uB97C \uB9CC\uB4DC\uB294 \uAC83\uC774 \uC815\uB9D0 \uC27D\uC2B5\uB2C8\uB2E4. \uC774\uB7F0 \uBC29\uC2DD\uC73C\uB85C \uC9C4\uD589\uB429\uB2C8\uB2E4:\`\`\`</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),B=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">AdminApp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Admin dataProvider<span class="token operator">=</span><span class="token punctuation">{</span>dataProvider<span class="token punctuation">}</span> authProvider<span class="token operator">=</span><span class="token punctuation">{</span>authProvider<span class="token punctuation">}</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Resource name<span class="token operator">=</span><span class="token string">&quot;user&quot;</span> list<span class="token operator">=</span><span class="token punctuation">{</span>ListGuesser<span class="token punctuation">}</span> edit<span class="token operator">=</span><span class="token punctuation">{</span>EditGuesser<span class="token punctuation">}</span> create<span class="token operator">=</span><span class="token punctuation">{</span>UserCreate<span class="token punctuation">}</span> hasCreate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> recordRepresentation<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Resource name<span class="token operator">=</span><span class="token string">&quot;post&quot;</span> list<span class="token operator">=</span><span class="token punctuation">{</span>PostList<span class="token punctuation">}</span> edit<span class="token operator">=</span><span class="token punctuation">{</span>EditGuesser<span class="token punctuation">}</span> create<span class="token operator">=</span><span class="token punctuation">{</span>PostCreate<span class="token punctuation">}</span> hasCreate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span> recordRepresentation<span class="token operator">=</span><span class="token string">&quot;title&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Admin<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">UserCreate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Create<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>SimpleForm<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>TextInput source<span class="token operator">=</span><span class="token string">&quot;email&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;email&quot;</span> validate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>PasswordInput source<span class="token operator">=</span><span class="token string">&quot;password&quot;</span> validate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>TextInput source<span class="token operator">=</span><span class="token string">&quot;name&quot;</span> validate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>SelectInput
        source<span class="token operator">=</span><span class="token string">&quot;role&quot;</span>
        choices<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;Author&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Author&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;Editor&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Editor&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;Admin&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Admin&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">}</span>
        defaultValue<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;Author&quot;</span><span class="token punctuation">}</span>
      <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>SimpleForm<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Create<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">PostList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>List<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Datagrid rowClick<span class="token operator">=</span><span class="token string">&quot;edit&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>TextField source<span class="token operator">=</span><span class="token string">&quot;id&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>TextField source<span class="token operator">=</span><span class="token string">&quot;title&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>TextField source<span class="token operator">=</span><span class="token string">&quot;content&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>DateField source<span class="token operator">=</span><span class="token string">&quot;createdAt&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>DateField source<span class="token operator">=</span><span class="token string">&quot;updatedAt&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>ReferenceField source<span class="token operator">=</span><span class="token string">&quot;userId&quot;</span> reference<span class="token operator">=</span><span class="token string">&quot;user&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Datagrid<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>List<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">PostCreate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Create<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>SimpleForm<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>ReferenceInput source<span class="token operator">=</span><span class="token string">&quot;userId&quot;</span> reference<span class="token operator">=</span><span class="token string">&quot;user&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>SelectInput <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>ReferenceInput<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>TextInput source<span class="token operator">=</span><span class="token string">&quot;title&quot;</span> validate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>TextInput source<span class="token operator">=</span><span class="token string">&quot;content&quot;</span> multiline rows<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span> validate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>SelectInput
        source<span class="token operator">=</span><span class="token string">&quot;status&quot;</span>
        choices<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;Draft&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Draft&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;Submitted&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Submitted&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;Published&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Published&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">}</span>
        defaultValue<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;Draft&quot;</span><span class="token punctuation">}</span>
      <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>SimpleForm<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Create<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> AdminApp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8\uB9AC\uACE0 dataProvider \uCD08\uAE30\uD654\uB294 \uB2E4\uC74C\uACFC \uAC19\uC774 \uBCF4\uC785\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> dataProvider <span class="token operator">=</span> <span class="token function">createDataProvider</span><span class="token punctuation">(</span><span class="token string">&quot;/api/model&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// localStorage\uC5D0\uC11C JWT \uD1A0\uD070 \uAC00\uC838\uC640 \`Authorization\` \uD5E4\uB354\uC5D0 \uB2F4\uC544 \uBCF4\uB0B4\uAE30</span>
  <span class="token keyword">const</span> auth <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;auth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>auth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> token <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>init<span class="token punctuation">.</span>headers <span class="token keyword">instanceof</span> <span class="token class-name">Headers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      init<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      init<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Headers</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">Authorization</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> init<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>React-Admin\uC740 \uACE0\uC218\uC900 \uCEF4\uD3EC\uB10C\uD2B8\uB97C \uD1B5\uD574 \uBC31\uC5D4\uB4DC API\uC640 \uC790\uB3D9\uC73C\uB85C \uD1B5\uC2E0\uD558\uC5EC CRUD UI\uB97C \uAD6C\uCD95\uD558\uB294 \uACFC\uC815\uC744 \uB2E8\uC21C\uD654\uD569\uB2C8\uB2E4. \uB300\uBD80\uBD84\uC758 \uACBD\uC6B0 Guesser \uCEF4\uD3EC\uB10C\uD2B8\uB4E4\uC774 \uC798 \uC791\uB3D9\uD558\uC9C0\uB9CC, \uD544\uC694\uD55C \uACBD\uC6B0\uC5D0\uB294 Grid, List, Input \uB4F1\uC744 \uC870\uD569\uD558\uC5EC \uC0AC\uC6A9\uC790 \uC815\uC758 \uCEF4\uD3EC\uB10C\uD2B8\uB97C \uC27D\uAC8C \uB9CC\uB4E4 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),M=n("p",null,"\uC774\uC81C \uB85C\uADF8\uC778\uD558\uACE0 \uC0AC\uC6A9\uC790 \uBC0F \uAC8C\uC2DC\uBB3C\uC744 \uB9CC\uB4E4\uACE0 \uC870\uD68C\uD558\uACE0 \uC218\uC815 \uBC0F \uC0AD\uC81C\uD560 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.",-1),W=n("img",{src:"https://miro.medium.com/v2/resize:fit:1400/0*CobPV2w28q7hZ0bD.gif"},null,-1),$=n("h1",{id:"\u1100\u116F\u11AB\u1112\u1161\u11AB\u110B\u1166-\u1103\u1162\u1112\u1162-\u110B\u1165\u1104\u1165\u11C2\u1100\u1166-\u1109\u1162\u11BC\u1100\u1161\u11A8\u1112\u1161\u1109\u1166\u110B\u116D",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1100\u116F\u11AB\u1112\u1161\u11AB\u110B\u1166-\u1103\u1162\u1112\u1162-\u110B\u1165\u1104\u1165\u11C2\u1100\u1166-\u1109\u1162\u11BC\u1100\u1161\u11A8\u1112\u1161\u1109\u1166\u110B\u116D","aria-hidden":"true"},"#"),s(" \uAD8C\uD55C\uC5D0 \uB300\uD574 \uC5B4\uB5BB\uAC8C \uC0DD\uAC01\uD558\uC138\uC694?")],-1),H=n("p",null,"CRUD\uAC00 \uC791\uB3D9\uD558\uB294 \uAC83\uC740 \uC88B\uC740 \uC77C\uC785\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uC6B0\uB9AC\uB294 \uD37C\uC990\uC5D0\uC11C \uC544\uC9C1 \uD558\uB098\uC758 \uC911\uC694\uD55C \uC870\uAC01\uC774 \uBE60\uC9C4 \uC0C1\uD0DC\uC785\uB2C8\uB2E4: \uAD8C\uD55C \uC124\uC815. ZenStack\uC740 \uC2A4\uD0A4\uB9C8\uC5D0\uC11C \uADDC\uCE59\uC744 \uC120\uC5B8\uC801\uC73C\uB85C \uC815\uC758\uD558\uC5EC AuthZ\uB97C \uAD6C\uD604\uD558\uB294 \uAC83\uC744 \uAD49\uC7A5\uD788 \uC27D\uAC8C \uB9CC\uB4E4\uC5B4 \uC90D\uB2C8\uB2E4.",-1),V=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),Q=e(`<p>CRUD API \uD578\uB4E4\uB7EC\uB97C \uAD6C\uCD95\uD560 \uB54C \uC6B0\uB9AC\uAC00 &quot;\uD5A5\uC0C1\uB41C&quot; PrismaClient\uB97C \uB9CC\uB4E4\uC5B4\uC11C \uD604\uC7AC \uC694\uCCAD\uC744 \uC704\uD574 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0 \uC561\uC138\uC2A4\uD558\uB294 \uAC83 \uAE30\uC5B5\uD558\uC2DC\uB098\uC694? \uC774 \uD5A5\uC0C1\uB41C \uD074\uB77C\uC774\uC5B8\uD2B8\uB294 \uC790\uB3D9\uC73C\uB85C \uC561\uC138\uC2A4 \uC81C\uC5B4\uB97C \uAC15\uC81C\uD569\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uC815\uCC45\uC740 \uC6B0\uB9AC\uAC00 \uC815\uC758\uD558\uB294 \uAC83\uC774 \uCC45\uC784\uC785\uB2C8\uB2E4. \uC0AC\uC6A9\uC790 \uBAA8\uB378\uC744 \uBCF4\uD638\uD558\uAE30 \uC2DC\uC791\uD574\uBD05\uC2DC\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>model User <span class="token punctuation">{</span>
  <span class="token operator">...</span>

  <span class="token comment">// \uBAA8\uB4E0 \uB85C\uADF8\uC778\uD55C \uC0AC\uC6A9\uC790\uB294 \uBAA8\uB4E0 \uC0AC\uC6A9\uC790\uB97C \uC77D\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;read&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>

  <span class="token comment">// \uC0AC\uC6A9\uC790\uB294 \uC790\uC2E0\uC744 \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC788\uACE0, \uAD00\uB9AC\uC790\uB294 \uBAA8\uB4E0 \uC0AC\uC6A9\uC790\uB97C \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">this</span> <span class="token operator">||</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>role <span class="token operator">==</span> <span class="token string">&#39;Admin&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC27D\uC8E0? \uC815\uCC45 \uADDC\uCE59\uC5D0\uC11C \uD2B9\uC218\uD55C auth() \uD568\uC218\uB294 \uD604\uC7AC \uC694\uCCAD\uD55C \uC0AC\uC6A9\uC790\uB97C \uB098\uD0C0\uB0B4\uBA70, \uC774\uB294 \uC6B0\uB9AC\uAC00 \uC774\uC804\uC5D0 JWT \uD1A0\uD070\uC5D0\uC11C \uCD94\uCD9C\uD558\uC5EC \uD5A5\uC0C1\uB41C \uD638\uCD9C\uB85C \uC804\uB2EC\uD55C \uC0AC\uC6A9\uC790\uC785\uB2C8\uB2E4.</p><p>\uADF8\uB7FC, \uC774\uC81C \uD3EC\uC2A4\uD2B8 \uBD80\uBD84\uC73C\uB85C \uB118\uC5B4\uAC00 \uBD05\uC2DC\uB2E4. \uC5EC\uB7EC \uC694\uAD6C\uC0AC\uD56D\uC744 \uB2E4\uB8E8\uC5B4\uC57C \uD574\uC694:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),K=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>model Post <span class="token punctuation">{</span>
  <span class="token operator">...</span>

  <span class="token comment">// \uAD00\uB9AC\uC790\uB294 \uBAA8\uB4E0 \uAC8C\uC2DC\uBB3C\uC5D0 \uC644\uC804\uD55C \uC561\uC138\uC2A4 \uAD8C\uD55C\uC774 \uC788\uC2B5\uB2C8\uB2E4.</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>role <span class="token operator">==</span> <span class="token string">&#39;Admin&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \uC791\uC131\uC790\uB294 &quot;Draft&quot; \uC0C1\uD0DC\uB85C \uC0C8 \uAC8C\uC2DC\uBB3C\uC744 \uC0DD\uC131\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;create&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> user <span class="token operator">&amp;&amp;</span> status <span class="token operator">==</span> <span class="token string">&#39;Draft&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \uAC8C\uC2DC\uBB3C \uC18C\uC720\uC790\uB294 \uC790\uC2E0\uC758 \uAC8C\uC2DC\uBB3C\uC744 \uC77D\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;read&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> user<span class="token punctuation">)</span>
  <span class="token comment">// \uCD08\uC548\uC774 \uC544\uB2CC \uAC8C\uC2DC\uBB3C\uC740 \uBAA8\uB4E0 \uB85C\uADF8\uC778\uD55C \uC0AC\uC6A9\uC790\uAC00 \uC77D\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;read&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> status <span class="token operator">!=</span> <span class="token string">&#39;Draft&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// &quot;Author&quot;\uB97C \uC704\uD55C \uC5C5\uB370\uC774\uD2B8 \uADDC\uCE59</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span>
      <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>role <span class="token operator">==</span> <span class="token string">&#39;Author&#39;</span> <span class="token comment">// \uC0AC\uC6A9\uC790\uAC00 \uC791\uC131\uC790\uC778 \uACBD\uC6B0</span>
      <span class="token operator">&amp;&amp;</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> user <span class="token comment">// \uC0AC\uC6A9\uC790\uAC00 \uAC8C\uC2DC\uBB3C \uC18C\uC720\uC790\uC778 \uACBD\uC6B0</span>
      <span class="token operator">&amp;&amp;</span> status <span class="token operator">!=</span> <span class="token string">&#39;Published&#39;</span> <span class="token comment">// \uAC8C\uC2DC\uB41C \uAC8C\uC2DC\uBB3C\uC740 \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC5C6\uC74C</span>
      <span class="token operator">&amp;&amp;</span> <span class="token function">future</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>status <span class="token operator">!=</span> <span class="token string">&#39;Published&#39;</span> <span class="token comment">// \uC0C1\uD0DC\uB97C &quot;Published&quot;\uB85C \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC74C</span>
  <span class="token punctuation">)</span>
  <span class="token comment">// &quot;Editor&quot;\uB97C \uC704\uD55C \uC5C5\uB370\uC774\uD2B8 \uADDC\uCE59</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>role <span class="token operator">==</span> <span class="token string">&#39;Editor&#39;</span> <span class="token operator">&amp;&amp;</span> status <span class="token operator">!=</span> <span class="token string">&#39;Draft&#39;</span><span class="token punctuation">)</span>
  <span class="token comment">// \uC18C\uC720\uC790 \uB610\uB294 \uAD00\uB9AC\uC790\uB294 \uBC1C\uD589\uB418\uC9C0 \uC54A\uC740 \uAC8C\uC2DC\uBB3C\uC744 \uC0AD\uC81C\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</span>
  @@<span class="token function">allow</span><span class="token punctuation">(</span><span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> user <span class="token operator">&amp;&amp;</span> status <span class="token operator">!=</span> <span class="token string">&#39;Published&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC5EC\uAE30\uC11C \uC0C8\uB85C\uC6B4 \uAE30\uB2A5\uC740 future() \uD568\uC218\uC785\uB2C8\uB2E4. &quot;update&quot; \uC791\uC5C5\uC740 \uC774\uC804 \uC0C1\uD0DC\uC640 \uD6C4\uC18D \uC0C1\uD0DC\uB97C \uC218\uBC18\uD569\uB2C8\uB2E4. \uAE30\uBCF8\uC801\uC73C\uB85C \uC815\uCC45 \uADDC\uCE59\uC758 \uD544\uB4DC\uB294 \uC774\uC804 \uC0C1\uD0DC\uB97C \uCC38\uC870\uD558\uC9C0\uB9CC, future() \uD568\uC218\uB97C \uC0AC\uC6A9\uD558\uBA74 \uD6C4\uC18D \uC0C1\uD0DC\uB97C \uCC38\uC870\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p>npx zenstack generate\uB97C \uB2E4\uC2DC \uC2E4\uD589\uD558\uACE0 \uAC1C\uBC1C \uC11C\uBC84\uB97C \uB2E4\uC2DC \uC2DC\uC791\uD558\uBA74 \uC561\uC138\uC2A4 \uADDC\uC815\uC774 \uC801\uC6A9\uB429\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4, \uC791\uC131\uC790\uB85C\uC11C \uAC8C\uC2DC\uBB3C \uC0C1\uD0DC\uB97C &quot;Published&quot;\uB85C \uC124\uC815\uD558\uB824\uACE0 \uD558\uBA74 \uC77C\uBD80 \uC791\uC5C5\uC774 \uAC70\uBD80\uB420 \uAC83\uC744 \uC54C \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p><img src="`+d+'" alt="./img/Building-an-Admin-Console-With-Minimum-Code-Using-React-Admin-Prisma-and-Zenstack_2.png"></p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),X=n("h1",{id:"\u1100\u1167\u11AF\u1105\u1169\u11AB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1100\u1167\u11AF\u1105\u1169\u11AB","aria-hidden":"true"},"#"),s(" \uACB0\uB860")],-1),Y=n("p",null,"\uC774 \uAE00\uC744 \uC990\uAC81\uAC8C \uC77D\uC73C\uC2DC\uACE0 \uC811\uADFC \uBC29\uC2DD\uC744 \uD765\uBBF8\uB86D\uAC8C \uB290\uAF08\uC73C\uBA74 \uC88B\uACA0\uC5B4\uC694. \uAD00\uB9AC\uC790 \uCF58\uC194\uC744 \uAD6C\uCD95\uD558\uB294 \uAC83\uC740 \uC885\uC885 \uACE0\uAC1D \uAC00\uCE58\uB97C \uC9C1\uC811\uC801\uC73C\uB85C \uB354\uD558\uC9C0 \uC54A\uC544\uC11C \uBCF4\uC0C1\uC801\uC774\uC9C0 \uC54A\uC740 \uC791\uC5C5\uC77C \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uC801\uC808\uD55C \uB3C4\uAD6C\uB97C \uACB0\uD569\uD568\uC73C\uB85C\uC368 \uC990\uAC81\uACE0 \uC0DD\uC0B0\uC801\uC73C\uB85C \uB9CC\uB4E4 \uC218 \uC788\uC5B4\uC694. \uC774 \uAE00\uC5D0\uC11C\uB294 React-Admin\uACFC ZenStack\uC774 \uD560 \uC218 \uC788\uB294 \uAC83\uC758 \uC77C\uBD80\uB9CC \uB2E4\uB918\uC2B5\uB2C8\uB2E4. \uB450 \uD234 \uBAA8\uB450 \uB354 \uB9CE\uC740 \uAC83\uC744 \uC81C\uACF5\uD558\uACE0 \uC788\uC73C\uBA70, \uB354 \uAE4A\uC774 \uD0D0\uC0C9\uD574\uBCF4\uC2DC\uAE30\uB97C \uAD8C\uC7A5\uD569\uB2C8\uB2E4.",-1),nn={href:"https://github.com/ymc9/react-admin-blog",target:"_blank",rel:"noopener noreferrer"};function sn(an,tn){const c=i("ExternalLinkIcon");return a(),u("div",null,[m,b,g,y,h,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),f,w,q,_,P,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),A,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),x,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),S,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),R,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),I,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),j,C,D,U,T,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),E,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),F,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),L,z,N,Z,G,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),J,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),O,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),B,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),M,W,$,H,V,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),Q,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),K,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),X,Y,n("p",null,[s("\uC644\uC131\uB41C \uC0D8\uD50C \uD504\uB85C\uC81D\uD2B8\uB294 \uC5EC\uAE30\uC5D0\uC11C \uD655\uC778\uD560 \uC218 \uC788\uC5B4\uC694: "),n("a",nn,[s("https://github.com/ymc9/react-admin-blog"),r(c)]),s(".")])])}var on=l(v,[["render",sn],["__file","index.html.vue"]]);export{on as default};
