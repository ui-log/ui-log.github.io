import{_ as l,r as i,o as a,c as u,a as t,w as p,d as s,b as o,e as n,f as d,g as e}from"./app.25d62129.js";var r="/assets/FeatureEngineeringWithLatitudeandLongitude_0.57f85da5.png",k="/assets/FeatureEngineeringWithLatitudeandLongitude_1.c5801370.png",_="/assets/FeatureEngineeringWithLatitudeandLongitude_2.0e69db9e.png",v="/assets/FeatureEngineeringWithLatitudeandLongitude_3.94092891.png",g="/assets/FeatureEngineeringWithLatitudeandLongitude_4.10d1b907.png",m="/assets/FeatureEngineeringWithLatitudeandLongitude_5.2ac49c65.png",b="/assets/FeatureEngineeringWithLatitudeandLongitude_6.1bba104a.png";const f={},h=n("p",null,"\uC624\uB298\uB0A0 \uAC00\uC7A5 \uCE58\uC5F4\uD55C \uAE30\uC220 \uC2DC\uC7A5 \uC911 \uB9CE\uC740 \uACF3\uC5D0\uC11C \uC9C0\uB3C4 \uC0C1\uC758 \uC810\uB4E4\uC774 \uC6C0\uC9C1\uC785\uB2C8\uB2E4: \uB77C\uC774\uB4DC \uC250\uC5B4\uB9C1 \uC11C\uBE44\uC2A4 (Uber, Lyft, Grab), \uB9C8\uC774\uD06C\uB85C \uBAA8\uBE4C\uB9AC\uD2F0 \uC11C\uBE44\uC2A4 (Lime, Bird), \uC74C\uC2DD \uBC30\uB2EC \uC11C\uBE44\uC2A4 (Delivery Hero, Postmates, Doordash) \uB4F1\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uAC8C\uB2E4\uAC00, \uACE0\uAC1D\uC758 \uC704\uCE58\uB97C \uC81C\uD488 \uC0AC\uC6A9 \uC0AC\uB840\uC758 \uC911\uC2EC\uC5D0 \uB450\uC9C0 \uC54A\uB294 \uB9CE\uC740 \uC11C\uBE44\uC2A4\uB3C4 \uACE0\uAC1D\uC758 \uC704\uCE58\uB97C \uC54C\uC544\uC57C \uD569\uB2C8\uB2E4. \uADF8\uB807\uAC8C \uD558\uBA74 \uACE0\uAC1D\uC774 \uC5B4\uB514\uC5D0 \uC788\uC73C\uBA70 \uC8FC\uBCC0\uC5D0\uC11C \uBB34\uC2A8 \uC77C\uC774 \uC77C\uC5B4\uB098\uACE0 \uC788\uB294\uC9C0\uC5D0 \uB530\uB77C \uB354 \uB098\uC740 \uB9DE\uCDA4\uD615 \uACBD\uD5D8\uC744 \uC81C\uACF5\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),y=n("p",null,"\uC774 \uBAA8\uB4E0 \uAC83\uC774 \uB370\uC774\uD130 \uACFC\uD559\uC790\uB4E4\uC5D0\uAC8C \uC758\uBBF8\uD558\uB294 \uBC14\uB294 \uB370\uC774\uD130 \uB808\uC774\uD06C\uC5D0 \uB9CE\uC740 \uC704\uB3C4\uC640 \uACBD\uB3C4\uAC00 \uB5A0\uB2E4\uB2C8\uACE0 \uC788\uB2E4\uB294 \uAC83\uC784\uC744 \uB9D0\uD574\uC90D\uB2C8\uB2E4. \uADF8\uB9AC\uACE0 \uC774 \uB450 \uBCC0\uC218\uB9CC\uC73C\uB85C\uB3C4 \uB9CE\uC740 \uC815\uBCF4\uAC00 \uC228\uACA8\uC838 \uC788\uC2B5\uB2C8\uB2E4!",-1),q=n("p",null,"\uCC3D\uC758\uC801\uC774\uACE0 \uD6A8\uACFC\uC801\uC778 \uBC29\uBC95\uC73C\uB85C \uC704\uB3C4\uC640 \uACBD\uB3C4\uB97C \uD65C\uC6A9\uD558\uBA74 \uAE30\uACC4 \uD559\uC2B5 \uC751\uC6A9 \uD504\uB85C\uADF8\uB7A8\uC5D0 \uC0C1\uB2F9\uD55C \uC608\uCE21\uB825\uC744 \uAC00\uC838\uB2E4\uC904 \uBFD0\uB9CC \uC544\uB2C8\uB77C \uBD84\uC11D \uB178\uB825\uC5D0 \uCC28\uC6D0\uC774 \uCD94\uAC00\uB418\uC5B4 \uAE30\uC5C5 \uBC0F \uACE0\uAC1D\uC5D0\uAC8C \uB354 \uB9CE\uC740 \uAC00\uCE58\uB97C \uC81C\uACF5\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),w=n("p",null,"\uC774 \uAE30\uC0AC\uC758 \uBAA9\uD45C\uB294 \uBBF8\uAD6D \uB9C8\uC774\uC560\uBBF8 \uC8FC\uD0DD\uAC00\uC758 \uD310\uB9E4 \uAC00\uACA9 \uC608\uCE21 \uBB38\uC81C\uC5D0 \uB300\uD574 \uB2E8\uC9C0 \uC704\uB3C4\uC640 \uACBD\uB3C4\uB9CC\uC744 \uC0AC\uC6A9\uD558\uB294 \uBA87 \uAC00\uC9C0 \uD2B9\uC131 \uACF5\uD559 \uAE30\uC220\uC744 \uC18C\uAC1C\uD558\uACE0 \uADF8\uB4E4\uC758 \uC608\uCE21\uB825\uC744 \uBE44\uAD50\uD558\uB294 \uAC83\uC785\uB2C8\uB2E4. \uAD6C\uC870\uB294 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4:",-1),E=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),L=n("ul",null,[n("li",null,"\uB9C8\uC774\uC560\uBBF8 \uC8FC\uD0DD \uD310\uB9E4 \uAC00\uACA9 \uC608\uCE21 \uBB38\uC81C \uC124\uC815"),n("li",null,"\uD2B9\uC131 \uACF5\uD559 \uC2E4\uD5D8 2.1. \uC6D0\uC2DC \uC704\uB3C4 \uBC0F \uACBD\uB3C4 2.2. \uACF5\uAC04 \uBC00\uB3C4 2.3. \uC9C0\uC624\uD574\uC2DC \uD0C0\uAC9F \uC778\uCF54\uB529 2.4. \uBAA8\uB4E0 \uD2B9\uC131\uC758 \uC870\uD569"),n("li",null,"\uD1A0\uB860"),n("li",null,"\uACB0\uB860")],-1),T=n("p",null,"\uC774 \uD3EC\uC2A4\uD2B8\uC758 \uC8FC\uC694 \uB0B4\uC6A9\uC740 \uD2B9\uC131 \uACF5\uD559\uC5D0 \uC788\uC73C\uBBC0\uB85C \uBAA8\uB378 \uD3C9\uAC00\uB294 \uAC04\uACB0\uD568\uACFC \uBA85\uD655\uC131\uC744 \uC704\uD574 \uB9E4\uC6B0 \uC9C1\uC811\uC801\uC77C \uAC83\uC785\uB2C8\uB2E4. (\uC989, \uAD50\uCC28 \uAC80\uC99D \uBC0F \uD558\uC774\uD37C\uD30C\uB77C\uBBF8\uD130 \uCD5C\uC801\uD654 \uBBF8\uD3EC\uD568).",-1),R=n("p",null,'\uB610\uD55C, \uC774 \uD3EC\uC2A4\uD2B8\uC5D0\uC11C\uB294 \uB370\uC774\uD130 \uC870\uC791 \uB77C\uC774\uBE0C\uB7EC\uB9AC\uB85C Pandas \uB300\uC2E0 Polars\uB97C \uC0AC\uC6A9\uD560 \uAC83\uC785\uB2C8\uB2E4. \uB9CC\uC57D \uC5EC\uB7EC\uBD84\uC774 Polars\uC5D0 \uC775\uC219\uD558\uC9C0 \uC54A\uAC70\uB098 \uC544\uC9C1 Panda \uD658\uACBD\uC5D0\uC11C \uAC07\uD600\uC788\uB294 \uACBD\uC6B0, \uC774\uC804 \uAC8C\uC2DC\uBB3C "\uD32C\uB354\uC5D0\uC11C \uD3F4\uB77C\uB85C \uC601\uC6D0\uD788 \uC804\uD658\uD55C 3\uAC00\uC9C0 \uC774\uC720"\uB97C \uBA3C\uC800 \uD655\uC778\uD574\uBCF4\uC138\uC694.',-1),x=n("p",null,"\uADF8\uB9AC\uACE0 \uC774\uC81C \uCD9C\uBC1C\uD569\uC2DC\uB2E4! \u{1F680}",-1),D=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),F=n("h1",{id:"\u1106\u1161\u110B\u1175\u110B\u1162\u1106\u1175-\u110C\u116E\u1110\u1162\u11A8-\u1111\u1161\u11AB\u1106\u1162-\u1100\u1161\u1100\u1167\u11A8-\u110B\u1168\u110E\u1173\u11A8-\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u110C\u1165\u11BC",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1106\u1161\u110B\u1175\u110B\u1162\u1106\u1175-\u110C\u116E\u1110\u1162\u11A8-\u1111\u1161\u11AB\u1106\u1162-\u1100\u1161\u1100\u1167\u11A8-\u110B\u1168\u110E\u1173\u11A8-\u1106\u116E\u11AB\u110C\u1166-\u1109\u1165\u11AF\u110C\u1165\u11BC","aria-hidden":"true"},"#"),s(" \uB9C8\uC774\uC560\uBBF8 \uC8FC\uD0DD \uD310\uB9E4 \uAC00\uACA9 \uC608\uCE21: \uBB38\uC81C \uC124\uC815")],-1),G={href:"https://www.openml.org/search?type=data&id=43093",target:"_blank",rel:"noopener noreferrer"},A=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> polars <span class="token keyword">as</span> pl
from xgboost <span class="token keyword">import</span> XGBRegressor
from sklearn<span class="token punctuation">.</span>linear_model <span class="token keyword">import</span> Ridge

# \uB370\uC774\uD130<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>openml<span class="token punctuation">.</span>org<span class="token operator">/</span>search<span class="token operator">?</span>type<span class="token operator">=</span>data<span class="token operator">&amp;</span>id<span class="token operator">=</span><span class="token number">43093</span>
df <span class="token operator">=</span> <span class="token punctuation">(</span>
    pl<span class="token punctuation">.</span><span class="token function">scan_csv</span><span class="token punctuation">(</span><span class="token string">&quot;../data/miami-housing.csv&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">with_columns</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;SALE_PRC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;LATITUDE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;LONGITUDE&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">to_lowercase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;price&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8\uB7EC\uB098 \uC5B4\uB5A4 \uBA38\uC2E0\uB7EC\uB2DD \uC608\uCE21\uC744 \uC2DC\uC791\uD558\uAE30 \uC804\uC5D0, \uBAA9\uD45C \uBCC0\uC218\uB97C \uC870\uC0AC\uD558\uB294 \uAC83\uC774 \uC911\uC694\uD569\uB2C8\uB2E4. \uACB0\uAD6D, &quot;\uAC00\uACA9&quot;\uC774\uB098 &quot;\uC218\uC785&quot;\uACFC \uAC19\uC740 \uAE08\uC804\uC801 \uBCC0\uC218\uB294 \uC885\uC885 \uB85C\uADF8 \uC815\uADDC \uBD84\uD3EC\uB97C \uAC00\uC9C0\uAC70\uB098 \uC801\uC5B4\uB3C4 \uB9E4\uC6B0 \uC6B0\uCE21\uC73C\uB85C \uCE58\uC6B0\uCE5C \uACBD\uD5A5\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uBBC0\uB85C \uBAA9\uD45C \uBCC0\uC218\uB97C \uBA3C\uC800 \uB85C\uADF8 \uACF5\uAC04\uC73C\uB85C \uBCC0\uD658\uD558\uB294 \uAC83\uC774 \uC88B\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,3),X=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code># \uC77C\uBC18\uC801\uC73C\uB85C \uAC00\uACA9\uC5D0 \uB85C\uADF8\uB97C \uCDE8\uD558\uB294 \uAC83\uC774 \uD544\uC694\uD558\uBA70 <span class="token number">1</span>\uC744 \uB354\uD558\uAE30 \uC704\uD55C<span class="token punctuation">,</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> \uC624\uB958\uB97C \uACE0\uB824\uD574\uC57C \uD569\uB2C8\uB2E4<span class="token punctuation">.</span> \uD558\uC9C0\uB9CC \uC9D1\uC774 $0\uC5D0 \uD310\uB9E4\uB418\uB294 \uACBD\uC6B0\uB294 \uC5C6\uACA0\uC8E0 <span class="token operator">:</span><span class="token constant">P</span>
df <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">with_columns</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">log10</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">suffix</span><span class="token punctuation">(</span><span class="token string">&quot;_log10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB85C\uADF8 \uBCC0\uD658 \uD6C4\uC5D0\uB3C4 \uB300\uC0C1\uAC12\uC740 \uC57D\uAC04 \uC624\uB978\uCABD\uC73C\uB85C \uCE58\uC6B0\uCCD0 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB798\uB3C4 \uC6B0\uB9AC\uC758 use-case\uC5D0 \uCDA9\uBD84\uD574 \uBCF4\uC785\uB2C8\uB2E4.</p><img src="`+r+'"><p>\uC774\uC81C column\uC744 \uCD94\uAC00\uD574\uC11C train\uACFC test \uB370\uC774\uD130\uB97C \uAD6C\uBD84\uD560 \uC218 \uC788\uC73C\uBA74 \uC774 \uBAA8\uB4E0 \uAC83\uC774 \uC798 \uB420 \uAC83 \uAC19\uC2B5\uB2C8\uB2E4.```</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),M=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">TRAIN_TEST_SPLIT_FRACTION</span> <span class="token operator">=</span> <span class="token number">0.8</span>

df <span class="token operator">=</span> <span class="token punctuation">(</span>
    df

    # \uB370\uC774\uD130\uAC00 \uBBF8\uB9AC \uC815\uB82C\uB418\uC5B4 \uC788\uC5B4\uC11C \uBC1C\uC0DD\uD560 \uC218 \uC788\uB294 \uBB38\uC81C\uB97C \uD53C\uD558\uAE30 \uC704\uD574 \uB370\uC774\uD130\uB97C \uC11E\uC2B5\uB2C8\uB2E4<span class="token punctuation">.</span>
    <span class="token punctuation">.</span><span class="token function">sample</span><span class="token punctuation">(</span>fraction<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span>True<span class="token punctuation">)</span>
    
    # \uADF8 \uD6C4 \uD589 \uBC88\uD638\uB97C \uBD84\uB9AC\uB41C \uD559\uC2B5 \uBC0F \uD14C\uC2A4\uD2B8 \uB370\uC774\uD130\uC758 \uC778\uB371\uC2A4\uB85C \uC0AC\uC6A9\uD569\uB2C8\uB2E4<span class="token punctuation">.</span>
    <span class="token punctuation">.</span><span class="token function">with_row_count</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;row_number&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">with_columns</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;row_number&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">TRAIN_TEST_SPLIT_FRACTION</span> <span class="token operator">*</span> <span class="token function">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">alias</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uADF8\uB9AC\uACE0 \uC774\uC81C \uBAA8\uB4E0 \uC900\uBE44\uAC00 \uB05D\uB0AC\uC5B4\uC694! \uADF8\uB7EC\uB2C8 \uB354 \uC774\uC0C1 \uB9D0\uC744 \uAE38\uAC8C \uD560 \uD544\uC694 \uC5C6\uC774, \uD53C\uCCD0 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1\uC744 \uC2DC\uC791\uD574\uBD05\uC2DC\uB2E4 \u{1F9D1}\u200D\u{1F4BB}</p><h1 id="\u1111\u1175\u110E\u1165-\u110B\u1166\u11AB\u110C\u1175\u1102\u1175\u110B\u1165\u1105\u1175\u11BC-\u1109\u1175\u11AF\u1112\u1165\u11B7" tabindex="-1"><a class="header-anchor" href="#\u1111\u1175\u110E\u1165-\u110B\u1166\u11AB\u110C\u1175\u1102\u1175\u110B\u1165\u1105\u1175\u11BC-\u1109\u1175\u11AF\u1112\u1165\u11B7" aria-hidden="true">#</a> \uD53C\uCC98 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uC2E4\uD5D8</h1><h2 id="_1-\u110B\u1171\u1103\u1169\u110B\u116A-\u1100\u1167\u11BC\u1103\u1169-raw-latitude-and-longitude" tabindex="-1"><a class="header-anchor" href="#_1-\u110B\u1171\u1103\u1169\u110B\u116A-\u1100\u1167\u11BC\u1103\u1169-raw-latitude-and-longitude" aria-hidden="true">#</a> 1. \uC704\uB3C4\uC640 \uACBD\uB3C4 (Raw Latitude and Longitude)</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),O=e(`<p>\uCCAB \uBC88\uC9F8 \uD2B9\uC131 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uAE30\uBC95\uC740... \uB9DE\uC8E0 \u2014 \uD2B9\uC131 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1\uC774 \uC5C6\uB294 \uAC83! \uC704\uB3C4\uC640 \uACBD\uB3C4\uB294 \uADF8 \uC790\uCCB4\uB85C \uAF64 \uAC15\uB825\uD55C \uD2B9\uC131\uC77C \uC218 \uC788\uC9C0\uB9CC, \uADF8 \uD2B9\uC131\uC740 \uBAA8\uB378\uC5D0 \uB530\uB77C \uB9E4\uC6B0 \uB2EC\uB77C\uC9D1\uB2C8\uB2E4. \uD2B9\uD788 \uC704\uB3C4\uB098 \uACBD\uB3C4\uAC00 \uBAA9\uD45C \uBCC0\uC218\uC640 \uC120\uD615 \uAD00\uACC4\uB97C \uAC16\uB294 \uAC83\uC744 \uAE30\uB300\uD558\uAE30 \uC5B4\uB835\uC2B5\uB2C8\uB2E4. \uC774\uB4E4\uC740 \uC8FC\uB85C &quot;\uC628\uB3C4&quot;\uB098 &quot;\uC2B5\uB3C4&quot;\uC640 \uAC19\uC774 \uC9C0\uAD6C\uC801\uC778 \uC131\uC9C8\uC744 \uAC00\uC9C4 \uBAA9\uD45C \uBCC0\uC218\uC77C \uB54C \uC608\uCE21\uC774 \uAC00\uB2A5\uD558\uC9C0\uB9CC, \uC774\uB7EC\uD55C \uC0C1\uD669\uC5D0\uC11C \uACBD\uC704\uB3C4\uAC00 RidgeRegression\uACFC \uAC19\uC740 \uC120\uD615 \uBAA8\uB378\uACFC \uC801\uD569\uD558\uC9C0 \uC54A\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uC774\uB4E4\uC740 XGBoost\uC640 \uAC19\uC740 \uC758\uC0AC \uACB0\uC815 \uD2B8\uB9AC \uAE30\uBC18 \uBAA8\uB378\uC5D0\uC11C \uC774\uBBF8 \uAC15\uB825\uD55C \uC131\uB2A5\uC744 \uBC1C\uD718\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">MODEL_FEATURE_LIST_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;raw_lat_lon&quot;</span>
<span class="token constant">MODEL_FEATURE_LIST</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">]</span>

X_train <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_FEATURE_LIST</span><span class="token punctuation">)</span>
y_train <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_TARGET</span><span class="token punctuation">)</span>
X_test <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">~</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_FEATURE_LIST</span><span class="token punctuation">)</span>
y_test <span class="token operator">=</span> df<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">~</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_TARGET</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_numpy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
model_performance_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> model_name<span class="token punctuation">,</span> model_class <span class="token keyword">in</span> <span class="token function">zip</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string">&quot;xgboost&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ridge regression&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>XGBRegressor<span class="token punctuation">,</span> Ridge<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token operator">:</span>
    model <span class="token operator">=</span> <span class="token function">model_class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
    y_predicted <span class="token operator">=</span> model<span class="token punctuation">.</span><span class="token function">predict</span><span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
    model_performance <span class="token operator">=</span> <span class="token function">root_mean_squared_error</span><span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_predicted<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+k+'" alt="\uD2B9\uC131 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1\uACFC \uC704\uB3C4 \uBC0F \uACBD\uB3C4"></p><p>\uC9C1\uAD00\uC774 \uB9DE\uC558\uC5B4\uC694: XGBoost\uAC00 RidgeRegression\uBCF4\uB2E4 \uB0AE\uC740 root_mean_squared_error\uB97C \uBCF4\uC5EC\uC90D\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),I=n("h2",{id:"_2-\u1100\u1169\u11BC\u1100\u1161\u11AB-\u1106\u1175\u11AF\u1103\u1169",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-\u1100\u1169\u11BC\u1100\u1161\u11AB-\u1106\u1175\u11AF\u1103\u1169","aria-hidden":"true"},"#"),s(" 2. \uACF5\uAC04 \uBC00\uB3C4")],-1),j=n("p",null,"\uB3C4\uC2DC \uC9C0\uC5ED\uC758 \uC8FC\uD0DD\uC740 \uC2DC\uACE8 \uC9C0\uC5ED\uC758 \uC8FC\uD0DD\uBCF4\uB2E4 \uB192\uC740 \uAC00\uACA9\uC5D0 \uD314\uB9B4\uAE4C\uC694?",-1),B=n("p",null,"\uC778\uAD6C \uBC00\uB3C4\uB294 \uB2E4\uC591\uD55C \uC778\uAD6C \uD1B5\uACC4 \uACFC\uC815\uACFC \uAD00\uB828\uC774 \uC788\uC73C\uBA70, \uC774\uB294 \uC784\uB300\uB8CC\uC640 \uC18C\uB4DD\uC5D0\uB3C4 \uB9C8\uCC2C\uAC00\uC9C0\uC785\uB2C8\uB2E4 (\uC608: \uB3C4\uC2DC\uC5D0\uC11C \uC0AC\uB78C\uB4E4\uC774 \uC2DC\uACE8\uBCF4\uB2E4 \uB354 \uB192\uC740 \uAE09\uC5EC\uB97C \uBC1B\uC2B5\uB2C8\uB2E4). \uC774 \uBB38\uC81C\uB294 \uB9C8\uC774\uC560\uBBF8\uC5D0 \uC911\uC810\uC744 \uB450\uACE0 \uC788\uC9C0\uB9CC, \uD574\uB2F9 \uC9C0\uC5ED\uC740 \uB3C4\uC2DC \uC9C0\uC5ED\uACFC \uC870\uAE08 \uB35C \uD55C \uB3C4\uC2DC \uC9C0\uC5ED\uC774 \uC788\uC744 \uBFD0\uC774\uBA70, \uACF5\uAC04 \uBC00\uB3C4 \uAE30\uB2A5\uC740 \uC5EC\uC804\uD788 \uC720\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),S=n("p",null,"\uC8FC\uD0DD \uC8FC\uBCC0\uC758 \uACF5\uAC04 \uBC00\uB3C4\uB97C \uCE21\uC815\uD558\uAE30 \uC704\uD55C \uB2E4\uC591\uD55C \uBC29\uBC95\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4: \uAC01 \uC8FC\uD0DD \uB9E4\uB9E4 \uC9C0\uC810 \uC8FC\uBCC0\uC758 \uB2E4\uB978 \uC8FC\uD0DD \uB9E4\uB9E4 \uAC74\uC218\uB97C \uC138\uB294 \uBC29\uBC95; \uAC01 \uC8FC\uD0DD \uB9E4\uB9E4 \uC704\uCE58\uC5D0 \uB300\uD55C \uCEE4\uB110 \uBC00\uB3C4 \uCD94\uC815\uCE58\uB97C \uACC4\uC0B0\uD558\uACE0 \uC0D8\uD50C\uB9C1\uD558\uB294 \uBC29\uBC95; \uB610\uB294 \uC778\uAD6C \uBC00\uB3C4\uC5D0 \uB300\uD55C \uC11C\uB4DC \uD30C\uD2F0 \uC778\uAD6C\uC870\uC0AC \uB370\uC774\uD130\uB97C \uAC00\uC838 \uC624\uB294 \uBC29\uBC95\uB3C4 \uC788\uC2B5\uB2C8\uB2E4. \uC774 \uACBD\uC6B0, \uB098\uB294 scipy\uC758 cKDtree\uB97C \uC0AC\uC6A9\uD558\uC5EC \uAC01 \uC8FC\uD0DD \uC8FC\uBCC0\uC758 \uC8FC\uD0DD \uB9E4\uB9E4 \uAC74\uC218\uB97C \uACF5\uAC04 \uBC00\uB3C4\uB85C \uCE21\uC815\uD569\uB2C8\uB2E4:",-1),U=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),N=e(`<div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add_density_feature_columns_to_dataframe</span><span class="token punctuation">(</span>geo_df<span class="token punctuation">:</span> pl<span class="token punctuation">.</span>DataFrame<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> pl<span class="token punctuation">.</span>DataFrame<span class="token punctuation">:</span>
    tree <span class="token operator">=</span> spatial<span class="token punctuation">.</span>cKDTree<span class="token punctuation">(</span>df<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> geo_df<span class="token punctuation">.</span>with_columns<span class="token punctuation">(</span>
        pl<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>
            <span class="token string">&quot;\uACF5\uAC04 \uBC00\uB3C4&quot;</span><span class="token punctuation">,</span>
            tree<span class="token punctuation">.</span>query_ball_point<span class="token punctuation">(</span>geo_df<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">.005</span><span class="token punctuation">,</span> return_length<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> result


df_w_density <span class="token operator">=</span> add_density_feature_columns_to_dataframe<span class="token punctuation">(</span>df<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+'" alt="Feature Engineering with Latitude and Longitude"></p><p>\uC774\uC81C \uC774 \uC0C8\uB85C\uC6B4 \uD2B9\uC131\uC744 \uBAA8\uB378 \uD6C8\uB828\uC5D0 \uC801\uC6A9\uD569\uB2C8\uB2E4...</p><p><img src="'+v+'" alt="Feature Engineering with Latitude and Longitude"></p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),P=n("p",null,"\uACF5\uAC04 \uBC00\uB3C4\uB294 RidgeRegression \uBC0F XGBoost \uBAA8\uB450\uC758 \uC6D0\uC2DC \uC704\uB3C4\uC640 \uACBD\uB3C4\uBCF4\uB2E4 \uC6B0\uC218\uD55C \uC131\uB2A5\uC744 \uBCF4\uC5EC\uC90D\uB2C8\uB2E4. \uC2E0\uAE30\uD558\uAC8C\uB3C4 \uC774 \uAE30\uB2A5\uC5D0 \uB300\uD574 RidgeRegression\uC774 XGBoost\uBCF4\uB2E4 \uC57D\uAC04 \uC6B0\uC218\uD55C \uC131\uB2A5\uC744 \uBCF4\uC785\uB2C8\uB2E4.",-1),W=n("h2",{id:"_3-geohash-target-encoding",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-geohash-target-encoding","aria-hidden":"true"},"#"),s(" 3. Geohash Target Encoding")],-1),C=n("p",null,"\uC54C\uB824\uC9C4 \uC0AC\uC2E4 \u2014 \uC5B4\uB5A4 \uC9C0\uC5ED\uC740 \uB2E4\uB978 \uC9C0\uC5ED\uBCF4\uB2E4 \uB354 \uBE44\uC2F8\uB2E4\uB294 \uAC83\uC785\uB2C8\uB2E4. \uB530\uB77C\uC11C \uAC01 \uC9D1\uC758 \uC9C0\uC5ED\uC5D0 \uB300\uD55C \uC815\uBCF4 (\uBC0F \uD574\uB2F9 \uC9C0\uC5ED\uC5D0\uC11C \uAE30\uB300\uD560 \uC218 \uC788\uB294 \uB9E4\uB9E4 \uAC00\uACA9)\uB97C \uBAA8\uB378\uC5D0 \uC81C\uACF5\uD558\uBA74 \uC608\uCE21 \uB2A5\uB825\uC744 \uB192\uC77C \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),V=n("p",null,"\uD558\uC9C0\uB9CC \uC774\uB97C \uC5B4\uB5BB\uAC8C \uD560\uAE4C\uC694? \uD639\uC740 \uB354 \uC911\uC694\uD55C \uC9C8\uBB38\uC740 \uBB34\uC5C7\uC774 \uB3D9\uB124\uC778\uAC00\uC694?",-1),z=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),K=e(`<p>\uC774\uC6C3\uC740 \uC5B4\uB5A4 \uAC83\uC774\uB4E0 \uB420 \uC218 \uC788\uC5B4\uC694 \u2014 \uC6B0\uD3B8\uBC88\uD638, \uAC70\uB9AC, \uB610\uB294 \uC6B0\uB9AC\uC758 \uACBD\uC6B0 Geohash\uCF54\uB4DC\uC77C \uC218 \uC788\uC5B4\uC694. (\uCD5C\uADFC Geohash \uBC0F \uB2E4\uB978 \uC9C0\uB9AC\uC801 \uC778\uB371\uC2F1 \uB3C4\uAD6C\uC5D0 \uB300\uD574 \uAE30\uC0AC\uB97C \uC791\uC131\uD588\uC5B4\uC694 \u2014 \uC774 \uB3C4\uAD6C\uB4E4\uC774 \uC5B4\uB5BB\uAC8C \uC791\uB3D9\uD558\uBA70, \uC5B4\uB5BB\uAC8C \uC0AC\uC6A9\uD558\uB294\uC9C0, \uADF8\uB9AC\uACE0 Geohash\uB97C \uB450 \uAC00\uC9C0 \uB2E4\uB978 \uC778\uAE30\uC788\uB294 \uC9C0\uB9AC\uC801 \uC778\uB371\uC2F1 \uB3C4\uAD6C\uC640 \uBE44\uAD50\uD55C \uB0B4\uC6A9\uC774\uC5D0\uC694. \uC790\uC138\uD55C \uB0B4\uC6A9\uC740 \uD655\uC778\uD574\uBCF4\uC138\uC694!)</p><p>\uAC04\uB2E8\uD788 \uB9D0\uD574\uC11C, Geohash\uB294 \uC704\uB3C4 \uACBD\uB3C4 \uC9C0\uC810\uC744 \uACE0\uC815 \uC774\uC6C3\uC73C\uB85C \uBCC0\uD658\uD558\uC5EC \uC8FC\uD0DD \uC774\uC6C3\uC744 \uBC94\uC8FC \uBCC0\uC218\uB85C \uC81C\uACF5\uD574\uC918\uC694. \uADF8\uB9AC\uACE0 \uC774\uC81C, \uC8FC\uD0DD\uC758 \uC774\uC6C3\uC744 \uB098\uD0C0\uB0B4\uB294 \uBC94\uC8FC \uBCC0\uC218\uB97C \uAC16\uCD94\uC5C8\uAE30 \uB54C\uBB38\uC5D0, \uBAA8\uB378\uC5D0 \uAC01 \uC774\uC6C3\uC758 \uC608\uC0C1 \uAC00\uACA9\uC5D0 \uB300\uD574 \uC804\uB2EC\uD558\uAE30 \uC704\uD574 \uD0C0\uAC9F \uC778\uCF54\uB529\uC744 \uC0AC\uC6A9\uD558\uACE0 \uC788\uC5B4\uC694.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">add_geohash_column_to_df</span><span class="token punctuation">(</span>geo_df<span class="token punctuation">:</span> pl<span class="token punctuation">.</span>DataFrame<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> pl<span class="token punctuation">.</span>DataFrame<span class="token punctuation">:</span>
    result <span class="token operator">=</span> <span class="token punctuation">(</span>
        df
        <span class="token punctuation">.</span>with_columns<span class="token punctuation">(</span>
            df
            <span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&quot;latitude&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span>map_rows<span class="token punctuation">(</span>
                <span class="token keyword">lambda</span> x<span class="token punctuation">:</span> geohash2<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> precision<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                return_dtype<span class="token operator">=</span>pl<span class="token punctuation">.</span>Utf8
            <span class="token punctuation">)</span>
            <span class="token punctuation">.</span>rename<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;map&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;geohash&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> result

<span class="token keyword">def</span> <span class="token function">add_target_encoding_to_df</span><span class="token punctuation">(</span>
    dataframe<span class="token punctuation">:</span> pl<span class="token punctuation">.</span>DataFrame<span class="token punctuation">,</span>
    categorical_column<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&quot;geohash&quot;</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> pl<span class="token punctuation">.</span>DataFrame<span class="token punctuation">:</span>
    category_target_means <span class="token operator">=</span> <span class="token punctuation">(</span>
        dataframe
        <span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span>col<span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># \uD14C\uC2A4\uD2B8 \uB370\uC774\uD130 \uB204\uCD9C \uBC29\uC9C0\uB97C \uC704\uD574 \uD6C8\uB828 \uB370\uC774\uD130\uB9CC \uD3EC\uD568\uD569\uB2C8\uB2E4.</span>
        <span class="token punctuation">.</span>group_by<span class="token punctuation">(</span>categorical_column<span class="token punctuation">)</span>
        <span class="token punctuation">.</span>agg<span class="token punctuation">(</span>
            pl<span class="token punctuation">.</span>col<span class="token punctuation">(</span>MODEL_TARGET<span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>alias<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>categorical_column<span class="token punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token punctuation">{</span>MODEL_TARGET<span class="token punctuation">}</span></span><span class="token string">_mean&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    result <span class="token operator">=</span> <span class="token punctuation">(</span>
        dataframe
        <span class="token punctuation">.</span>join<span class="token punctuation">(</span>
            category_target_means<span class="token punctuation">,</span>
            how<span class="token operator">=</span><span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span>
            on<span class="token operator">=</span>categorical_column
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token keyword">return</span> result


df_w_geohash <span class="token operator">=</span> add_geohash_column_to_df<span class="token punctuation">(</span>df<span class="token punctuation">)</span>
df_w_geohash_target_encoded <span class="token operator">=</span> add_target_encoding_to_df<span class="token punctuation">(</span>df_w_geohash<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+g+'" alt="\uC774\uBBF8\uC9C0"></p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),H=e(`<p>\uC774\uC81C \uB0B4 \uC544\uC774\uB514\uC5B4\uC5D0 \uB300\uD574 \uBAA8\uB378\uC774 \uBB34\uC5C7\uC744 \uC0DD\uAC01\uD558\uB294\uC9C0 \uC54C\uC544\uBCF4\uC790:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">MODEL_FEATURE_LIST_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;geohash target encoding&quot;</span>
<span class="token constant">MODEL_FEATURE_LIST</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;geohash_price_log10_mean&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

X_train <span class="token operator">=</span> df_w_geohash_target_encoded<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_FEATURE_LIST</span><span class="token punctuation">)</span>
y_train <span class="token operator">=</span> df_w_geohash_target_encoded<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_TARGET</span><span class="token punctuation">)</span>
X_test <span class="token operator">=</span> df_w_geohash_target_encoded<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">~</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_FEATURE_LIST</span><span class="token punctuation">)</span>
y_test <span class="token operator">=</span> df_w_geohash_target_encoded<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">~</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_TARGET</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_numpy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
model_performance_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> model_name<span class="token punctuation">,</span> model_class <span class="token keyword">in</span> <span class="token function">zip</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string">&quot;xgboost&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ridge regression&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>XGBRegressor<span class="token punctuation">,</span> Ridge<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token operator">:</span>
    model <span class="token operator">=</span> <span class="token function">model_class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
    y_predicted <span class="token operator">=</span> model<span class="token punctuation">.</span><span class="token function">predict</span><span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
    model_performance <span class="token operator">=</span> <span class="token function">root_mean_squared_error</span><span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_predicted<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+m+'" alt="Latitude and Longitude Feature Engineering"></p><p>\uC9C0\uC624\uD574\uC2DC \uD0C0\uAC9F \uC778\uCF54\uB529\uC740 \uACF5\uAC04 \uBC00\uB3C4\uBCF4\uB2E4 \uC57D\uAC04 \uB354 \uC131\uB2A5\uC774 \uC6B0\uC218\uD558\uB2E4!</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),$=e(`<h2 id="_4-\u1106\u1169\u1103\u1173\u11AB-\u1100\u1165\u11BA\u110B\u1173\u11AF-\u1112\u1161\u11B8\u110E\u1175\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#_4-\u1106\u1169\u1103\u1173\u11AB-\u1100\u1165\u11BA\u110B\u1173\u11AF-\u1112\u1161\u11B8\u110E\u1175\u1100\u1175" aria-hidden="true">#</a> 4. \uBAA8\uB4E0 \uAC83\uC744 \uD569\uCE58\uAE30</h2><p>\uB9C8\uCE68\uB0B4, \uBAA8\uB4E0 \uAE30\uB2A5\uC744 \uD568\uAED8 \uC0AC\uC6A9\uD574\uBCF4\uC9C0 \uC54A\uC73C\uBA74 \uB370\uC774\uD130 \uACFC\uD559\uC790\uAC00 \uB420 \uC218 \uC788\uC744\uAE4C\uC694? \uD55C\uBC88 \uD574 \uBD05\uC2DC\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>df_w_all_features <span class="token operator">=</span> <span class="token function">add_density_feature_columns_to_dataframe</span><span class="token punctuation">(</span>
    <span class="token function">add_target_encoding_to_df</span><span class="token punctuation">(</span>
        <span class="token function">add_geohash_column_to_df</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>

<span class="token constant">MODEL_FEATURE_LIST_NAME</span> <span class="token operator">=</span> <span class="token string">&quot;all_features&quot;</span>
<span class="token constant">MODEL_FEATURE_LIST</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;latitude&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;longitude&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;spatial_density&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;geohash_price_log10_mean&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>

X_train <span class="token operator">=</span> df_w_all_features<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_FEATURE_LIST</span><span class="token punctuation">)</span>
y_train <span class="token operator">=</span> df_w_all_features<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_TARGET</span><span class="token punctuation">)</span>
X_test <span class="token operator">=</span> df_w_all_features<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">~</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_FEATURE_LIST</span><span class="token punctuation">)</span>
y_test <span class="token operator">=</span> df_w_all_features<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">~</span>pl<span class="token punctuation">.</span><span class="token function">col</span><span class="token punctuation">(</span><span class="token string">&quot;is_train&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token constant">MODEL_TARGET</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_numpy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> model_name<span class="token punctuation">,</span> model_class <span class="token keyword">in</span> <span class="token function">zip</span><span class="token punctuation">(</span>
    <span class="token punctuation">[</span><span class="token string">&quot;xgboost&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ridge regression&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>XGBRegressor<span class="token punctuation">,</span> Ridge<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token operator">:</span>
    model <span class="token operator">=</span> <span class="token function">model_class</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fit</span><span class="token punctuation">(</span>X_train<span class="token punctuation">,</span> y_train<span class="token punctuation">)</span>
    y_predicted <span class="token operator">=</span> model<span class="token punctuation">.</span><span class="token function">predict</span><span class="token punctuation">(</span>X_test<span class="token punctuation">)</span>
    model_performance <span class="token operator">=</span> <span class="token function">root_mean_squared_error</span><span class="token punctuation">(</span>y_test<span class="token punctuation">,</span> y_predicted<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+b+'" alt="\uC774\uBBF8\uC9C0"></p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),J=n("p",null,"\uADF8\uB9AC\uACE0 \uC6B0\uC2B9\uC790\uB294... \uBAA8\uB4E0 \uD53C\uCC98\uC758 \uC870\uD569\uC73C\uB85C \uD559\uC2B5\uB41C XGBoost\uC785\uB2C8\uB2E4!",-1),Q=n("h1",{id:"\u1110\u1169\u1105\u1169\u11AB",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1110\u1169\u1105\u1169\u11AB","aria-hidden":"true"},"#"),s(" \uD1A0\uB860")],-1),Y=n("p",null,"\uBB3C\uB860, \uB370\uC774\uD130 \uACFC\uD559 \uBB38\uC81C\uC5D0\uC11C \uC7AC\uBBF8\uB294 \uBC29\uAE08 \uC2DC\uC791\uB410\uC744 \uBFD0\uC785\uB2C8\uB2E4. \uAC1C\uC120\uD560 \uC218 \uC788\uB294 \uC5EC\uB7EC \uAC00\uB2A5\uC131\uC774 \uC774\uBBF8 \uC874\uC7AC\uD569\uB2C8\uB2E4.",-1),Z=n("ul",null,[n("li",null,"\uD558\uC774\uD37C\uD30C\uB77C\uBBF8\uD130 \uD29C\uB2DD: \uACF5\uAC04 \uBC00\uB3C4 \uACC4\uC0B0\uC744 \uC704\uD55C \uAC80\uC0C9 \uBC18\uACBD\uC5D0 \uB354 \uB098\uC740 \uC120\uD0DD\uC9C0\uAC00 \uC788\uC744\uAE4C\uC694? \uC9C0\uC624\uD574\uC2DC \uD0C0\uAC9F \uC778\uCF54\uB529 \uC0DD\uC131\uC744 \uC704\uD55C \uB354 \uB098\uC740 \uC9C0\uC624\uD574\uC2DC \uC815\uBC00\uB3C4\uAC00 \uC788\uC744\uAE4C\uC694?"),n("li",null,"\uD0C0\uAC9F \uC778\uCF54\uB529: \uC5EC\uAE30\uC5D0 \uC81C\uC2DC\uB41C \uAC83\uC740 \uB9E4\uC6B0 \uAE30\uBCF8\uC801\uC778 \uD0C0\uAC9F \uC778\uCF54\uB529 \uC811\uADFC \uBC29\uC2DD\uC774\uC9C0\uB9CC, Bayesian Target Encoding\uACFC \uAC19\uC774 \uBAA8\uB378 \uC77C\uBC18\uD654\uB97C \uAC1C\uC120\uD558\uB294 \uB2E4\uB978 \uBC29\uBC95\uC744 \uCC44\uD0DD\uD560 \uC218 \uC788\uC744\uAE4C\uC694? \uB610\uD55C, \uD3C9\uADE0 \uC774\uC678\uC758 \uC911\uAC04\uAC12, \uCD5C\uB300\uAC12 \uB610\uB294 \uCD5C\uC18C\uAC12\uACFC \uAC19\uC740 \uB2E4\uB978 \uC9D1\uACC4 \uD568\uC218\uB97C \uD0C0\uAC9F \uC778\uCF54\uB529\uC5D0 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC744\uAE4C\uC694? \uB610\uD55C, \uACF5\uAC04 \uBC00\uB3C4\uC758 \uB2E4\uB978 \uB300\uB9AC\uC790\uB85C\uC11C \uCE74\uC6B4\uD2B8\uB3C4 \uD765\uBBF8\uB85C\uC6B4 \uC120\uD0DD\uC77C \uAC83\uC785\uB2C8\uB2E4."),n("li",null,"\uBAA8\uB378 \uC559\uC0C1\uBE14: \uC65C XGBoost\uC640 RidgeRegression\uB9CC \uC0AC\uC6A9\uD574\uC57C \uD558\uBA70, \uB450 \uBAA8\uB378\uC758 \uC870\uD569\uC740 \uC5B4\uB5A8\uAE4C\uC694? \uC544\uB2C8\uBA74, \uAC01\uAC01\uC758 \uB2E4\uB978 \uC9C0\uC624\uD574\uC2DC\uC5D0 \uB300\uD574 \uB2E4\uB978 \uBAA8\uB378\uC744 \uD559\uC2B5\uD560 \uCDA9\uBD84\uD55C \uB370\uC774\uD130\uAC00 \uC788\uB294\uC9C0\uB3C4 \uD655\uC778\uD574\uBCFC \uAC00\uCE58\uAC00 \uC788\uC2B5\uB2C8\uB2E4.")],-1),nn=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),sn=n("p",null,"\uADF8\uB9AC\uACE0 \uBB3C\uB860, \uC804\uCCB4 \uAE30\uACC4 \uD559\uC2B5 \uC811\uADFC \uBC29\uC2DD\uC740 k-fold \uAD50\uCC28 \uAC80\uC99D\uC744 \uD3EC\uD568\uD558\uAC70\uB098 \uB300\uC0C1 \uBCC0\uC218\uC758 \uB450\uD130\uC6B4 \uAF2C\uB9AC \uD2B9\uC131\uC744 \uBCF4\uB2E4 \uD48D\uBD80\uD558\uAC8C \uBC18\uC601\uD558\uB294 \uBAA8\uB378\uC774\uB098 \uBE44\uC6A9 \uD568\uC218\uB97C \uD3EC\uD568\uD558\uC5EC \uAC1C\uC120\uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),an=n("p",null,'\uB354\uC6B1\uC774, \uC5EC\uAE30\uC11C \uC5F0\uAD6C\uB41C \uB370\uC774\uD130\uC14B\uC740 "\uC9D1 \uD310\uB9E4 \uAC00\uACA9"\uC758 \uAE30\uB85D\uC774\uC5C8\uB294\uB370, \uC774\uB294 "\uC9D1 \uAC00\uACA9"\uACFC\uB294 \uBA85\uBC31\uD788 \uB2E4\uB978 \uAC83\uC785\uB2C8\uB2E4: \uC804\uC790\uC5D0\uC11C \uD558\uB098\uC758 \uB808\uCF54\uB4DC\uB294 \uAC70\uB798\uB97C \uB098\uD0C0\uB0B4\uC9C0\uB9CC, \uD6C4\uC790\uC5D0\uC11C\uB294 \uD558\uB098\uC758 \uB808\uCF54\uB4DC\uAC00 \uC2E4\uC81C \uC9D1\uC744 \uB098\uD0C0\uB0C5\uB2C8\uB2E4. \uB530\uB77C\uC11C \uC5EC\uAE30\uC5D0\uC11C \uACC4\uC0B0\uB41C \uACF5\uAC04 \uBC00\uB3C4 \uD2B9\uC9D5\uC740 \uB3C4\uC2DC\uC801 \uC694\uC18C\uBCF4\uB2E4\uB294 "\uB3D9\uB124 \uAD6C\uB9E4 \uC778\uAE30"\uB97C \uB354 \uB9CE\uC774 \uB098\uD0C0\uB0BC \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uBAA8\uB4E0 \uB370\uC774\uD130 \uACFC\uD559 \uBB38\uC81C\uC640 \uB9C8\uCC2C\uAC00\uC9C0\uB85C, \uC774\uB7EC\uD55C \uAE30\uC220\uB4E4\uC758 \uC720\uD6A8\uC131\uC740 \uB370\uC774\uD130\uC758 \uC131\uACA9\uC5D0 \uB530\uB77C \uB2E4\uB97C \uC218 \uC788\uC2B5\uB2C8\uB2E4.',-1),tn=n("p",null,"\uB9C8\uC9C0\uB9C9\uC73C\uB85C, \uB450 \uAC00\uC9C0 \uB2E4\uB978 \uBAA8\uB378\uC778 RidgeRegression\uACFC XGBoost\uAC00 \uC11C\uB85C \uB2E4\uB978 \uD2B9\uC131 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uAE30\uC220\uC5D0 \uC5B4\uB5BB\uAC8C \uBC18\uC751\uD558\uB294\uC9C0 \uBCF8 \uAC83\uC774 \uD765\uBBF8\uB85C\uC6E0\uC2B5\uB2C8\uB2E4. XGBoost\uB294 \uC6D0\uC2DC \uC704\uB3C4-\uACBD\uB3C4, Geohash \uD0C0\uAC9F \uC778\uCF54\uB529 \uBC0F \uBAA8\uB4E0 \uD2B9\uC131\uC758 \uACB0\uD569\uC5D0 \uB300\uD574 RidgeRegression\uBCF4\uB2E4 \uC6B0\uC218\uD55C \uC131\uB2A5\uC744 \uBCF4\uC600\uC73C\uB098, \uACF5\uAC04 \uBC00\uB3C4\uC5D0 \uB300\uD574\uC11C\uB294 RidgeRegression\uC774 \uB354 \uC6B0\uC218\uD588\uC2B5\uB2C8\uB2E4. \uC774\uB97C \uC5FC\uB450\uC5D0 \uB450\uACE0, ML \uC2E4\uD5D8\uC740 \uAD6C\uC131 \uAE30\uBC18 \uC811\uADFC \uBC29\uC2DD\uC73C\uB85C \uD56D\uC0C1 \uC811\uADFC\uD558\uB294 \uAC83\uC774 \uC911\uC694\uD569\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4, \uD604\uC7AC \uBAA8\uB378\uACFC \uD568\uAED8 \uB098\uBE60\uC9C0\uB294 \uC0C8\uB85C\uC6B4 \uD2B9\uC131 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uAE30\uC220\uC744 \uC2DC\uB3C4\uD560 \uC218 \uC788\uC9C0\uB9CC, \uBA87 \uB2EC \uC804\uC5D0 \uD3EC\uAE30\uD588\uB358 \uBAA8\uB378\uACFC \uACB0\uD569\uD558\uBA74 \uD604\uC7AC\uAE4C\uC9C0 \uAC00\uC7A5 \uC131\uB2A5\uC774 \uC6B0\uC218\uD55C \uAD6C\uC131\uC774 \uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),pn=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),on=e('<p>\uAE30\uACC4 \uD559\uC2B5 \uBB38\uC81C\uB97C \uB2E4\uB8F0 \uB54C \uC704\uB3C4\uC640 \uACBD\uB3C4\uAC00 \uD3EC\uD568\uB41C \uB370\uC774\uD130\uB97C \uC0AC\uC6A9\uD560 \uB54C \uD560 \uC218 \uC788\uB294 \uBA87 \uAC00\uC9C0 \uC544\uC774\uB514\uC5B4\uB97C \uC18C\uAC1C\uD588\uC5B4\uC694; \uC774\uB97C \uD1B5\uD574 \uC2DC\uC791 \uC9C0\uC810\uC744 \uC81C\uACF5\uD574 \uB4DC\uB9B4 \uC218 \uC788\uAE30\uB97C \uBC14\uB77C\uC694. \uC81C Github\uC5D0\uC11C \uCF54\uB4DC\uB97C \uD655\uC778\uD574 \uBCF4\uC138\uC694 (\uB9C1\uD06C). \uD56D\uC0C1 \uC77D\uC5B4 \uC8FC\uC154\uC11C \uAC10\uC0AC\uD569\uB2C8\uB2E4 \u{1F642} \uB2E4\uC74C\uC5D0 \uB610 \uB9CC\uB098\uC694!</p><h1 id="\u110E\u1161\u11B7\u1100\u1169-\u110C\u1161\u1105\u116D" tabindex="-1"><a class="header-anchor" href="#\u110E\u1161\u11B7\u1100\u1169-\u110C\u1161\u1105\u116D" aria-hidden="true">#</a> \uCC38\uACE0 \uC790\uB8CC</h1><h1 id="\u110B\u1167\u11AB\u1105\u1161\u11A8\u110E\u1165" tabindex="-1"><a class="header-anchor" href="#\u110B\u1167\u11AB\u1105\u1161\u11A8\u110E\u1165" aria-hidden="true">#</a> \uC5F0\uB77D\uCC98</h1><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',4);function en(cn,ln){const c=i("ExternalLinkIcon");return a(),u("div",null,[h,y,q,w,E,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),L,T,R,x,D,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),F,n("p",null,[s('\uC774 \uAC8C\uC2DC\uBB3C \uC804\uCCB4\uB97C \uD1B5\uD574 \uD14C\uC2A4\uD2B8\uB420 \uB2E4\uC591\uD55C \uD53C\uCCD0 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uAE30\uC220\uC5D0 \uB300\uD55C \uBB38\uC81C\uB294 \uB9C8\uC774\uC560\uBBF8\uC758 \uC8FC\uD0DD \uD310\uB9E4 \uAC00\uACA9 \uC608\uCE21\uC785\uB2C8\uB2E4. \uC774 \uB370\uC774\uD130\uB294 \uACF5\uAC1C \uB370\uC774\uD130 \uC138\uD2B8 "\uB9C8\uC774\uC560\uBBF8 \uC8FC\uD0DD 2016"\uC5D0\uC11C \uAC00\uC838\uC654\uC2B5\uB2C8\uB2E4 '),n("a",G,[s("1"),d(c)]),s('. \uC0AC\uC6A9\uB41C \uC6D0\uC2DC \uD53C\uCCD0\uB294 "\uC704\uB3C4"\uC640 "\uACBD\uB3C4"\uBFD0\uC774\uBA70, \uC774\uB97C \uC0AC\uC6A9\uD558\uC5EC "\uAC00\uACA9"\uC744 \uC608\uCE21\uD569\uB2C8\uB2E4. \uD53C\uCCD0 \uC5D4\uC9C0\uB2C8\uC5B4\uB9C1 \uAE30\uC220\uC740 \uB450 \uAC00\uC9C0 \uB2E4\uB978 \uBA38\uC2E0\uB7EC\uB2DD \uBAA8\uB378\uC778 RidgeRegression\uACFC XGBoost\uB97C \uD1B5\uD574 \uC11C\uB85C \uBE44\uAD50\uB429\uB2C8\uB2E4 (\uB450 \uBAA8\uB378\uC774 \uACE0\uB824\uB41C \uB2E4\uC591\uD55C \uAE30\uC220\uC5D0 \uC5B4\uB5BB\uAC8C \uBC18\uC751\uD558\uB294\uC9C0\uB97C \uBCF4\uC5EC\uC8FC\uAE30 \uC704\uD574 \uD68C\uADC0 \uBAA8\uB378\uACFC \uD2B8\uB9AC \uAE30\uBC18 \uBAA8\uB378\uC744 \uD55C \uAC00\uC9C0\uC529 \uC0AC\uC6A9\uD588\uC2B5\uB2C8\uB2E4).')]),A,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),X,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),M,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),O,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),I,j,B,S,U,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),N,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),P,W,C,V,z,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),K,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),H,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),$,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),J,Q,Y,Z,nn,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),sn,an,tn,pn,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),on,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1}))])}var dn=l(f,[["render",en],["__file","index.html.vue"]]);export{dn as default};
