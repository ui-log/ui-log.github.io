import{_ as c}from"./app.a99075bb.js";import{l as n,m as l,E as s,G as a,p,Y as t,K as o,C as e}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";var i="/assets/Using-ReactJs-GraphQL-API-Nestjs-TypeORM_0.13daf665.png";const u={},r=o('<img src="'+i+`"><p>React &amp; GraphQL\uC744 \uC2DC\uC791\uD574 \uBCF4\uACA0\uC2B5\uB2C8\uB2E4. \uBA3C\uC800 @apollo/client\uB97C \uC124\uCE58\uD574\uBD05\uC2DC\uB2E4.</p><p>\uC6B0\uB9AC\uB294 React \uC571\uC744 apollo graphql client\uB85C \uAC10\uC300 \uAC83\uC785\uB2C8\uB2E4. \uC81C Apollo GraphQL \uD074\uB77C\uC774\uC5B8\uD2B8\uB294 \uC544\uB798\uC640 \uAC19\uC774 \uBCF4\uC785\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ApolloProvider<span class="token punctuation">,</span> ApolloClient<span class="token punctuation">,</span> InMemoryCache <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@apollo/client&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> apolloGraphQLClient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApolloClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">uri</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GRAPHQL_URL</span><span class="token punctuation">,</span> <span class="token comment">// \uC5EC\uB7EC\uBD84\uC758 GraphQL API \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uB85C \uBCC0\uACBD\uD574\uC8FC\uC138\uC694. \uC800\uC758 \uACBD\uC6B0\uC5D0\uB294 \uC11C\uBC84 URL\uC785\uB2C8\uB2E4.</span>
  <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> apolloGraphQLClient<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),k=o(`<p>app.js \uD30C\uC77C\uC774\uB098 \uBD80\uBAA8 \uAD6C\uC131 \uC694\uC18C\uB97C apollo client\uB85C \uB798\uD551\uD574\uBCF4\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ApolloProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@apollo/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> apolloGraphQlClient <span class="token keyword">from</span> <span class="token string">&quot;./GraphQL/DataAccessGraphQLClient&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>ApolloProvider client<span class="token operator">=</span><span class="token punctuation">{</span>apolloGraphQlClient<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Routes<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">&quot;/login&quot;</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>Login <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">&quot;/home&quot;</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>AppContent page<span class="token operator">=</span><span class="token string">&quot;workbook&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Routes<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>ApolloProvider<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4\uB97C \uAC00\uC838\uC624\uACE0 \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4\uB97C \uCD94\uAC00\uD558\uB294 \uCFFC\uB9AC\uB97C \uC791\uC131\uD574\uBD05\uC2DC\uB2E4. \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4\uB294 \uC6B0\uB9AC \uC571\uC5D0 \uC788\uB294 \uC5D4\uD2F0\uD2F0\uC785\uB2C8\uB2E4. Queries.js \uD30C\uC77C\uC744 \uB9CC\uB4E4\uC5B4 \uB2E4\uC74C \uCFFC\uB9AC\uB97C \uC791\uC131\uD574\uBCF4\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">FETCH_WORKSPACES</span> <span class="token operator">=</span> gql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
 query fetchWorkSpaces($user_email: String!){ //\uCFFC\uB9AC\uC5D0 \uD544\uC694\uD55C \uC785\uB825 \uB9E4\uAC1C\uBCC0\uC218
   fetchWorkSpaces(   //\uC2E4\uC81C \uCFFC\uB9AC\uC640 \uBCC0\uC218\uB4E4\uC744 \uD3EC\uD568
  user_email: $user_email
 ) 
 {
   id  // \uBC18\uD658\uD560 \uD544\uB4DC\uB4E4
   name
   user_email
   created_date
   updated_date
 }
 }
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">CREATE_WORKSPACE</span> <span class="token operator">=</span> gql<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
  query createWorkspace($workspace: WorkspaceDto!) {
    createWorkspace(workspace: $workspace) {
      id
    }
  }
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),d=o(`<p>\uB2F9\uC2E0\uC758 workspace.js\uC5D0\uC11C\uB294 \uC774 gql\uC5D0\uC11C \uB370\uC774\uD130\uB97C \uAC00\uC838\uC62C \uAC83\uC785\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@apollo/client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">FETCH_WORKSPACES</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../../GraphQL/Queries&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">WorkSpace</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> loading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span><span class="token constant">FETCH_WORKSPACES</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">variables</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">user_email</span><span class="token operator">:</span> props<span class="token punctuation">.</span>userEmail<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Loading<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token operator">&lt;</span>WorkSpaceTree myWorkspaces<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB610\uB294 \uC774 \uCFFC\uB9AC\uB97C \uD568\uC218\uC5D0\uC11C \uD638\uCD9C\uD558\uB824\uBA74</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fetchWorkspaces</span><span class="token operator">=</span> <span class="token keyword">async</span><span class="token punctuation">(</span><span class="token parameter">user_email</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> apolloGraphQlClient<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../../GraphQL/DataAccessGraphQLClient.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default <span class="token comment">//\uC774\uAC83\uC740 \uC9C0\uC5F0\uB85C\uB529\uC785\uB2C8\uB2E4. \uD30C\uC77C \uC0C1\uB2E8\uC5D0\uC11C\uB3C4 \uAC00\uC838\uC62C \uC218 \uC788\uC2B5\uB2C8\uB2E4.</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token constant">FETCH_WORKSPACES</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;../../GraphQL/Queries&quot;</span><span class="token punctuation">)</span> <span class="token comment">//\uC9C0\uC5F0\uB85C\uB529</span>
    <span class="token keyword">let</span> workspacevariables<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token literal-property property">user_email</span><span class="token operator">:</span>user_email<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> workspaceResponse <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> apolloGraphQlClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token constant">CREATE_FOLDER</span><span class="token punctuation">,</span> <span class="token literal-property property">variables</span><span class="token operator">:</span><span class="token punctuation">{</span>workspacevariables <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">createWorkspace</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> workspace <span class="token operator">=</span> <span class="token punctuation">{</span>
         <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
         <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;New workspace&quot;</span><span class="token punctuation">,</span>
         <span class="token string-property property">&quot;user_email&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jayant@gmail.com&quot;</span><span class="token punctuation">,</span>
         <span class="token string-property property">&quot;isParent&quot;</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>
         <span class="token literal-property property">created_date</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
         <span class="token literal-property property">updated_date</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> apolloGraphQlClient<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;../../GraphQL/DataAccessGraphQLClient.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default
        <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token constant">CREATE_WORKSPACE</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;../../GraphQL/Queries&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">const</span> variables <span class="token operator">=</span> <span class="token punctuation">{</span> workspace <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> apolloGraphQlClient<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token constant">CREATE_WORKSPACE</span><span class="token punctuation">,</span> variables <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;error in creating workspace&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),v=e("p",null,"React \uBD80\uBD84 \uCF54\uB4DC\uB294 \uB05D\uB0AC\uC5B4\uC694. \uC774\uC81C nestjs \uB85C \uB118\uC5B4\uAC00 \uBCFC\uAC8C\uC694.",-1),m=e("p",null,"Postgres \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uAC00 \uC788\uC9C0\uB9CC TypeORM\uC744 \uD1B5\uD574 \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uACE0 \uC5C5\uB370\uC774\uD2B8\uD560 \uAC70\uC5D0\uC694. @nestjs/typeorm, @nestjs/apollo, @nestjs/graphql \uC744 \uC124\uCE58\uD574\uC8FC\uC138\uC694.",-1),y=e("p",null,"\uADF8\uB7FC \uC694\uCCAD \uC751\uB2F5 graphql DTO \uBC0F TypeORM \uC5D4\uD2F0\uD2F0\uB97C \uB9CC\uB4E4\uC5B4\uBCF4\uB294 \uAC8C \uC2DC\uC791\uC774\uC5D0\uC694.",-1),b=e("p",null,"workspace.dto.ts - \uC774 \uD30C\uC77C\uC740 \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4\uB97C \uB9CC\uB4E4 \uB54C \uC0AC\uC6A9\uD560 \uAC70\uC5D0\uC694.",-1),g=e("p",null,[e("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),w=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ObjectType<span class="token punctuation">,</span> Field<span class="token punctuation">,</span> InputType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/graphql&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> IsBoolean<span class="token punctuation">,</span> IsString<span class="token punctuation">,</span> IsNotEmpty<span class="token punctuation">,</span> IsObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;class-validator&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GraphQLJSONObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;graphql-type-json&quot;</span><span class="token punctuation">;</span>
@<span class="token function">InputType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WorkspaceDto</span> <span class="token punctuation">{</span>
  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Date<span class="token punctuation">)</span>
  @<span class="token function">IsBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">created_date</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>
  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Date<span class="token punctuation">)</span>
  @<span class="token function">IsBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">updated_date</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>
  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> String<span class="token punctuation">)</span>
  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> String<span class="token punctuation">)</span>
  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">user_email</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> String<span class="token punctuation">)</span>
  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Boolean<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">defaultValue</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  @<span class="token function">IsBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">isParent</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>workspace.response.dto.ts- \uC751\uB2F5 \uC720\uD615\uC744 \uC704\uD55C Response \uD0C0\uC785</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ObjectType<span class="token punctuation">,</span> Field<span class="token punctuation">,</span> InputType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/graphql&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> IsBoolean<span class="token punctuation">,</span> IsString<span class="token punctuation">,</span> IsNotEmpty<span class="token punctuation">,</span> IsObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;class-validator&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GraphQLJSONObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;graphql-type-json&quot;</span><span class="token punctuation">;</span>

@<span class="token function">ObjectType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WorkspaceResponseDto</span> <span class="token punctuation">{</span>
  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Date<span class="token punctuation">)</span>
  @<span class="token function">IsBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">created_date</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>

  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Date<span class="token punctuation">)</span>
  @<span class="token function">IsBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">updated_date</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>

  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> String<span class="token punctuation">)</span>
  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> string<span class="token punctuation">;</span>

  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> String<span class="token punctuation">)</span>
  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">user_email</span><span class="token operator">:</span> string<span class="token punctuation">;</span>

  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> String<span class="token punctuation">)</span>
  @<span class="token function">IsNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  @<span class="token function">IsString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>

  @<span class="token function">Field</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Boolean<span class="token punctuation">)</span>
  @<span class="token function">IsBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">isParent</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>workspace.entity.ts\uC5D0 \uB300\uD55C TypeORM \uBC0F postgres DB\`\`\`</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),f=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Entity<span class="token punctuation">,</span> PrimaryGeneratedColumn<span class="token punctuation">,</span> Column<span class="token punctuation">,</span> PrimaryColumn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;typeorm&quot;</span><span class="token punctuation">;</span>

@<span class="token function">Entity</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">workspaces</span> <span class="token punctuation">{</span>
  @<span class="token function">PrimaryColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;timestamp&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">created_date</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>
  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;timestamp&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">updated_date</span><span class="token operator">:</span> Date<span class="token punctuation">;</span>
  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">nullable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">isParent</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">nullable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">user_email</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  @<span class="token function">Column</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">nullable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>NestJS\uC5D0 \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4\uB97C \uC704\uD55C \uBAA8\uB4C8\uC744 \uC0DD\uC131\uD574\uC57C \uD558\uBA70, \uCFFC\uB9AC\uC640 \uBBA4\uD14C\uC774\uC158\uC744 \uD574\uACB0\uD558\uB294 GraphQL \uB9AC\uC878\uBC84\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4. \uB9C8\uC9C0\uB9C9\uC73C\uB85C \uBE44\uC988\uB2C8\uC2A4 \uB85C\uC9C1\uC744 \uB2E4\uB8E8\uB294 workspace.service.ts \uB77C\uB294 \uC11C\uBE44\uC2A4 \uD30C\uC77C\uC744 \uB9CC\uB4E4\uC5B4\uC57C \uD569\uB2C8\uB2E4.</p><p>workspace.service.ts</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/common&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> InjectRepository <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@nestjs/typeorm&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Repository <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;typeorm&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> workspaces <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./workspace.entity&#39;</span><span class="token punctuation">;</span>

@<span class="token function">Injectable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WorkspaceService</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> readonly users<span class="token operator">:</span> any<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>
    <span class="token parameter">@<span class="token function">InjectRepository</span><span class="token punctuation">(</span>workspaces<span class="token punctuation">)</span>
    <span class="token keyword">private</span> readonly workspaceRepository<span class="token operator">:</span> Repository<span class="token operator">&lt;</span>workspaces<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">fetchWorkspaces</span><span class="token punctuation">(</span>user_email<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>workspaces<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \uB0B4 \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4\uB97C \uBD88\uB7EC\uC624\uB294 \uC911</span>
      <span class="token keyword">const</span> savedWorkspaces <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>workspaceRepository<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">where</span><span class="token operator">:</span> <span class="token punctuation">{</span> user_email <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> savedWorkspaces<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\uC5F0\uACB0 \uC5D0\uB7EC&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">createWorkspace</span><span class="token punctuation">(</span>workspace<span class="token operator">:</span> workspaces<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> savedWorkspace <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>workspaceRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>workspace<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> savedWorkspace<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\uC5F0\uACB0 \uC5D0\uB7EC&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">async</span> <span class="token function">deleteWorkspace</span><span class="token punctuation">(</span>workspace_id<span class="token operator">:</span> string<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> savedWorkspace <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>workspaceRepository<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>workspace_id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> savedWorkspace<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\uC5F0\uACB0 \uC5D0\uB7EC&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),q=o(`<p>workspace.resolver.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Args<span class="token punctuation">,</span> Mutation<span class="token punctuation">,</span> Query<span class="token punctuation">,</span> Resolver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/graphql&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> WorkspaceService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./workspace.service&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> WorkspaceDto <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./workspace.dto&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> WorkspaceResponseDto <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./dto/workspaceresponse.dto&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Resolver</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WorkspaceResolver</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">readonly</span> workspaceService<span class="token operator">:</span> WorkspaceService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Query</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> WorkspaceResponseDto<span class="token punctuation">)</span>
  <span class="token keyword">async</span> <span class="token function">createWorkspace</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Args</span></span><span class="token punctuation">(</span><span class="token string">&quot;workspace&quot;</span><span class="token punctuation">)</span> workspace<span class="token operator">:</span> WorkspaceDto<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>WorkspaceResponseDto<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> records <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>workspaceService<span class="token punctuation">.</span><span class="token function">createWorkspace</span><span class="token punctuation">(</span>workspace<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> records<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Query</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>WorkspaceResponseDto<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">async</span> <span class="token function">fetchWorkSpaces</span><span class="token punctuation">(</span><span class="token decorator"><span class="token at operator">@</span><span class="token function">Args</span></span><span class="token punctuation">(</span><span class="token string">&quot;user_email&quot;</span><span class="token punctuation">)</span> user_email<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>WorkspaceResponseDto<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> records <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>workspaceService<span class="token punctuation">.</span><span class="token function">fetchWorkspaces</span><span class="token punctuation">(</span>user_email<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> records<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>workspace.module.ts</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> WorkspaceService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./workspace.service&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> WorkspaceResolver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./workspace.resolver&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> GraphQLModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/graphql&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ApolloDriver<span class="token punctuation">,</span> ApolloDriverConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/apollo&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> WorkspaceDto <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./workspace.dto&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> TypeOrmModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/typeorm&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> workspaces <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./workspace.entity&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  imports<span class="token operator">:</span> <span class="token punctuation">[</span>
    GraphQLModule<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">forRoot</span><span class="token generic class-name"><span class="token operator">&lt;</span>ApolloDriverConfig<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      driver<span class="token operator">:</span> ApolloDriver<span class="token punctuation">,</span>
      autoSchemaFile<span class="token operator">:</span> <span class="token string">&quot;schema.gql&quot;</span><span class="token punctuation">,</span> <span class="token comment">// The output file for the generated schema</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    TypeOrmModule<span class="token punctuation">.</span><span class="token function">forFeature</span><span class="token punctuation">(</span><span class="token punctuation">[</span>workspaces<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  providers<span class="token operator">:</span> <span class="token punctuation">[</span>WorkspaceService<span class="token punctuation">,</span> WorkspaceResolver<span class="token punctuation">]</span><span class="token punctuation">,</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">WorkspaceModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),h=o(`<p>\uADF8\uB9AC\uACE0 \uB9C8\uC9C0\uB9C9\uC73C\uB85C, TypeORM\uC5D0\uC11C \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uB97C \uB4F1\uB85D\uD558\uACE0 NestJS\uC758 \uBA54\uC778 \uBAA8\uB4C8\uC778 \uC571\uC5D0\uC11C \uC774 \uC6CC\uD06C\uC2A4\uD398\uC774\uC2A4 \uBAA8\uB4C8\uC744 \uAC00\uC838\uC635\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> TypeOrmModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/typeorm&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> WorkspaceModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./modules/workspace/workspace.module&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> workspaces <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./modules/workspace/workspace.entity&quot;</span><span class="token punctuation">;</span>

@<span class="token function">Module</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    TypeOrmModule<span class="token punctuation">.</span><span class="token function">forRoot</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;postgres&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">host</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">POSTGRES_HOST</span><span class="token punctuation">,</span>
      <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">POSTGRES_PORT</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">26257</span><span class="token punctuation">,</span>
      <span class="token literal-property property">username</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">POSTGRES_USER</span><span class="token punctuation">,</span>
      <span class="token literal-property property">password</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">POSTGRES_PASSWORD</span><span class="token punctuation">,</span>
      <span class="token literal-property property">database</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">POSTGRES_DATABASE</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ssl</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">rejectUnauthorized</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// SSL \uC778\uC99D\uC11C \uD655\uC778 \uBB34\uC2DC (\uC6B4\uC601\uC5D0\uB294 \uAD8C\uC7A5\uD558\uC9C0 \uC54A\uC74C)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">entities</span><span class="token operator">:</span> <span class="token punctuation">[</span>workspaces<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// \uC5EC\uAE30\uC5D0 \uC5D4\uD2F0\uD2F0 \uCD94\uAC00</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    WorkspaceModule<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">controllers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">providers</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppModule</span> <span class="token keyword">implements</span> <span class="token class-name">NestModule</span> <span class="token punctuation">{</span>
  <span class="token function">configure</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">consumer</span><span class="token operator">:</span> MiddlewareConsumer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">consumer</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>CacheControlMiddleware<span class="token punctuation">,</span> FrontendMiddleware<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forRoutes</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/**&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">method</span><span class="token operator">:</span> RequestMethod<span class="token punctuation">.</span><span class="token constant">ALL</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,3);function _(j,S){return n(),l("div",null,[r,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),k,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),d,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),v,m,y,b,g,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),w,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),f,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),q,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),h,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1}))])}var D=c(u,[["render",_],["__file","index.html.vue"]]);export{D as default};
