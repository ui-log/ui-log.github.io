import{_ as l,f as i,o as a,c as u,a as t,w as p,b as s,r as o,e as n,g as r,d as e}from"./app.19857685.js";var k="/assets/AsyncAtomsEasyStateManagementinNextjswithJotai_0.5ba426c2.png";const d={},v=e('<p><img src="'+k+`" alt="Async Atoms Easy State Management in Next.js with Jotai"></p><p>Jotai\uB294 \uBE44\uB3D9\uAE30 \uC6D0\uC790\uB3C4 \uC9C0\uC6D0\uD569\uB2C8\uB2E4. \uBE44\uB3D9\uAE30 \uC6D0\uC790\uB294 \uBE44\uB3D9\uAE30\uC801\uC73C\uB85C \uC77D\uACE0 \uC4F8 \uC218 \uC788\uB294 \uC6D0\uC790\uC785\uB2C8\uB2E4. jotai/utils \uBAA8\uB4C8\uC758 atom \uD568\uC218\uC640 loadable \uD568\uC218\uB97C \uC0AC\uC6A9\uD558\uC5EC \uBE44\uB3D9\uAE30 \uC6D0\uC790\uB97C \uB9CC\uB4E4 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uB2E4\uC74C\uACFC \uAC19\uC774 \uBE44\uB3D9\uAE30 \uC6D0\uC790\uB97C \uB9CC\uB4E4 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> atom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jotai&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> loadable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jotai/utils&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Post <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user-atom&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> postsPaginationAtom <span class="token operator">=</span> <span class="token function">atom</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> postsAtom <span class="token operator">=</span> atom<span class="token operator">&lt;</span>Promise<span class="token operator">&lt;</span>Post<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token keyword">get</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uD398\uC774\uC9C0\uB124\uC774\uC158 \uBCC0\uACBD \uC2DC \uC774 \uC6D0\uC790\uAC00 \uB2E4\uC2DC \uD3C9\uAC00\uB429\uB2C8\uB2E4</span>
  <span class="token keyword">const</span> pagination <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>postsPaginationAtom<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://jsonplaceholder.typicode.com/posts?_start=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pagination<span class="token punctuation">.</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;_limit=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>pagination<span class="token punctuation">.</span>limit<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> data<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> getPostsAtom <span class="token operator">=</span> <span class="token function">loadable</span><span class="token punctuation">(</span>postsAtom<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC124\uBA85:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),m=e(`<ul><li>\uD398\uC774\uC9C0\uB124\uC774\uC158 \uC815\uBCF4\uB97C \uC800\uC7A5\uD558\uB294 postsPaginationAtom \uC6D0\uC790\uB97C \uB9CC\uB4ED\uB2C8\uB2E4.</li><li>\uD398\uC774\uC9C0\uB124\uC774\uC158 \uC815\uBCF4\uC5D0 \uB530\uB77C \uAC8C\uC2DC\uBB3C\uC744 \uAC00\uC838\uC624\uB294 postsAtom \uC6D0\uC790\uB97C \uB9CC\uB4ED\uB2C8\uB2E4.</li><li>loadable \uD568\uC218\uB97C \uC0AC\uC6A9\uD558\uC5EC getPostsAtom \uC6D0\uC790\uB97C \uB9CC\uB4E4\uC5B4 \uBE44\uB3D9\uAE30 \uC6D0\uC790\uB97C \uC77D\uACE0 \uC4F8 \uC218 \uC788\uB3C4\uB85D \uD569\uB2C8\uB2E4.</li></ul><p>\uC774\uC81C \uB2E4\uC74C\uACFC \uAC19\uC774 \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uBE44\uB3D9\uAE30 \uC6D0\uC790\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jotai&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getPostsAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/atoms/posts-atom&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">PostsPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>response<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useAtom</span><span class="token punctuation">(</span>getPostsAtom<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>response \uBCC0\uC218\uC758 \uBAA8\uC591\uC740 \uB2E4\uC74C\uACFC \uAC19\uC744 \uAC83\uC785\uB2C8\uB2E4:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),b=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token string">&#39;loading&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;hasData&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;hasError&#39;</span><span class="token punctuation">,</span>
    data<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
    error<span class="token operator">?</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>async atom\uC758 \uC0C1\uD0DC\uC5D0 \uB530\uB77C \uB2E4\uB978 UI\uB97C \uB80C\uB354\uB9C1\uD558\uB294 \uB370 state \uC18D\uC131\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&quot;loading&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uB85C\uB529 \uC0C1\uD0DC \uB80C\uB354\uB9C1</span>
  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&quot;hasError&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC5D0\uB7EC \uC0C1\uD0DC \uB80C\uB354\uB9C1</span>
  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&quot;hasData&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uB370\uC774\uD130 \uC0C1\uD0DC \uB80C\uB354\uB9C1</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>data \uC18D\uC131\uC740 state\uAC00 hasData\uC778 \uACBD\uC6B0 \uB370\uC774\uD130\uB97C \uD3EC\uD568\uD558\uACE0, error \uC18D\uC131\uC740 state\uAC00 hasError\uC778 \uACBD\uC6B0 \uC624\uB958\uB97C \uD3EC\uD568\uD569\uB2C8\uB2E4. async atom\uC744 \uC0AC\uC6A9\uD558\uB294 \uAD6C\uC131 \uC694\uC18C \uC608\uC81C\uB294 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4:\`\`\`</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),g=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;\uC0AC\uC6A9\uC790 \uCD5C\uC801\uD654&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getPostsAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/atoms/async-atom&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jotai&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> AsyncPostList <span class="token keyword">from</span> <span class="token string">&quot;./posts&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Pagination <span class="token keyword">from</span> <span class="token string">&quot;./pagination&quot;</span><span class="token punctuation">;</span>
type Props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">AsyncAtomPage</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>response<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useAtom</span><span class="token punctuation">(</span>getPostsAtom<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&quot;loading&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\uB85C\uB529 \uC911<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>state <span class="token operator">===</span> <span class="token string">&quot;hasError&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>error <span class="token keyword">instanceof</span> <span class="token class-name">Error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>response<span class="token punctuation">.</span>error<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\uC54C \uC218 \uC5C6\uB294 \uC624\uB958<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-col items-center space-y-4&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>AsyncPostList posts<span class="token operator">=</span><span class="token punctuation">{</span>response<span class="token punctuation">.</span>data<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Pagination <span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uD398\uC774\uC9C0\uC774\uC158 \uAD6C\uC131\uC694\uC18C\uB294 \uB2E4\uC74C\uACFC \uAC19\uC774 \uAD6C\uD604\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> postsPaginationAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/atoms/async-atom&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jotai&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

type Props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Pagination</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">props</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useAtom</span><span class="token punctuation">(</span>postsPaginationAtom<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleNext</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>pagination<span class="token punctuation">,</span> <span class="token literal-property property">start</span><span class="token operator">:</span> pagination<span class="token punctuation">.</span>start <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handlePrevious</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>pagination<span class="token punctuation">,</span> <span class="token literal-property property">start</span><span class="token operator">:</span> pagination<span class="token punctuation">.</span>start <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-row items-center space-x-4 p-2 mb-4&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span>handlePrevious<span class="token punctuation">}</span>
        disabled<span class="token operator">=</span><span class="token punctuation">{</span>pagination<span class="token punctuation">.</span>start <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded disabled:opacity-50&quot;</span>
      <span class="token operator">&gt;</span>
        \uC774\uC804
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span>\uD398\uC774\uC9C0<span class="token operator">:</span> <span class="token punctuation">{</span>pagination<span class="token punctuation">.</span>start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button
        onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleNext<span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded&quot;</span>
      <span class="token operator">&gt;</span>
        \uB2E4\uC74C
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Pagination<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uB610\uD55C, AsyncPostList \uAD6C\uC131\uC694\uC18C\uB294 \uB2E4\uC74C\uACFC \uAC19\uC774 \uAD6C\uD604\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),y=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use client&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Post <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/atoms/user-atom&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> PostCard <span class="token keyword">from</span> <span class="token string">&quot;../post-card&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">&quot;./header&quot;</span><span class="token punctuation">;</span>

type Props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">posts</span><span class="token operator">:</span> Post<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">AsyncPostList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> posts <span class="token punctuation">}</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-col items-center space-y-4 max-w-2xl&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Header <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>posts<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>PostCard key<span class="token operator">=</span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>id<span class="token punctuation">}</span> post<span class="token operator">=</span><span class="token punctuation">{</span>post<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> AsyncPostList<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Header \uCEF4\uD3EC\uB10C\uD2B8\uB294 \uD0C0\uC774\uD2C0\uACFC \uD398\uC774\uC9C0\uB124\uC774\uC158 \uC81C\uD55C \uB4DC\uB86D\uB2E4\uC6B4\uC744 \uD45C\uC2DC\uD558\uB294 \uB370 \uC0AC\uC6A9\uB429\uB2C8\uB2E4:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> postsPaginationAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/atoms/async-atom&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAtom <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;jotai&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>

type Props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> limits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Header</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token operator">:</span> Props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useAtom</span><span class="token punctuation">(</span>postsPaginationAtom<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onLimitChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">e</span><span class="token operator">:</span> React<span class="token punctuation">.</span>ChangeEvent<span class="token operator">&lt;</span>HTMLSelectElement<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>pagination<span class="token punctuation">,</span> <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token literal-property property">start</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex flex-row items-center space-x-4 p-2 mb-4 w-full justify-between&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Posts<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>select
        value<span class="token operator">=</span><span class="token punctuation">{</span>pagination<span class="token punctuation">.</span>limit<span class="token punctuation">}</span>
        onChange<span class="token operator">=</span><span class="token punctuation">{</span>onLimitChange<span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;font-bold py-2 px-4 rounded border border-gray-300&quot;</span>
      <span class="token operator">&gt;</span>
        <span class="token punctuation">{</span>limits<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>option key<span class="token operator">=</span><span class="token punctuation">{</span>limit<span class="token punctuation">}</span> value<span class="token operator">=</span><span class="token punctuation">{</span>limit<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token punctuation">{</span>limit<span class="token punctuation">}</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span>
        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Jotai\uC5D0\uC11C async atom\uC744 \uC0AC\uC6A9\uD558\uC5EC \uB370\uC774\uD130\uB97C \uBE44\uB3D9\uAE30\uC801\uC73C\uB85C \uAC00\uC838\uC624\uACE0 \uC751\uC6A9 \uD504\uB85C\uADF8\uB7A8\uC758 \uB370\uC774\uD130 \uC0C1\uD0DC\uB97C \uAD00\uB9AC\uD560 \uC218 \uC788\uB294 \uBC29\uBC95\uC785\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),w=n("h1",{id:"\u1103\u1166\u1106\u1169",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1103\u1166\u1106\u1169","aria-hidden":"true"},"#"),s(" \uB370\uBAA8")],-1),f=n("p",null,"\uBE44\uB3D9\uAE30 Atom \uC608\uC81C\uC758 \uB370\uBAA8\uC785\uB2C8\uB2E4:",-1),h=n("p",null,[n("img",{src:"https://miro.medium.com/v2/resize:fit:1400/1*br1RR2pD_4tXuKSuoXws3w.gif",alt:"\uB370\uBAA8"})],-1),q={href:"https://jotai-example.rasit.me/",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),_=e('<p>\uAE43\uD5C8\uBE0C \uC800\uC7A5\uC18C: https://github.com/rasitcolakel/next-js-jotai</p><h1 id="\u1100\u1167\u11AF\u1105\u1169\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1100\u1167\u11AF\u1105\u1169\u11AB" aria-hidden="true">#</a> \uACB0\uB860</h1><p>\uC774 \uAE00\uC5D0\uC11C\uB294 React\uB97C \uC704\uD55C \uAC04\uB2E8\uD558\uACE0 \uC720\uC5F0\uD55C \uC0C1\uD0DC \uAD00\uB9AC \uB77C\uC774\uBE0C\uB7EC\uB9AC \uC778 Jotai\uC5D0 \uB300\uD574 \uBC30\uC6E0\uC2B5\uB2C8\uB2E4. \uC6B0\uB9AC\uB294 Jotai\uB97C \uC0AC\uC6A9\uD558\uC5EC atom, \uD30C\uC0DD\uB41C atom \uBC0F \uBE44\uB3D9\uAE30 atom\uC744 \uB9CC\uB4DC\uB294 \uBC29\uBC95\uC744 \uC54C\uC544\uBCF4\uC558\uC2B5\uB2C8\uB2E4. \uB610\uD55C Next.js \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0\uC11C Jotai\uB97C \uC0AC\uC6A9\uD558\uB294 \uBC29\uBC95\uB3C4 \uBC30\uC6E0\uC2B5\uB2C8\uB2E4. Jotai\uB294 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC758 \uC0C1\uD0DC\uB97C \uAC04\uB2E8\uD558\uACE0 \uD6A8\uC728\uC801\uC73C\uB85C \uAD00\uB9AC\uD558\uB294 \uB370 \uB3C4\uC6C0\uC774 \uB418\uB294 \uAC15\uB825\uD55C \uC0C1\uD0DC \uAD00\uB9AC \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC785\uB2C8\uB2E4. \uC774 \uAE00\uC774 \uB3C4\uC6C0\uC774 \uB418\uC5C8\uAE30\uB97C \uBC14\uB78D\uB2C8\uB2E4. \uAD81\uAE08\uD55C \uC810\uC774 \uC788\uAC70\uB098 \uD53C\uB4DC\uBC31\uC774 \uC788\uB2E4\uBA74 \uC5B8\uC81C\uB4E0\uC9C0 Twitter\uB97C \uD1B5\uD574 \uC800\uC5D0\uAC8C \uC5F0\uB77D\uD574 \uC8FC\uC138\uC694. \uC77D\uC5B4 \uC8FC\uC154\uC11C \uAC10\uC0AC\uD569\uB2C8\uB2E4!</p><h1 id="\u110E\u1161\u11B7\u1100\u1169\u1106\u116E\u11AB\u1112\u1165\u11AB" tabindex="-1"><a class="header-anchor" href="#\u110E\u1161\u11B7\u1100\u1169\u1106\u116E\u11AB\u1112\u1165\u11AB" aria-hidden="true">#</a> \uCC38\uACE0\uBB38\uD5CC</h1><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),P=n("ul",null,[n("li",null,"Jotai \uBB38\uC11C"),n("li",null,"TypeScript"),n("li",null,"Next.js"),n("li",null,"Vercel"),n("li",null,"React")],-1);function j(A,N){const c=i("ExternalLinkIcon");return a(),u("div",null,[v,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),m,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),b,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),g,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),y,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),w,f,h,n("p",null,[s("\uC804\uCCB4 \uB370\uBAA8: "),n("a",q,[s("https://jotai-example.rasit.me/"),r(c)])]),x,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),_,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),P])}var C=l(d,[["render",j],["__file","index.html.vue"]]);export{C as default};
