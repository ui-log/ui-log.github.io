import{_ as n}from"./app.a99075bb.js";import{l as s,m as a,K as t}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";var p="/assets/BuilderAPI_0.e432309a.png";const e={},o=t('<p>Storybook\uC740 Webpack, Vite \uBC0F ESBuild\uB97C \uD3EC\uD568\uD55C \uC5EC\uB7EC \uBE4C\uB354\uB97C \uC9C0\uC6D0\uD558\uB294 \uAD6C\uC870\uB85C \uC124\uACC4\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4. \uBE4C\uB354 API\uB294 Storybook\uC5D0 \uC0C8\uB85C\uC6B4 \uBE4C\uB354\uB97C \uCD94\uAC00\uD560 \uC218 \uC788\uB294 \uC778\uD130\uD398\uC774\uC2A4 \uC138\uD2B8\uC785\uB2C8\uB2E4.</p><p><img src="'+p+`" alt="BuilderAPI_0.png"></p><h2 id="\u1107\u1175\u11AF\u1103\u1165\u1102\u1173\u11AB-\u110B\u1165\u1104\u1165\u11C2\u1100\u1166-\u110C\u1161\u11A8\u1103\u1169\u11BC\u1112\u1161\u1102\u1161\u110B\u116D" tabindex="-1"><a class="header-anchor" href="#\u1107\u1175\u11AF\u1103\u1165\u1102\u1173\u11AB-\u110B\u1165\u1104\u1165\u11C2\u1100\u1166-\u110C\u1161\u11A8\u1103\u1169\u11BC\u1112\u1161\u1102\u1161\u110B\u116D" aria-hidden="true">#</a> \uBE4C\uB354\uB294 \uC5B4\uB5BB\uAC8C \uC791\uB3D9\uD558\uB098\uC694?</h2><p>Storybook\uC5D0\uC11C \uBE4C\uB354\uB294 \uCEF4\uD3EC\uB10C\uD2B8\uC640 \uC774\uC57C\uAE30\uB97C \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC2E4\uD589\uB418\uB294 JS \uBC88\uB4E4\uB85C \uCEF4\uD30C\uC77C\uD558\uB294 \uC5ED\uD560\uC744 \uD569\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uC778\uD130\uB799\uD2F0\uBE0C \uAC1C\uBC1C\uC744 \uC704\uD55C \uAC1C\uBC1C \uC11C\uBC84\uBFD0\uB9CC \uC544\uB2C8\uB77C \uCD5C\uC801\uD654\uB41C \uBC88\uB4E4\uC744 \uC704\uD55C \uD504\uB85C\uB355\uC158 \uBAA8\uB4DC\uB3C4 \uC81C\uACF5\uD569\uB2C8\uB2E4.</p><p>\uBE4C\uB354\uB97C \uC120\uD0DD\uD558\uB824\uBA74 \uC0AC\uC6A9\uC790\uB294 \uC885\uC18D\uC131\uC73C\uB85C \uCD94\uAC00\uD55C \uD6C4 \uAD6C\uC131 \uD30C\uC77C(.storybook/main.js)\uC744 \uD3B8\uC9D1\uD558\uC5EC \uD65C\uC131\uD654\uD574\uC57C \uD569\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4, Vite \uBE4C\uB354\uB97C \uC0AC\uC6A9\uD558\uB294 \uACBD\uC6B0:</p><div class="language-npm ext-npm line-numbers-mode"><pre class="language-npm"><code>npm install @storybook/builder-vite --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  stories<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;../src/**/*.mdx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;../stories/**/*.stories.@(js|jsx|mjs|ts|tsx)&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  addons<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@storybook/addon-links&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;@storybook/addon-essentials&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  core<span class="token operator">:</span> <span class="token punctuation">{</span>
    builder<span class="token operator">:</span> <span class="token string">&#39;@storybook/builder-vite&#39;</span><span class="token punctuation">,</span> <span class="token comment">// \u{1F448} \uC5EC\uAE30\uC11C \uBE4C\uB354\uB97C \uD65C\uC131\uD654\uD569\uB2C8\uB2E4.</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u1107\u1175\u11AF\u1103\u1165-api" tabindex="-1"><a class="header-anchor" href="#\u1107\u1175\u11AF\u1103\u1165-api" aria-hidden="true">#</a> \uBE4C\uB354 API</h2><p>Storybook\uC5D0\uC11C\uB294 \uBAA8\uB4E0 \uBE4C\uB354\uAC00 \uB2E4\uC74C API\uB97C \uAD6C\uD604\uD574\uC57C \uD558\uBA70, \uB2E4\uC74C \uAD6C\uC131 \uC635\uC158\uACFC \uC9C4\uC785 \uC9C0\uC810\uC744 \uB178\uCD9C\uD574\uC57C \uD569\uB2C8\uB2E4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Builder<span class="token operator">&lt;</span>Config<span class="token punctuation">,</span> Stats<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function-variable function">start</span><span class="token operator">:</span> <span class="token punctuation">(</span>args<span class="token operator">:</span> <span class="token punctuation">{</span>
    options<span class="token operator">:</span> Options<span class="token punctuation">;</span>
    startTime<span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> process<span class="token punctuation">.</span>hrtime<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    router<span class="token operator">:</span> Router<span class="token punctuation">;</span>
    server<span class="token operator">:</span> Server<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span> <span class="token operator">|</span> <span class="token punctuation">{</span>
    stats<span class="token operator">?</span><span class="token operator">:</span> Stats<span class="token punctuation">;</span>
    totalTime<span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> process<span class="token punctuation">.</span>hrtime<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token function-variable function">bail</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">?</span><span class="token operator">:</span> Error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function-variable function">build</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token punctuation">{</span>
    options<span class="token operator">:</span> Options<span class="token punctuation">;</span>
    startTime<span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> process<span class="token punctuation">.</span>hrtime<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span> <span class="token operator">|</span> Stats<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function-variable function">bail</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">?</span><span class="token operator">:</span> Error<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token function-variable function">getConfig</span><span class="token operator">:</span> <span class="token punctuation">(</span>options<span class="token operator">:</span> Options<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Config<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  corePresets<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  overridePresets<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uAC1C\uBC1C \uBAA8\uB4DC\uC5D0\uC11C start API \uD638\uCD9C\uC740 \uAC1C\uBC1C \uC11C\uBC84\uB97C \uCD08\uAE30\uD654\uD558\uC5EC \uD30C\uC77C \uC2DC\uC2A4\uD15C \uBCC0\uACBD \uC0AC\uD56D(\uC608: \uCEF4\uD3EC\uB10C\uD2B8 \uBC0F \uC2A4\uD1A0\uB9AC)\uC744 \uBAA8\uB2C8\uD130\uB9C1\uD55C \uD6C4 \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uD56B \uBAA8\uB4C8 \uB9AC\uB85C\uB4DC\uB97C \uC2E4\uD589\uD558\uB294 \uAC83\uC744 \uB2F4\uB2F9\uD569\uB2C8\uB2E4. \uB610\uD55C \uC0AC\uC6A9\uC790 \uC785\uB825 \uB610\uB294 \uC624\uB958\uB97C \uD1B5\uD574 \uC2E4\uD589 \uD504\uB85C\uC138\uC2A4\uB97C \uC548\uC804\uD558\uAC8C \uC885\uB8CC\uD558\uAE30 \uC704\uD55C bail \uD568\uC218\uB97C \uC81C\uACF5\uD569\uB2C8\uB2E4.</p><p>\uD504\uB85C\uB355\uC158\uC5D0\uC11C build API \uD638\uCD9C\uC740 \uC815\uC801 Storybook \uBE4C\uB4DC\uB97C \uC0DD\uC131\uD558\uB294 \uAC83\uC744 \uB2F4\uB2F9\uD558\uBA70, \uCD94\uAC00 \uAD6C\uC131\uC774 \uC81C\uACF5\uB418\uC9C0 \uC54A\uB294 \uACBD\uC6B0 \uAE30\uBCF8\uC801\uC73C\uB85C storybook-static \uB514\uB809\uD1A0\uB9AC\uC5D0 \uC800\uC7A5\uD569\uB2C8\uB2E4. \uC0DD\uC131\uB41C \uCD9C\uB825\uBB3C\uC740 \uC0AC\uC6A9\uC790\uAC00 \uC778\uB371\uC2A4.html \uB610\uB294 iframe.html\uC744 \uC5F4\uC5B4 Storybook\uC744 \uBCF4\uB294 \uB370 \uD544\uC694\uD55C \uBAA8\uB4E0 \uAC83\uC744 \uD3EC\uD568\uD574\uC57C \uD558\uBA70, \uB2E4\uB978 \uD504\uB85C\uC138\uC2A4\uAC00 \uC2E4\uD589\uB418\uACE0 \uC788\uC9C0 \uC54A\uC740 \uC0C1\uD0DC\uC5D0\uC11C \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC5F4 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.</p><h2 id="\u1100\u116E\u1112\u1167\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1100\u116E\u1112\u1167\u11AB" aria-hidden="true">#</a> \uAD6C\uD604</h2><p>\uB0B4\uBD80\uC801\uC73C\uB85C \uBE4C\uB354\uB294 \uBBF8\uB9AC\uBCF4\uAE30 iframe\uC744 \uC81C\uACF5\uD558\uAC70\uB098 \uAD6C\uCD95\uD558\uB294 \uC5ED\uD560\uC744 \uB9E1\uACE0 \uC788\uC2B5\uB2C8\uB2E4. \uBBF8\uB9AC\uBCF4\uAE30 iframe\uC740 \uBCC4\uB3C4\uC758 \uC694\uAD6C \uC0AC\uD56D\uC744 \uAC16\uACE0 \uC788\uC2B5\uB2C8\uB2E4. Storybook\uACFC \uD568\uAED8 \uC81C\uACF5\uB418\uB294 Essential \uC560\uB4DC\uC628\uC744 \uC644\uC804\uD788 \uC9C0\uC6D0\uD558\uB824\uBA74 \uB2E4\uC74C \uC0AC\uD56D\uC744 \uACE0\uB824\uD574\uC57C \uD569\uB2C8\uB2E4.</p><h3 id="\u1109\u1173\u1110\u1169\u1105\u1175-\u1100\u1161\u110C\u1167\u110B\u1169\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1109\u1173\u1110\u1169\u1105\u1175-\u1100\u1161\u110C\u1167\u110B\u1169\u1100\u1175" aria-hidden="true">#</a> \uC2A4\uD1A0\uB9AC \uAC00\uC838\uC624\uAE30</h3><p>\uC2A4\uD1A0\uB9AC \uC124\uC815 \uD544\uB4DC\uB294 Storybook\uC5D0\uC11C \uC2A4\uD1A0\uB9AC\uB97C \uB85C\uB529\uD558\uB294 \uB370 \uC0AC\uC6A9\uB429\uB2C8\uB2E4. \uAD6C\uC131\uC740 \uCEF4\uD3EC\uB10C\uD2B8\uC758 \uC2A4\uD1A0\uB9AC\uC758 \uBB3C\uB9AC\uC801 \uC704\uCE58\uB97C \uD3EC\uD568\uD558\uB294 \uD30C\uC77C \uAE00\uB85C\uBE0C \uBC30\uC5F4\uC744 \uC815\uC758\uD569\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uD574\uB2F9 \uD30C\uC77C\uC744 \uB85C\uB4DC\uD558\uACE0 \uBCC0\uACBD \uC0AC\uD56D\uC744 \uBAA8\uB2C8\uD130\uB9C1\uD558\uACE0 UI\uB97C \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.</p><h3 id="\u1100\u116E\u1109\u1165\u11BC-\u110B\u1169\u11B8\u1109\u1167\u11AB-\u110C\u1166\u1100\u1169\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1100\u116E\u1109\u1165\u11BC-\u110B\u1169\u11B8\u1109\u1167\u11AB-\u110C\u1166\u1100\u1169\u11BC" aria-hidden="true">#</a> \uAD6C\uC131 \uC635\uC158 \uC81C\uACF5</h3><p>\uAE30\uBCF8\uC801\uC73C\uB85C Storybook\uC758 \uAD6C\uC131\uC740 \uBCC4\uB3C4\uC758 \uD30C\uC77C (storybook/main.js|ts)\uC5D0\uC11C \uCC98\uB9AC\uB418\uC5B4 \uC0AC\uC6A9\uC790\uAC00 \uD544\uC694\uC5D0 \uB9DE\uAC8C \uC0AC\uC6A9\uC790 \uC815\uC758\uD560 \uC218 \uC788\uB294 \uC635\uC158\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uCD94\uAC00 \uD544\uB4DC \uB610\uB294 \uB2E4\uB978 \uBE4C\uB354\uC5D0 \uC801\uD569\uD55C \uBA54\uCEE4\uB2C8\uC998\uC744 \uD1B5\uD574 \uC790\uCCB4 \uAD6C\uC131 \uC9C0\uC6D0\uB3C4 \uC81C\uACF5\uD574\uC57C \uD569\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> stringifyProcessEnvs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./envs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getOptimizeDeps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./optimizeDeps&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> commonConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./vite-config&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> EnvsRaw<span class="token punctuation">,</span> ExtendedOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./types&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createViteServer</span><span class="token punctuation">(</span>options<span class="token operator">:</span> ExtendedOptions<span class="token punctuation">,</span> devServer<span class="token operator">:</span> Server<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> port<span class="token punctuation">,</span> presets <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>

  <span class="token comment">// Defines the baseline config.</span>
  <span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">commonConfig</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> defaultConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>baseConfig<span class="token punctuation">,</span>
    server<span class="token operator">:</span> <span class="token punctuation">{</span>
      middlewareMode<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      hmr<span class="token operator">:</span> <span class="token punctuation">{</span>
        port<span class="token punctuation">,</span>
        server<span class="token operator">:</span> devServer<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      fs<span class="token operator">:</span> <span class="token punctuation">{</span>
        strict<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    optimizeDeps<span class="token operator">:</span> <span class="token keyword">await</span> <span class="token function">getOptimizeDeps</span><span class="token punctuation">(</span>baseConfig<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> finalConfig <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">presets</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">&#39;viteFinal&#39;</span><span class="token punctuation">,</span> defaultConfig<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> envsRaw <span class="token operator">=</span> <span class="token keyword">await</span> presets<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">apply</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span>EnvsRaw<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Remainder implementation</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1106\u1175\u1105\u1175\u1107\u1169\u1100\u1175-js-\u1102\u1162\u1107\u1169\u1102\u1162\u1100\u1175-\u110E\u1165\u1105\u1175" tabindex="-1"><a class="header-anchor" href="#\u1106\u1175\u1105\u1175\u1107\u1169\u1100\u1175-js-\u1102\u1162\u1107\u1169\u1102\u1162\u1100\u1175-\u110E\u1165\u1105\u1175" aria-hidden="true">#</a> \uBBF8\uB9AC\uBCF4\uAE30.js \uB0B4\uBCF4\uB0B4\uAE30 \uCC98\uB9AC</h3><p>\uD504\uB9AC\uBDF0.js \uAD6C\uC131 \uD30C\uC77C\uC744 \uD1B5\uD574 \uC0AC\uC6A9\uC790\uB294 \uC2A4\uD1A0\uB9AC\uAC00 UI\uC5D0 \uC5B4\uB5BB\uAC8C \uB80C\uB354\uB9C1\uB418\uB294\uC9C0\uB97C \uC81C\uC5B4\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC774\uB294 \uB370\uCF54\uB808\uC774\uD130\uB85C \uB0B4\uBCF4\uB0B8 \uAC83\uC744 \uD1B5\uD574 \uC81C\uACF5\uB429\uB2C8\uB2E4. Storybook\uC774 \uC2DC\uC791\uB420 \uB54C, \uB0B4\uBD80 API \uD638\uCD9C\uB85C \uC774\uB7EC\uD55C \uC774\uB984 \uC9C0\uC815\uB41C \uB0B4\uBCF4\uB0B4\uAE30\uB97C \uAC00\uC0C1 \uBAA8\uB4C8 \uC5D4\uD2B8\uB9AC\uB97C \uD1B5\uD574 \uBCC0\uD658\uD569\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4, addDecorator()\uC640 \uAC19\uC740 \uAC83\uC785\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uBE44\uC2B7\uD55C \uAD6C\uD604\uC744 \uC81C\uACF5\uD574\uC57C \uD569\uB2C8\uB2E4. \uC544\uB798\uB294 \uC608\uC2DC\uC785\uB2C8\uB2E4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> virtualPreviewFile<span class="token punctuation">,</span> virtualStoriesFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./virtual-file-names&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> transformAbsPath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils/transform-abs-path&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> ExtendedOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./types&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">generateIframeScriptCode</span><span class="token punctuation">(</span>options<span class="token operator">:</span> ExtendedOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> presets<span class="token punctuation">,</span> frameworkPath<span class="token punctuation">,</span> framework <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
  <span class="token keyword">const</span> frameworkImportPath <span class="token operator">=</span> frameworkPath <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@storybook/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>framework<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> presetEntries <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">presets</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> configEntries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>presetEntries<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">absoluteFilesToImport</span> <span class="token operator">=</span> <span class="token punctuation">(</span>files<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    files
      <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">import </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">* as </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> from </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">transformAbsPath</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">importArray</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> length<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    // Ensure that the client API is initialized by the framework before any other iframe code
    // is loaded. That way our client-apis can assume the existence of the API+store
    import { configure } from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>frameworkImportPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;

    import {
      addDecorator,
      addParameters,
      addArgTypesEnhancer,
      addArgsEnhancer,
      setGlobalRender
    } from &#39;@storybook/preview-api&#39;;
    import { logger } from &#39;@storybook/client-logger&#39;;
    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">absoluteFilesToImport</span><span class="token punctuation">(</span>configEntries<span class="token punctuation">,</span> <span class="token string">&#39;config&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
    import * as preview from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>virtualPreviewFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;
    import { configStories } from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>virtualStoriesFile<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;

    const configs = [</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">importArray</span><span class="token punctuation">(</span><span class="token string">&#39;config&#39;</span><span class="token punctuation">,</span> configEntries<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&#39;preview.default&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">].filter(Boolean)

    configs.forEach(config =&gt; {
      Object.keys(config).forEach((key) =&gt; {
        const value = config[key];
        switch (key) {
          case &#39;args&#39;:
          case &#39;argTypes&#39;: {
            return logger.warn(&#39;Invalid args/argTypes in config, ignoring.&#39;, JSON.stringify(value));
          }
          case &#39;decorators&#39;: {
            return value.forEach((decorator) =&gt; addDecorator(decorator, false));
          }
          case &#39;parameters&#39;: {
            return addParameters({ ...value }, false);
          }
          case &#39;render&#39;: {
            return setGlobalRender(value)
          }
          case &#39;globals&#39;:
          case &#39;globalTypes&#39;: {
            const v = {};
            v[key] = value;
            return addParameters(v, false);
          }
          case &#39;decorateStory&#39;:
          case &#39;renderToCanvas&#39;: {
            return null;
          }
          default: {
            // eslint-disable-next-line prefer-template
            return console.log(key + &#39; was not supported :( !&#39;);
          }
        }
      });
    })
    configStories(configure);
    </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> code<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mdx-\u110C\u1175\u110B\u116F\u11AB" tabindex="-1"><a class="header-anchor" href="#mdx-\u110C\u1175\u110B\u116F\u11AB" aria-hidden="true">#</a> MDX \uC9C0\uC6D0</h3><p>Storybook\uC758 Docs\uC5D0\uB294 MDX\uB97C \uC0AC\uC6A9\uD558\uC5EC \uC2A4\uD1A0\uB9AC/\uBB38\uC11C\uB97C \uC791\uC131\uD560 \uC218 \uC788\uB294 \uAE30\uB2A5\uC774 \uD3EC\uD568\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uB610\uD55C MDX\uB97C \uD574\uC11D\uD558\uACE0 Storybook\uC758 \uD2B9\uC218 \uD655\uC7A5 \uAE30\uB2A5\uC744 \uD638\uCD9C\uD558\uB294 \uBC29\uBC95\uC744 \uC54C\uC544\uC57C \uD569\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> mdx <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-mdx&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> createCompiler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@storybook/csf-tools/mdx&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">mdxPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">mdx</span><span class="token punctuation">(</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> compilers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;stories.mdx&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> filename<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;story.mdx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      compilers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">createCompiler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      compilers<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1109\u1169\u1109\u1173-\u110F\u1169\u1103\u1173-\u1109\u1173\u1102\u1175\u1111\u1166\u11BA-\u1109\u1162\u11BC\u1109\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1109\u1169\u1109\u1173-\u110F\u1169\u1103\u1173-\u1109\u1173\u1102\u1175\u1111\u1166\u11BA-\u1109\u1162\u11BC\u1109\u1165\u11BC" aria-hidden="true">#</a> \uC18C\uC2A4 \uCF54\uB4DC \uC2A4\uB2C8\uD3AB \uC0DD\uC131</h3><p>Storybook\uC740 \uCEF4\uD3EC\uB10C\uD2B8 \uBC0F \uC774\uC57C\uAE30\uC5D0 \uB300\uD55C \uCD94\uAC00 \uC785\uB825\uACFC \uAD00\uB828\uB41C \uBA54\uD0C0\uB370\uC774\uD130\uB97C \uC8FC\uC11D\uC73C\uB85C \uBD99\uC5EC\uC11C \uB300\uD654\uC2DD \uCEE8\uD2B8\uB864 \uBC0F \uBB38\uC11C\uB97C \uC790\uB3D9\uC73C\uB85C \uC0DD\uC131\uD569\uB2C8\uB2E4. \uD604\uC7AC, Webpack \uB85C\uB354/\uD50C\uB7EC\uADF8\uC778\uC744 \uD1B5\uD574 \uC81C\uACF5\uB429\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uC774\uB7EC\uD55C \uAE30\uB2A5\uC744 \uC9C0\uC6D0\uD558\uAE30 \uC704\uD574 \uC774\uB97C \uB2E4\uC2DC \uAD6C\uD604\uD574\uC57C \uD569\uB2C8\uB2E4.</p><h3 id="\u110C\u1165\u11BC\u110C\u1165\u11A8-\u1107\u1175\u11AF\u1103\u1173-\u1109\u1162\u11BC\u1109\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u110C\u1165\u11BC\u110C\u1165\u11A8-\u1107\u1175\u11AF\u1103\u1173-\u1109\u1162\u11BC\u1109\u1165\u11BC" aria-hidden="true">#</a> \uC815\uC801 \uBE4C\uB4DC \uC0DD\uC131</h3><p>Storybook\uC758 \uD575\uC2EC \uAE30\uB2A5 \uC911 \uD558\uB098\uB294 \uC6F9 \uD638\uC2A4\uD305 \uC11C\uBE44\uC2A4\uC5D0 \uBC1C\uD589\uD560 \uC218 \uC788\uB294 \uC815\uC801 \uBE4C\uB4DC\uB97C \uC0DD\uC131\uD560 \uC218 \uC788\uB294 \uB2A5\uB825\uC785\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uBE44\uC2B7\uD55C \uBA54\uCEE4\uB2C8\uC998\uC744 \uC81C\uACF5\uD574\uC57C \uD569\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> build <span class="token keyword">as</span> viteBuild <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> stringifyProcessEnvs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./envs&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> commonConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./vite-config&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> EnvsRaw<span class="token punctuation">,</span> ExtendedOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./types&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">build</span><span class="token punctuation">(</span>options<span class="token operator">:</span> ExtendedOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> presets <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>

  <span class="token keyword">const</span> baseConfig <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">commonConfig</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>baseConfig<span class="token punctuation">,</span>
    build<span class="token operator">:</span> <span class="token punctuation">{</span>
      outDir<span class="token operator">:</span> options<span class="token punctuation">.</span>outputDir<span class="token punctuation">,</span>
      emptyOutDir<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      sourcemap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> finalConfig <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">presets</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token string">&#39;viteFinal&#39;</span><span class="token punctuation">,</span> config<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> envsRaw <span class="token operator">=</span> <span class="token keyword">await</span> presets<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">apply</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">Promise</span><span class="token operator">&lt;</span>EnvsRaw<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;env&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Stringify env variables after getting \`envPrefix\` from the final config</span>
  <span class="token keyword">const</span> envs <span class="token operator">=</span> <span class="token function">stringifyProcessEnvs</span><span class="token punctuation">(</span>envsRaw<span class="token punctuation">,</span> finalConfig<span class="token punctuation">.</span>envPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Update \`define\`</span>
  finalConfig<span class="token punctuation">.</span>define <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>finalConfig<span class="token punctuation">.</span>define<span class="token punctuation">,</span>
    <span class="token operator">...</span>envs<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> <span class="token function">viteBuild</span><span class="token punctuation">(</span>finalConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1100\u1162\u1107\u1161\u11AF-\u1109\u1165\u1107\u1165-\u1110\u1169\u11BC\u1112\u1161\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1100\u1162\u1107\u1161\u11AF-\u1109\u1165\u1107\u1165-\u1110\u1169\u11BC\u1112\u1161\u11B8" aria-hidden="true">#</a> \uAC1C\uBC1C \uC11C\uBC84 \uD1B5\uD569</h3><p>\uAE30\uBCF8\uC801\uC73C\uB85C Storybook\uC774 \uAC1C\uBC1C \uBAA8\uB4DC\uC5D0\uC11C \uC2DC\uC791\uB420 \uB54C, \uB0B4\uBD80 \uAC1C\uBC1C \uC11C\uBC84\uC5D0 \uC758\uC874\uD569\uB2C8\uB2E4. \uBE4C\uB354\uB294 \uC774\uC640 \uD1B5\uD569\uD560 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createViteServer</span><span class="token punctuation">(</span>options<span class="token operator">:</span> ExtendedOptions<span class="token punctuation">,</span> devServer<span class="token operator">:</span> Server<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> port <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
  <span class="token comment">// \uB098\uBA38\uC9C0 \uC11C\uBC84 \uAD6C\uC131</span>

  <span class="token comment">// \uC11C\uBC84\uB97C \uC0DD\uC131\uD569\uB2C8\uB2E4.</span>
  <span class="token keyword">return</span> <span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// \uC11C\uBC84 \uAD6C\uC131\uC740 \uC5EC\uAE30\uC5D0 \uC791\uC131\uD569\uB2C8\uB2E4</span>
    server<span class="token operator">:</span> <span class="token punctuation">{</span>
      middlewareMode<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      hmr<span class="token operator">:</span> <span class="token punctuation">{</span>
        port<span class="token punctuation">,</span>
        server<span class="token operator">:</span> devServer<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1100\u1162\u1107\u1161\u11AF-\u1109\u1165\u1107\u1165-\u110C\u1169\u11BC\u1105\u116D" tabindex="-1"><a class="header-anchor" href="#\u1100\u1162\u1107\u1161\u11AF-\u1109\u1165\u1107\u1165-\u110C\u1169\u11BC\u1105\u116D" aria-hidden="true">#</a> \uAC1C\uBC1C \uC11C\uBC84 \uC885\uB8CC</h3><p>\uAC1C\uBC1C\uC790\uB294 \uD504\uB85C\uC138\uC2A4\uAC00 \uC885\uB8CC\uB420 \uB54C \uAC1C\uBC1C \uC11C\uBC84\uB97C \uC911\uC9C0\uD560 \uC218 \uC788\uB294 \uBC29\uBC95\uC744 \uC81C\uACF5\uD574\uC57C \uD569\uB2C8\uB2E4. \uC0AC\uC6A9\uC790 \uC785\uB825\uC774\uB098 \uC624\uB958\uB97C \uD1B5\uD574\uC11C \uAD6C\uD604\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createViteServer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./vite-server&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> server<span class="token operator">:</span> ViteDevServer<span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> server<span class="token operator">?.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> start<span class="token operator">:</span> ViteBuilder<span class="token punctuation">[</span><span class="token string">&#39;start&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> options<span class="token punctuation">,</span> server<span class="token operator">:</span> devServer <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uB0A8\uC740 \uAD6C\uD604 \uBD80\uBD84\uC744 \uC5EC\uAE30\uC5D0 \uC791\uC131\uD569\uB2C8\uB2E4</span>
  server <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createViteServer</span><span class="token punctuation">(</span>options <span class="token keyword">as</span> ExtendedOptions<span class="token punctuation">,</span> devServer<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    bail<span class="token punctuation">,</span>
    totalTime<span class="token operator">:</span> process<span class="token punctuation">.</span><span class="token function">hrtime</span><span class="token punctuation">(</span>startTime<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="hmr-\u110C\u1175\u110B\u116F\u11AB" tabindex="-1"><a class="header-anchor" href="#hmr-\u110C\u1175\u110B\u116F\u11AB" aria-hidden="true">#</a> HMR \uC9C0\uC6D0</h3><p>\uAC1C\uBC1C \uBAA8\uB4DC\uC5D0\uC11C \uC2E4\uD589 \uC911\uC77C \uB54C, \uAC1C\uBC1C \uC11C\uBC84\uB294 \uBCC0\uACBD\uC774 \uBC1C\uC0DD\uD560 \uB54C \uD398\uC774\uC9C0\uB97C \uB2E4\uC2DC\uB85C\uB4DC\uD560 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4. \uBCC0\uACBD\uC740 \uC774\uC57C\uAE30, \uAD6C\uC131 \uC694\uC18C, \uB610\uB294 \uB3C4\uC6B0\uBBF8 \uD568\uC218 \uC911 \uC5B4\uB514\uC11C\uB4E0 \uBC1C\uC0DD\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><h3 id="\u110C\u1161\u1109\u1166\u1112\u1161\u11AB-\u110C\u1165\u11BC\u1107\u1169" tabindex="-1"><a class="header-anchor" href="#\u110C\u1161\u1109\u1166\u1112\u1161\u11AB-\u110C\u1165\u11BC\u1107\u1169" aria-hidden="true">#</a> \uC790\uC138\uD55C \uC815\uBCF4</h3><p>\uC774 \uC601\uC5ED\uC740 \uBE60\uB974\uAC8C \uAC1C\uBC1C \uC911\uC774\uBA70, \uAD00\uB828 \uBB38\uC11C\uB294 \uC544\uC9C1 \uC9C4\uD589 \uC911\uC774\uBA70 \uBCC0\uACBD\uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uB9CC\uC57D \uBE4C\uB354\uB97C \uB9CC\uB4E4\uACE0 \uC2F6\uB2E4\uBA74, Vite, Webpack \uB610\uB294 Modern Web\uC758 dev-server-storybook \uC18C\uC2A4 \uCF54\uB4DC\uB97C \uD655\uC778\uD558\uC5EC Storybook\uC5D0\uC11C \uBE4C\uB354\uB97C \uAD6C\uD604\uD558\uB294 \uBC29\uBC95\uC5D0 \uB300\uD574 \uB354 \uC54C\uC544\uBCFC \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC900\uBE44\uAC00 \uB418\uC5C8\uC744 \uB54C, Storybook \uCEE4\uBBA4\uB2C8\uD2F0 \uBC0F \uC720\uC9C0 \uBCF4\uC218\uC790\uB4E4\uACFC\uC758 \uC81C\uC548\uC744 \uB17C\uC758\uD558\uAE30 \uC704\uD574 RFC\uB97C \uC5F4\uC5B4\uC8FC\uC138\uC694.</p><p>\uBE4C\uB354\uC5D0 \uB300\uD574 \uB354 \uC54C\uC544\uBCF4\uC138\uC694</p><ul><li>Vite \uBE4C\uB354: Vite\uB85C \uBC88\uB4E4\uB9C1</li><li>Webpack \uBE4C\uB354: Webpack\uC73C\uB85C \uBC88\uB4E4\uB9C1</li><li>\uBE4C\uB354 API: Storybook \uBE4C\uB354\uB97C \uAD6C\uCD95\uD558\uAE30 \uC704\uD55C API</li></ul>`,42),i=[o];function c(l,u){return s(),a("div",null,i)}var g=n(e,[["render",c],["__file","index.html.vue"]]);export{g as default};
