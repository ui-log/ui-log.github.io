import{_ as e}from"./app.3052dcfb.js";import{l as n,m as c,E as s,G as a,p,Y as t,K as o,C as l}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";const i={},u=o(`<p>\uC6F9 \uAC1C\uBC1C \uC138\uACC4\uC5D0\uC11C HTTP \uC694\uCCAD\uC744 \uD558\uB294 \uAC83\uC740 \uAE30\uBCF8\uC801\uC778 \uC791\uC5C5\uC785\uB2C8\uB2E4. \uAC1C\uBC1C\uC790\uB4E4\uC740 \uC885\uC885 \uC774\uB97C \uC704\uD574 \uC5B4\uB5A4 \uB77C\uC774\uBE0C\uB7EC\uB9AC \uB610\uB294 \uB3C4\uAD6C\uB97C \uC0AC\uC6A9\uD560\uC9C0 \uC120\uD0DD\uD574\uC57C \uD569\uB2C8\uB2E4. \uC774 \uAE00\uC5D0\uC11C\uB294 TypeScript\uC5D0\uC11C HTTP \uC694\uCCAD\uC744 \uCC98\uB9AC\uD558\uB294 \uC138 \uAC00\uC9C0 \uC778\uAE30 \uC788\uB294 \uC635\uC158\uC778 fetch, axios, \uADF8\uB9AC\uACE0 tanstack react-query\uB97C \uBE44\uAD50\uD574 \uBCF4\uACA0\uC2B5\uB2C8\uB2E4.</p><p>fetch Fetch\uB294 HTTP \uC694\uCCAD\uC744 \uBCF4\uB0B4\uACE0 \uBC1B\uB294 \uAC04\uB2E8\uD558\uACE0 \uB124\uC774\uD2F0\uBE0C\uD55C \uBC29\uBC95\uC744 \uC81C\uACF5\uD558\uB294 \uB0B4\uC7A5\uB41C JavaScript \uBA54\uC11C\uB4DC\uC785\uB2C8\uB2E4. TypeScript\uC5D0\uC11C Fetch\uB97C \uC0AC\uC6A9\uD558\uC5EC GET \uC694\uCCAD\uC744 \uBCF4\uB0B4\uB294 \uBC29\uBC95\uC740 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/data&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,4),r=o(`<p>fetch\uB294 \uB0B4\uC7A5\uB418\uC5B4 \uC788\uC5B4 \uAC00\uBCBC\uC6B4 \uD3B8\uC774\uC9C0\uB9CC \uCE90\uC2F1 \uBC0F \uC624\uB958 \uC0C1\uD0DC \uCC98\uB9AC\uB97C \uC801\uC808\uD788 \uD558\uC9C0 \uBABB\uD569\uB2C8\uB2E4. \uADF8\uB9AC\uACE0 \uD3EC\uC2A4\uD2B8\uB97C \uC791\uC131\uD560 \uB54C \uD5E4\uB354\uC640 \uCF58\uD150\uCE20 \uC720\uD615 \uB4F1\uC744 \uC804\uB2EC\uD574\uC57C \uD569\uB2C8\uB2E4. \uC544\uB798 \uC608\uC81C\uB97C \uD655\uC778\uD574\uBCF4\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://api.example.com/postData&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">key1</span><span class="token operator">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">key2</span><span class="token operator">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> requestOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\uB124\uD2B8\uC6CC\uD06C \uC751\uB2F5\uC774 \uBB38\uC81C\uAC00 \uC788\uC2B5\uB2C8\uB2E4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;\uC5D0\uB7EC \uBC1C\uC0DD:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uAC83\uC740 \uB9E4\uC6B0 \uB09C\uC7A1\uD55C \uAD6C\uBB38\uC774\uC9C0\uB9CC axios\uB294 fetch\uBCF4\uB2E4 \uD6E8\uC52C \uB354 \uAE54\uB054\uD55C \uAD6C\uBB38\uC744 \uAC00\uC9C0\uACE0 \uC788\uC73C\uB2C8 \uD568\uAED8 \uC0B4\uD3B4\uBCF4\uACA0\uC2B5\uB2C8\uB2E4.</p><p>axios</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),k=o(`<p>Axios\uB294 HTTP \uC694\uCCAD\uC744 \uBCF4\uB2E4 \uAC04\uB2E8\uD558\uAC8C \uB9CC\uB4E4\uC5B4\uC8FC\uB294 \uC778\uAE30 \uC788\uB294 JavaScript \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC785\uB2C8\uB2E4. \uC694\uCCAD\uC744 \uBCF4\uB0B4\uB294 \uACFC\uC815\uC744 \uAC04\uC18C\uD654\uD558\uACE0 \uC694\uCCAD \uBC0F \uC751\uB2F5 \uC778\uD130\uC149\uD130\uC640 \uAC19\uC740 \uCD94\uAC00 \uAE30\uB2A5\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4. axios\uB97C \uC0AC\uC6A9\uD558\uC5EC \uB3D9\uC77C\uD55C GET \uC694\uCCAD\uC744 \uD558\uB294 \uBC29\uBC95\uC740 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4:</p><p>\uBA3C\uC800 \uC124\uCE58\uD574\uC8FC\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/data&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),d=o(`<p>\uD3EC\uC2A4\uD2B8 \uC694\uCCAD\uC744 \uD560 \uB54C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">&#39;https://api.example.com/postData&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> headers <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;Authorization&#39;</span><span class="token operator">:</span> <span class="token string">&#39;Bearer YOUR_ACCESS_TOKEN&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">key1</span><span class="token operator">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">key2</span><span class="token operator">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token punctuation">{</span> headers <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC5EC\uB7EC\uBD84\uC740 \uBD84\uBA85\uD788 axios\uAC00 fetch\uBCF4\uB2E4 \uD6E8\uC52C \uAE54\uB054\uD55C \uAD6C\uBB38\uC744 \uAC00\uC9C0\uACE0 \uC788\uACE0, fetch\uBCF4\uB2E4 \uD6A8\uC728\uC801\uC774\uC9C0\uB9CC \uC5D0\uB7EC \uBC0F \uB85C\uB529 \uC0C1\uD0DC\uB97C \uAD00\uB9AC\uD558\uC9C0 \uBABB\uD55C\uB2E4\uB294 \uAC83\uC744 \uC54C \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uB530\uB77C\uC11C \uB85C\uB529 \uBC0F \uC5D0\uB7EC \uC0C1\uD0DC\uB97C \uC218\uB3D9\uC73C\uB85C \uAD00\uB9AC\uD574\uC57C \uD569\uB2C8\uB2E4. \uD558\uC9C0\uB9CC \uAC71\uC815\uD558\uC9C0 \uB9C8\uC138\uC694! \uC624\uB298\uC758 \uC8FC\uC81C, \uD788\uC5B4\uB85C @tanstack-react-query\uAC00 \uB4F1\uC7A5\uD569\uB2C8\uB2E4.</p><p>React Query</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),v=o(`<p>React-Query\uC740 \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30 \uBC0F \uC0C1\uD0DC \uAD00\uB9AC, \uC624\uB958 \uCC98\uB9AC, \uCE90\uC2F1\uC744 \uC804\uBB38\uC73C\uB85C \uD558\uB294 \uAC15\uB825\uD55C \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC785\uB2C8\uB2E4. \uCD5C\uADFC 5.0\uC5D0\uC11C\uB294 optimistic updates\uB77C\uB294 \uC0C8\uB85C\uC6B4 \uAE30\uB2A5\uC774 \uCD94\uAC00\uB418\uC5C8\uC5B4\uC694. \uC774\uB294 \uB370\uC774\uD130 \uAD00\uB9AC\uC758 \uBCF5\uC7A1\uC131\uC744 \uCD94\uC0C1\uD654\uD558\uC5EC \uB9E4\uC6B0 \uD6A8\uC728\uC801\uC774\uACE0 \uAC1C\uBC1C\uC790 \uCE5C\uD654\uC801\uC778 \uACBD\uD5D8\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4. React-Query\uB97C \uC0AC\uC6A9\uD558\uC5EC \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uB294 \uC608\uC2DC\uB97C \uBCF4\uC5EC\uB4DC\uB9AC\uACA0\uC2B5\uB2C8\uB2E4.</p><p>\uBA3C\uC800 \uC124\uCE58\uD55C \uD6C4 \uC0AC\uC6A9\uD574\uBCF4\uC138\uC694.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install @tanstack<span class="token operator">/</span>react<span class="token operator">-</span>query
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tanstack/react-query&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> error<span class="token punctuation">,</span> loading <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Error<span class="token operator">:</span> <span class="token punctuation">{</span>error<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span>Loading<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span> <span class="token operator">:</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>Data<span class="token operator">:</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),m=o(`<p>\uAC8C\uC2DC\uBB3C \uB610\uB294 \uB2E4\uB978 \uBCC0\uACBD \uC694\uCCAD\uC5D0 \uB300\uD574</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useMutation <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tanstack/react-query&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">PostData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uBBA4\uD14C\uC774\uC158 \uD568\uC218\uB97C \uC815\uC758\uD569\uB2C8\uB2E4</span>
  <span class="token keyword">const</span> postMutation <span class="token operator">=</span> <span class="token function">useMutation</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">newData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
     axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handlePost</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC5EC\uAE30\uC5D0 \uB370\uC774\uD130\uB97C \uB123\uC5B4\uC8FC\uC138\uC694</span>
    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">key1</span><span class="token operator">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key2</span><span class="token operator">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// \uBBA4\uD14C\uC774\uC158 \uC2E4\uD589</span>
    <span class="token keyword">await</span> postMutation<span class="token punctuation">.</span><span class="token function">mutateAsync</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handlePost<span class="token punctuation">}</span> disabled<span class="token operator">=</span><span class="token punctuation">{</span>postMutation<span class="token punctuation">.</span>isLoading<span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span>postMutation<span class="token punctuation">.</span>isLoading <span class="token operator">?</span> <span class="token string">&#39;\uAC8C\uC2DC \uC911...&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;\uB370\uC774\uD130 \uAC8C\uC2DC&#39;</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>

      <span class="token punctuation">{</span>postMutation<span class="token punctuation">.</span>isError <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\uC624\uB958 \uBC1C\uC0DD<span class="token operator">:</span> <span class="token punctuation">{</span>postMutation<span class="token punctuation">.</span>error<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span>

      <span class="token punctuation">{</span>postMutation<span class="token punctuation">.</span>isSuccess <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>\uB370\uC774\uD130\uAC00 \uC131\uACF5\uC801\uC73C\uB85C \uAC8C\uC2DC\uB418\uC5C8\uC2B5\uB2C8\uB2E4<span class="token operator">:</span> <span class="token punctuation">{</span>postMutation<span class="token punctuation">.</span>data<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>React Query\uB97C \uD1B5\uD574 \uB2E4\uC591\uD55C \uB85C\uB529 \uBC0F \uC624\uB958 \uC0C1\uD0DC\uB97C \uC544\uB984\uB2F5\uAC8C \uCC98\uB9AC\uD558\uB294 \uBC29\uBC95\uC744 \uBA85\uD655\uD788 \uBCFC \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uB354 \uB9CE\uC740 \uC815\uBCF4\uB97C \uC6D0\uD558\uC2DC\uBA74 \uACF5\uC2DD \uBB38\uC11C\uB97C \uBC29\uBB38\uD574\uBCF4\uC138\uC694.</p><p>\uB099\uAD00\uC801 \uC5C5\uB370\uC774\uD2B8</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),b=o(`<p>\uC0C1\uD0DC\uB97C \uB099\uAD00\uC801\uC73C\uB85C \uC5C5\uB370\uC774\uD2B8\uD55C \uD6C4 \uBCC0\uACBD \uC0AC\uD56D\uC744 \uC218\uD589\uD558\uAE30 \uC804\uC5D0 \uBBA4\uD14C\uC774\uC158\uC774 \uC2E4\uD328\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC774\uB7EC\uD55C \uC2E4\uD328 \uACBD\uC6B0 \uB300\uBD80\uBD84\uC5D0\uC11C \uB099\uAD00\uC801 \uCFFC\uB9AC\uB97C \uB418\uB3CC\uB9B4 \uC218 \uC788\uB294 \uC7AC\uC694\uCCAD\uB9CC\uC73C\uB85C \uBB38\uC81C\uB97C \uD574\uACB0\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uADF8\uB7EC\uB098 \uB54C\uB85C\uB294, \uC7AC\uC694\uCCAD\uC774 \uC81C\uB300\uB85C \uC791\uB3D9\uD558\uC9C0 \uC54A\uC544 \uBBA4\uD14C\uC774\uC158 \uC624\uB958\uAC00 \uC11C\uBC84 \uBB38\uC81C\uC640 \uAD00\uB828\uB41C \uACBD\uC6B0 \uB099\uAD00\uC801 \uC5C5\uB370\uC774\uD2B8\uB97C \uB418\uB3CC\uB9AC\uB294 \uAC83\uC774 \uB354 \uB098\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p>\uC544\uB798 \uC608\uC2DC\uB97C \uD655\uC778\uD574\uBCF4\uC138\uC694. \uC0AC\uC6A9\uC790\uAC00 \uCD94\uAC00 \uBC84\uD2BC\uC744 \uD074\uB9AD\uD558\uBA74 \uC989\uC2DC \uD56D\uBAA9\uC774 \uCD94\uAC00\uB418\uACE0, \uD574\uB2F9 \uC791\uC5C5\uC758 \uD504\uB85C\uBBF8\uC2A4\uAC00 \uC131\uACF5\uC801\uC73C\uB85C \uCC98\uB9AC\uB418\uC5C8\uB294\uC9C0 \uD655\uC778\uD55C \uD6C4 \uACC4\uC18D\uD574\uC11C \uCD94\uAC00\uB429\uB2C8\uB2E4. \uBC18\uBA74 \uD504\uB85C\uBBF8\uC2A4\uAC00 \uAC70\uBD80\uB418\uBA74 \uC694\uCCAD\uC774 \uBC18\uD658\uB41C \uD6C4 \uC790\uB3D9\uC73C\uB85C \uC0AC\uB77C\uC9D1\uB2C8\uB2E4. \uC774 \uAC15\uB825\uD55C \uAE30\uB2A5\uC774 \uC88B\uC740 \uC0AC\uC6A9\uC790 \uACBD\uD5D8\uC744 \uC81C\uACF5\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useMutation<span class="token punctuation">,</span> useQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@tanstack/react-query&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
type Todo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token literal-property property">task</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token literal-property property">todos</span><span class="token operator">:</span> Todo<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">task</span><span class="token operator">:</span> <span class="token string">&#39;\uC0AC\uACFC \uC0AC\uAE30&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">task</span><span class="token operator">:</span> <span class="token string">&#39;\uBC14\uB098\uB098 \uC0AC\uAE30&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">task</span><span class="token operator">:</span> <span class="token string">&#39;\uC624\uB80C\uC9C0 \uC0AC\uAE30&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">task</span><span class="token operator">:</span> <span class="token string">&#39;\uB538\uAE30 \uC0AC\uAE30&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> mutate<span class="token punctuation">,</span> isPending<span class="token punctuation">,</span> variables <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMutation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">mutationFn</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">newTodo</span><span class="token operator">:</span> Todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      todos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newTodo<span class="token punctuation">)</span><span class="token punctuation">;</span>
      index<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">queryKey</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;todos&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">queryFn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> todos
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>

    <span class="token operator">&lt;</span>div className<span class="token operator">=</span>&quot;flex items<span class="token operator">-</span>start justify<span class="token operator">-</span>start min<span class="token operator">-</span>h<span class="token operator">-</span>screen 
                      py<span class="token operator">-</span><span class="token number">2</span> mt<span class="token operator">-</span><span class="token number">20</span> px<span class="token operator">-</span><span class="token number">20</span> gap<span class="token operator">-</span><span class="token number">8</span>&quot;<span class="token operator">&gt;</span>

      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token function">mutate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> index<span class="token punctuation">,</span> <span class="token literal-property property">task</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\uC218\uBC15</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        className<span class="token operator">=</span><span class="token string">&quot;bg-purple-600 px-6 py-3 text-white&quot;</span><span class="token operator">&gt;</span>
        \uCD94\uAC00
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
        <span class="token punctuation">{</span>data<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">todo</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>todo<span class="token punctuation">.</span>task<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>

        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token punctuation">{</span>isPending <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>li className<span class="token operator">=</span><span class="token string">&quot;opacity-50 text-white&quot;</span><span class="token operator">&gt;</span>
          <span class="token punctuation">{</span>variables<span class="token punctuation">.</span>task<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uBB34\uD55C \uC2A4\uD06C\uB864\uB9C1\uACFC \uD398\uC774\uC9C0\uB124\uC774\uC158</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),g=l("p",null,"\uC704\uB294 React Query\uB97C \uC0AC\uC6A9\uD55C \uBB34\uD55C \uC2A4\uD06C\uB864 \uBC0F \uD398\uC774\uC9C0\uB124\uC774\uC158 \uC608\uC81C\uC785\uB2C8\uB2E4. \uACE7 \uAD00\uB828 \uBE14\uB85C\uADF8 \uAE00\uC744 \uC791\uC131\uD560 \uC608\uC815\uC774\uB2C8 \uD568\uAED8 \uC9C0\uCF1C\uBD10 \uC8FC\uC138\uC694.",-1);function y(f,w){return n(),c("div",null,[u,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),r,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),k,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),d,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),v,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),m,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),b,(n(),s(t("script"),null,{default:a(()=>[p(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),g])}var M=e(i,[["render",y],["__file","index.html.vue"]]);export{M as default};
