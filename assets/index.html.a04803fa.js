import{_ as c}from"./app.3052dcfb.js";import{l as s,m as l,E as t,G as p,p as a,Y as e,C as n,K as o}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";const i={},r=n("p",null,"\uB9AC\uC561\uD2B8\uC5D0\uC11C useQuery \uD6C5\uC740 \uB9AC\uC561\uD2B8 \uC790\uCCB4\uC5D0 \uB0B4\uC7A5\uB41C \uD6C5\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uB300\uC2E0\uC5D0 \uC77C\uBC18\uC801\uC73C\uB85C React Query\uC640 \uAC19\uC740 \uC0C1\uD0DC \uAD00\uB9AC \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC640 \uC5F0\uAD00\uB418\uC5B4 \uC0AC\uC6A9\uB429\uB2C8\uB2E4.",-1),u=n("p",null,"React Query\uB294 \uB9AC\uC561\uD2B8 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC5D0\uC11C \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30\uB97C \uAD00\uB9AC\uD558\uACE0 \uCE90\uC2DC\uD558\uBA70 \uB3D9\uAE30\uD654\uD558\uB294 \uB370 \uB3C4\uC6C0\uC774 \uB418\uB294 \uB77C\uC774\uBE0C\uB7EC\uB9AC\uC785\uB2C8\uB2E4.",-1),k=n("p",null,"\uB2E4\uC74C\uC740 React Query\uC640 useQuery \uD6C5\uC744 \uC0AC\uC6A9\uD558\uB294 \uC608\uC81C\uC785\uB2C8\uB2E4:",-1),d=n("h2",{id:"\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u1100\u1175-\u110C\u1165\u11AB\u110B\u1166-\u1111\u1173\u1105\u1169\u110C\u1166\u11A8\u1110\u1173\u110B\u1166-react-query\u1105\u1173\u11AF-\u1109\u1165\u11AF\u110E\u1175\u1112\u1162\u110B\u1163-\u1112\u1161\u11B8\u1102\u1175\u1103\u1161",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1109\u1161\u110B\u116D\u11BC\u1112\u1161\u1100\u1175-\u110C\u1165\u11AB\u110B\u1166-\u1111\u1173\u1105\u1169\u110C\u1166\u11A8\u1110\u1173\u110B\u1166-react-query\u1105\u1173\u11AF-\u1109\u1165\u11AF\u110E\u1175\u1112\u1162\u110B\u1163-\u1112\u1161\u11B8\u1102\u1175\u1103\u1161","aria-hidden":"true"},"#"),a(" \uC0AC\uC6A9\uD558\uAE30 \uC804\uC5D0 \uD504\uB85C\uC81D\uD2B8\uC5D0 React Query\uB97C \uC124\uCE58\uD574\uC57C \uD569\uB2C8\uB2E4:")],-1),v=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),m=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>npm install react<span class="token operator">-</span>query
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-query&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Prodcuts</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

    <span class="token keyword">const</span> apiUrl <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REACT_APP_API_URL</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">fetchProducts</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>apiUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> response<span class="token operator">?.</span>data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> isLoading<span class="token punctuation">,</span> error<span class="token punctuation">,</span> refetch <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span><span class="token string">&#39;productData&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fetchProducts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>isLoading<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>\uB85C\uB529 \uC911<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">&quot;error&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>error<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;container&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
                <span class="token punctuation">{</span>data<span class="token operator">?.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">product</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                <span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>product<span class="token operator">?.</span>id<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>product<span class="token operator">?.</span>title<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
                <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>refetch<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">&quot;btn btn-primary btn-md&quot;</span><span class="token operator">&gt;</span>\uC0C8\uB85C\uACE0\uCE68<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Prodcuts<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u110B\u1175-\u110B\u1168\u1109\u1175\u110B\u1166\u1109\u1165" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175-\u110B\u1168\u1109\u1175\u110B\u1166\u1109\u1165" aria-hidden="true">#</a> \uC774 \uC608\uC2DC\uC5D0\uC11C</h2><ul><li>useQuery\uB97C \uC0AC\uC6A9\uD558\uC5EC &#39;productData&#39; \uB77C\uB294 \uD0A4\uB85C \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uACE0 \uAD00\uB9AC\uD569\uB2C8\uB2E4.</li><li>fetchProducts \uD568\uC218\uB294 \uB370\uC774\uD130\uB97C \uAC00\uC838\uC624\uB294 \uC5ED\uD560\uC744 \uD569\uB2C8\uB2E4 (\uC6D0\uD558\uB294 \uB370\uC774\uD130 \uAC00\uC838\uC624\uAE30 \uB85C\uC9C1\uC73C\uB85C \uB300\uCCB4\uD574\uC57C \uD569\uB2C8\uB2E4).</li><li>\uC774 \uD6C5\uC740 \uB370\uC774\uD130, \uC5D0\uB7EC, \uB85C\uB529\uC911 \uC5EC\uBD80 \uC18D\uC131\uC744 \uAC00\uC9C4 \uAC1D\uCCB4\uB97C \uBC18\uD658\uD558\uBA70, \uB370\uC774\uD130 \uAC00\uC838\uC624\uB294 \uACFC\uC815\uC758 \uB2E4\uB978 \uC0C1\uD0DC\uB97C \uCC98\uB9AC\uD558\uB294 \uB370 \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</li><li>\uCEF4\uD3EC\uB10C\uD2B8\uB294 \uCFFC\uB9AC\uC758 \uC0C1\uD0DC\uC5D0 \uB530\uB77C \uB85C\uB529, \uC5D0\uB7EC \uB610\uB294 \uB370\uC774\uD130 \uCEE8\uD150\uCE20\uB97C \uB80C\uB354\uB9C1\uD569\uB2C8\uB2E4.</li><li>React Query\uB97C \uD504\uB85C\uC81D\uD2B8\uC5D0 \uC124\uCE58\uD55C \uD6C4 \uC0AC\uC6A9\uD558\uAE30 \uBC14\uB78D\uB2C8\uB2E4.\`\`\`</li></ul><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),b=o(`<h2 id="react-query\u110B\u1174-usequery-\u1112\u116E\u11A8\u110B\u1166\u1109\u1165-refetch\u1105\u1161\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1175\u11AB\u1100\u1161\u110B\u116D" tabindex="-1"><a class="header-anchor" href="#react-query\u110B\u1174-usequery-\u1112\u116E\u11A8\u110B\u1166\u1109\u1165-refetch\u1105\u1161\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1175\u11AB\u1100\u1161\u110B\u116D" aria-hidden="true">#</a> React Query\uC758 useQuery \uD6C5\uC5D0\uC11C refetch\uB780 \uBB34\uC5C7\uC778\uAC00\uC694?</h2><p>React Query\uC758 useQuery \uD6C5\uC5D0\uC11C, refetch \uD568\uC218\uB294 \uB370\uC774\uD130\uB97C \uC218\uB3D9\uC73C\uB85C \uB2E4\uC2DC \uBD88\uB7EC\uC62C \uC218 \uC788\uB294 \uAE30\uB2A5\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4. \uC774\uB294 \uD2B9\uD788 \uC0AC\uC6A9\uC790 \uC870\uCE58\uB098 \uC774\uBCA4\uD2B8\uB85C \uC778\uD574 \uB370\uC774\uD130\uB97C \uB2E4\uC2DC \uBD88\uB7EC\uC640\uC57C \uD560 \uB54C \uC720\uC6A9\uD569\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-query&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://api.example.com/data&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> data<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">MyComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> isLoading<span class="token punctuation">,</span> isError<span class="token punctuation">,</span> refetch <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useQuery</span><span class="token punctuation">(</span><span class="token string">&#39;myData&#39;</span><span class="token punctuation">,</span> fetchData<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleRefresh</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uB370\uC774\uD130\uB97C \uC218\uB3D9\uC73C\uB85C \uB2E4\uC2DC \uBD88\uB7EC\uC635\uB2C8\uB2E4</span>
    <span class="token function">refetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>isLoading<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>Loading<span class="token operator">...</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>isError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>Error fetching data<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Data<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleRefresh<span class="token punctuation">}</span><span class="token operator">&gt;</span>Refresh<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>pre<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>pre<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyComponent<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u110B\u1175-\u110B\u1168\u1109\u1175\u110B\u1166\u1109\u1165-1" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175-\u110B\u1168\u1109\u1175\u110B\u1166\u1109\u1165-1" aria-hidden="true">#</a> \uC774 \uC608\uC2DC\uC5D0\uC11C:</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),y=n("ul",null,[n("li",null,"refetch \uD568\uC218\uB294 useQuery \uD6C5\uC5D0\uC11C \uC5BB\uC5B4\uC9C0\uBA70, \uC218\uB3D9 \uB370\uC774\uD130 \uC7AC\uAC80\uC0C9\uC744 \uD2B8\uB9AC\uAC70\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4."),n("li",null,'\uC0AC\uC6A9\uC790\uAC00 "\uC0C8\uB85C\uACE0\uCE68" \uBC84\uD2BC\uC744 \uD074\uB9AD\uD588\uC744 \uB54C refetch\uB97C \uD638\uCD9C\uD558\uB294 handleRefresh \uD568\uC218\uAC00 \uC0DD\uC131\uB429\uB2C8\uB2E4.'),n("li",null,"refetch()\uB97C \uD638\uCD9C\uD558\uBA74 useQuery\uC5D0 \uC81C\uACF5\uB41C fetchData \uD568\uC218\uB97C \uB2E4\uC2DC \uC2E4\uD589\uD558\uC5EC \uB370\uC774\uD130\uB97C \uB2E4\uC2DC \uC18C\uC2A4\uC5D0\uC11C \uAC00\uC838\uC635\uB2C8\uB2E4.")],-1),g=n("p",null,"\uC774 \uC218\uB3D9 \uC7AC\uAC80\uC0C9 \uAE30\uB2A5\uC740 React Query\uC758 \uC790\uB3D9 \uC7AC\uAC80\uC0C9\uC5D0 \uC758\uC874\uD558\uC9C0 \uC54A\uACE0 \uC0AC\uC6A9\uC790\uC5D0\uAC8C \uB370\uC774\uD130\uB97C \uC0C8\uB85C \uACE0\uCE60 \uC218 \uC788\uB294 \uB2A5\uB825\uC744 \uC81C\uACF5\uD558\uACE0 \uC2F6\uC744 \uB54C \uC720\uC6A9\uD569\uB2C8\uB2E4.",-1);function h(f,w){return s(),l("div",null,[r,u,k,d,v,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),m,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),b,(s(),t(e("script"),null,{default:p(()=>[a(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),y,g])}var C=c(i,[["render",h],["__file","index.html.vue"]]);export{C as default};
