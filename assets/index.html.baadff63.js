import{_ as l}from"./app.d68f74da.js";import{j as u,l as a,m as r,E as t,G as p,p as n,Y as e,C as s,z as i,K as o}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";const k={},d=o('<h1 id="\u1103\u1161\u1105\u116E\u1102\u1173\u11AB-\u110C\u116E\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u1103\u1161\u1105\u116E\u1102\u1173\u11AB-\u110C\u116E\u110C\u1166" aria-hidden="true">#</a> \uB2E4\uB8E8\uB294 \uC8FC\uC81C:</h1><p>\uD504\uB860\uD2B8\uC5D4\uB4DC \uC778\uD130\uBDF0 \uC9C8\uBB38: \uB0B4 \uC720\uD29C\uBE0C \uCC44\uB110\uC744 \uAD6C\uB3C5\uD574\uC8FC\uC138\uC694: https://www.youtube.com/channel/UC-elmWUfbcbmvuhlS12nCtg</p><h1 id="stringify-myobject-\u110B\u1174-\u1111\u1169\u11AF\u1105\u1175\u1111\u1175\u11AF\u110B\u1173\u11AF-\u110C\u1161\u11A8\u1109\u1165\u11BC\u1112\u1161\u110B\u1167-myobject\u1105\u1173\u11AF-json-\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF\u1105\u1169-\u1107\u1167\u11AB\u1112\u116A\u11AB\u1112\u1161\u1109\u1175\u11B8\u1109\u1175\u110B\u1169" tabindex="-1"><a class="header-anchor" href="#stringify-myobject-\u110B\u1174-\u1111\u1169\u11AF\u1105\u1175\u1111\u1175\u11AF\u110B\u1173\u11AF-\u110C\u1161\u11A8\u1109\u1165\u11BC\u1112\u1161\u110B\u1167-myobject\u1105\u1173\u11AF-json-\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF\u1105\u1169-\u1107\u1167\u11AB\u1112\u116A\u11AB\u1112\u1161\u1109\u1175\u11B8\u1109\u1175\u110B\u1169" aria-hidden="true">#</a> stringify(myObject)\uC758 \uD3F4\uB9AC\uD544\uC744 \uC791\uC131\uD558\uC5EC myObject\uB97C JSON \uBB38\uC790\uC5F4\uB85C \uBCC0\uD658\uD558\uC2ED\uC2DC\uC624.</h1><p>\uD574\uACB0 \uBC29\uBC95:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),v=o(`<ul><li>\uAC12\uC774 null\uC778 \uACBD\uC6B0 \uBB38\uC790\uC5F4 &quot;null&quot;\uC744 \uBC18\uD658\uD569\uB2C8\uB2E4.</li><li>\uAC12\uC774 \uC22B\uC790 \uB610\uB294 \uBD80\uC6B8\uC778 \uACBD\uC6B0 \uBB38\uC790\uC5F4\uB85C \uBCC0\uD658\uD558\uC5EC \uBC18\uD658\uD569\uB2C8\uB2E4.</li><li>\uAC12\uC774 \uBB38\uC790\uC5F4\uC778 \uACBD\uC6B0 \uC774\uB97C \uC30D\uB530\uC634\uD45C\uB85C \uB458\uB7EC\uC2F8 \uBC18\uD658\uD569\uB2C8\uB2E4.</li><li>\uAC12\uC774 \uBC30\uC5F4\uC778 \uACBD\uC6B0 \uAC01 \uC694\uC18C\uC5D0 \uB300\uD574 \uC7AC\uADC0\uC801\uC73C\uB85C stringify\uB97C \uD638\uCD9C\uD558\uACE0 \uACB0\uACFC \uBB38\uC790\uC5F4\uC744 \uC27C\uD45C\uC640 \uD568\uAED8 \uACB0\uD569\uD558\uC5EC \uB300\uAD04\uD638\uB85C \uB458\uB7EC\uC2F8 \uBC18\uD658\uD569\uB2C8\uB2E4.</li><li>\uAC12\uC774 \uC21C\uC218\uD55C \uAC1D\uCCB4\uC778 \uACBD\uC6B0 (\uD568\uC218\uAC00 \uC544\uB2CC \uACBD\uC6B0 \uB4F1) \uAC01 \uAC12\uC744 \uC7AC\uADC0\uC801\uC73C\uB85C stringify\uB97C \uD638\uCD9C\uD558\uACE0 undefined \uBC0F \uD568\uC218 \uB4F1 \uC9C1\uB82C\uD654\uD560 \uC218 \uC5C6\uB294 \uAC12\uC744 \uBB34\uC2DC\uD558\uBA70 \uAC01 \uD0A4-\uAC12 \uC30D\uC744 \uC911\uAD04\uD638\uB85C \uB458\uB7EC\uC2F8 \uBB38\uC790\uC5F4\uC744 \uAD6C\uC131\uD569\uB2C8\uB2E4.</li></ul><p>\uC785\uB825:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \uC0AC\uC6A9 \uC608:</span>
<span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
    <span class="token literal-property property">isStudent</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hobbies</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;reading&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gaming&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hiking&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">details</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">hair</span><span class="token operator">:</span> <span class="token string">&quot;brown&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">165</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \uC9C1\uB82C\uD654\uD560 \uC218 \uC5C6\uB294 \uC18D\uC131(\uD568\uC218)\uC740 \uCD9C\uB825\uC5D0\uC11C \uBB34\uC2DC\uB429\uB2C8\uB2E4</span>
    <span class="token function-variable function">greet</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello, my name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uAD6C\uD604:</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),m=o(`<div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\`\`\`js
function stringify(value) {
    // \uB9CC\uC57D \uAC12\uC774 null\uC774\uBA74 &quot;null&quot; \uBB38\uC790\uC5F4\uC744 \uBC18\uD658\uD569\uB2C8\uB2E4
    if (value === null) {
        return &quot;null&quot;;
    }

<span class="token code keyword">    // \uAC12\uC774 \uC22B\uC790\uC774\uAC70\uB098 boolean\uC774\uBA74 \uBB38\uC790\uC5F4\uB85C \uBCC0\uD658\uD558\uC5EC \uBC18\uD658\uD569\uB2C8\uB2E4
    if (typeof value === &#39;number&#39; || typeof value === &#39;boolean&#39;) {
        return value.toString();
    }</span>

<span class="token code keyword">    // \uAC12\uC774 \uBB38\uC790\uC5F4\uC774\uBA74 \uC30D\uB530\uC634\uD45C\uB85C \uB458\uB7EC\uC2F8\uC778 \uBB38\uC790\uC5F4\uC744 \uBC18\uD658\uD569\uB2C8\uB2E4
    if (typeof value === &#39;string&#39;) {
        return \`&quot;\${value}&quot;\`;
    }</span>
    
<span class="token code keyword">    // \uAC12\uC774 \uBC30\uC5F4\uC774\uBA74 \uAC01 \uC694\uC18C\uC5D0 \uB300\uD574 \uC7AC\uADC0\uC801\uC73C\uB85C stringify\uB97C \uD638\uCD9C\uD558\uC5EC
    // \uACB0\uACFC \uBB38\uC790\uC5F4\uC744 \uCF64\uB9C8\uB85C \uC5F0\uACB0\uD558\uACE0 \uB300\uAD04\uD638\uB85C \uB458\uB7EC\uC2F8\uC5EC \uBC18\uD658\uD569\uB2C8\uB2E4
    if (Array.isArray(value)) {
        const arrayContents = value.map((element) =&gt; stringify(element)).join(&#39;,&#39;);
        return \`[\${arrayContents}]\`;
    }</span>
    
<span class="token code keyword">    // \uAC12\uC774 \uD568\uC218\uAC00 \uC544\uB2CC \uC77C\uBC18 \uAC1D\uCCB4\uC778 \uACBD\uC6B0, \uAC01 \uAC12\uC5D0 \uB300\uD574 \uC7AC\uADC0\uC801\uC73C\uB85C \uD638\uCD9C\uD558\uC5EC
    // \uC9C1\uB82C\uD654\uD560 \uC218 \uC5C6\uB294 \uAC12(\uC608: undefined \uBC0F \uD568\uC218)\uC740 \uBB34\uC2DC\uD558\uACE0 \uAC01 \uD0A4-\uAC12 \uC30D\uC744 \uC911\uAD04\uD638\uB85C \uB458\uB7EC\uC2F8\uC778 \uBB38\uC790\uC5F4\uB85C \uAD6C\uC131\uD569\uB2C8\uB2E4
    if (typeof value === &#39;object&#39;) {
        const keys = Object.keys(value);
        const keyValuePairStrings = keys.map((key) =&gt; {
            const valString = stringify(value[key]);
            if (valString === undefined || typeof value[key] === &#39;function&#39;) {
                // \uC9C1\uB82C\uD654\uD560 \uC218 \uC5C6\uB294 \uAC12\uC778 undefined \uBC0F \uD568\uC218\uB97C \uAC74\uB108\uB701\uB2C8\uB2E4 (\uC62C\uBC14\uB978 JSON\uC774 \uC544\uB2C8\uAE30 \uB54C\uBB38\uC5D0)
                return &#39;&#39;;
            }
            return \`&quot;\${key}&quot;:\${valString}\`;
        }).filter(Boolean); // \uC9C1\uB82C\uD654\uD560 \uC218 \uC5C6\uB294 \uAC12\uC5D0 \uC758\uD55C undefined \uAC12 \uC81C\uAC70
        return \`{\${keyValuePairStrings.join(&#39;,&#39;)}\`;
    }</span>
    
<span class="token code keyword">    // JSON\uC73C\uB85C \uC9C1\uB82C\uD654\uD560 \uC218 \uC5C6\uB294 \uB2E4\uB978 \uBAA8\uB4E0 \uD615\uC2DD(\uC608: undefined \uB610\uB294 \uD568\uC218)\uC758 \uACBD\uC6B0,
    // \uAC1D\uCCB4 \uCF00\uC774\uC2A4\uC5D0\uC11C \uD544\uD130\uB9C1\uB418\uC5B4 \uBC18\uD658\uB420 \uAC83\uC785\uB2C8\uB2E4
    return undefined;</span>
}


console.log(stringify(myObject)); // myObject\uC758 JSON \uBB38\uC790\uC5F4 \uD45C\uD604\uC744 \uCD9C\uB825\uD569\uB2C8\uB2E4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="parse-\u110B\u1174-\u1111\u1169\u11AF\u1105\u1175\u1111\u1175\u11AF-\u110C\u1161\u11A8\u1109\u1165\u11BC-json-\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF\u110B\u1173\u11AF-\u110C\u1161\u1107\u1161\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173-\u1100\u1162\u11A8\u110E\u1166\u1105\u1169-\u1107\u1167\u11AB\u1112\u116A\u11AB\u1112\u1161\u1102\u1173\u11AB-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#parse-\u110B\u1174-\u1111\u1169\u11AF\u1105\u1175\u1111\u1175\u11AF-\u110C\u1161\u11A8\u1109\u1165\u11BC-json-\u1106\u116E\u11AB\u110C\u1161\u110B\u1167\u11AF\u110B\u1173\u11AF-\u110C\u1161\u1107\u1161\u1109\u1173\u110F\u1173\u1105\u1175\u11B8\u1110\u1173-\u1100\u1162\u11A8\u110E\u1166\u1105\u1169-\u1107\u1167\u11AB\u1112\u116A\u11AB\u1112\u1161\u1102\u1173\u11AB-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> parse()\uC758 \uD3F4\uB9AC\uD544 \uC791\uC131 - JSON \uBB38\uC790\uC5F4\uC744 \uC790\uBC14\uC2A4\uD06C\uB9BD\uD2B8 \uAC1D\uCCB4\uB85C \uBCC0\uD658\uD558\uB294 \uD568\uC218</h1><p>\uC785\uB825:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> jsonString <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;:&quot;Alice&quot;,&quot;age&quot;:30,&quot;isStudent&quot;:false}&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),b=o(`<p>\uAD6C\uD604:</p><p>\uC774 \uC608\uC2DC\uB294 eval\uC744 \uC0AC\uC6A9\uD558\uB294\uB370, \uC774 \uD568\uC218\uB294 \uC784\uC758\uC758 JavaScript \uCF54\uB4DC\uB97C \uC2E4\uD589\uC2DC\uD0AC \uC218 \uC788\uB294 \uC704\uD5D8\uD55C \uD568\uC218\uC785\uB2C8\uB2E4. JSON\uC744 \uAD6C\uBB38 \uBD84\uC11D\uD558\uAE30 \uC704\uD574 eval\uC744 \uC0AC\uC6A9\uD558\uB294 \uAC83\uC740 \uC88B\uC740 \uC0DD\uAC01\uC774 \uC544\uB2D9\uB2C8\uB2E4. JSON \uBB38\uC790\uC5F4\uC774 \uC81C\uB300\uB85C \uC0B4\uADE0\uB418\uC9C0 \uC54A\uC73C\uBA74 \uCF54\uB4DC \uC8FC\uC785 \uACF5\uACA9\uC744 \uCD08\uB798\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token parameter">jsonString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC785\uB825\uC774 \uBB38\uC790\uC5F4\uC778\uC9C0 \uD655\uC778\uD558\uAE30 \uC704\uD55C \uAC04\uB2E8\uD55C \uCCB4\uD06C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> jsonString <span class="token operator">!==</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\uC785\uB825\uAC12\uC740 \uBB38\uC790\uC5F4\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// eval\uC744 \uC0AC\uC6A9\uD55C \uAE30\uBCF8 \uAD6C\uD604\uC740 \uC548\uC804\uD558\uC9C0 \uC54A\uC73C\uBA70 \uAD8C\uC7A5\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4</span>
    <span class="token comment">// \uC2E4\uC81C \uC2DC\uB098\uB9AC\uC624\uC5D0\uC11C\uB294 \uBCF4\uC548 \uBB38\uC81C\uB97C \uD53C\uD558\uAE30 \uC704\uD574 \uC801\uC808\uD55C \uAD6C\uBB38 \uBD84\uC11D \uAE30\uC220\uC744 \uC0AC\uC6A9\uD574\uC57C \uD569\uB2C8\uB2E4</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;(&#39;</span> <span class="token operator">+</span> jsonString <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> json<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SyntaxError</span><span class="token punctuation">(</span><span class="token string">&#39;\uBB38\uC790\uC5F4\uC744 JSON\uC73C\uB85C \uAD6C\uBB38 \uBD84\uC11D\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC0AC\uC6A9 \uC608\uC2DC:</span>
<span class="token keyword">var</span> jsonString <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;:&quot;Alice&quot;,&quot;age&quot;:30,&quot;isStudent&quot;:false}&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> parsedObject <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// JSON \uBB38\uC790\uC5F4\uC5D0\uC11C \uAD6C\uBB38 \uBD84\uC11D\uB41C \uAC1C\uCCB4\uB97C \uCD9C\uB825</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uAD6C\uBB38 \uBD84\uC11D \uC624\uB958 \uCC98\uB9AC</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>OR</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),y=o(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token parameter">jsonString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uD604\uC7AC \uBB38\uC790 \uC778\uB371\uC2A4</span>
  <span class="token keyword">let</span> at <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment">// \uD604\uC7AC \uBB38\uC790</span>
  <span class="token keyword">let</span> ch <span class="token operator">=</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">;</span>

  <span class="token comment">// \uC785\uB825 \uBB38\uC790\uC5F4\uC5D0\uC11C \uB2E4\uC74C \uBB38\uC790\uB85C \uC774\uB3D9\uD558\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">next</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">=</span> jsonString<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>at<span class="token punctuation">)</span><span class="token punctuation">;</span>
    at <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ch<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \uC22B\uC790 \uAC12\uC744 \uAD6C\uBB38 \uBD84\uC11D\uD558\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">number</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> string <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      string <span class="token operator">=</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">;</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&gt;=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&lt;=</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      string <span class="token operator">+=</span> ch<span class="token punctuation">;</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      string <span class="token operator">+=</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&gt;=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&lt;=</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        string <span class="token operator">+=</span> ch<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \uBB38\uC790\uC5F4 \uAC12 \uAD6C\uBB38 \uBD84\uC11D\uD558\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">string</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> string <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> string<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        string <span class="token operator">+=</span> ch<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SyntaxError</span><span class="token punctuation">(</span><span class="token string">&quot;\uC798\uBABB\uB41C \uBB38\uC790\uC5F4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// JSON \uAC12 \uAD6C\uBB38 \uBD84\uC11D\uD558\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">value</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;{&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token function">object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;[&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;&quot;&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;-&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">return</span> ch <span class="token operator">&gt;=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&lt;=</span> <span class="token string">&#39;9&#39;</span> <span class="token operator">?</span> <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">word</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \uC785\uB825 \uBB38\uC790\uC5F4\uC5D0\uC11C \uACF5\uBC31\uC744 \uAC74\uB108\uB6F0\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">white</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&lt;=</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// true, false, null\uACFC \uAC19\uC740 \uB9AC\uD130\uB7F4\uC744 \uAD6C\uBB38 \uBD84\uC11D\uD558\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">word</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token string">&#39;t&#39;</span><span class="token operator">:</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;f&#39;</span><span class="token operator">:</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;n&#39;</span><span class="token operator">:</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SyntaxError</span><span class="token punctuation">(</span><span class="token string">&quot;\uC608\uAE30\uCE58 \uC54A\uC740 &#39;&quot;</span> <span class="token operator">+</span> ch <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \uBC30\uC5F4\uC744 \uAD6C\uBB38 \uBD84\uC11D\uD558\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">array</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;[&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> array<span class="token punctuation">;</span> <span class="token comment">// \uBE48 \uBC30\uC5F4</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> array<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SyntaxError</span><span class="token punctuation">(</span><span class="token string">&quot;\uC798\uBABB\uB41C \uBC30\uC5F4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \uAC1D\uCCB4\uB97C \uAD6C\uBB38 \uBD84\uC11D\uD558\uB294 \uD568\uC218</span>
  <span class="token keyword">const</span> <span class="token function-variable function">object</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;{&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> obj<span class="token punctuation">;</span> <span class="token comment">// \uBE48 \uAC1D\uCCB4</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">!==</span> <span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SyntaxError</span><span class="token punctuation">(</span><span class="token string">&quot;\uC798\uBABB\uB41C \uAC1D\uCCB4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">===</span> <span class="token string">&#39;}&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SyntaxError</span><span class="token punctuation">(</span><span class="token string">&quot;\uC798\uBABB\uB41C \uAC1D\uCCB4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \uCD08\uAE30 \uAC12\uC744 \uAD6C\uBB38 \uBD84\uC11D\uD55C \uD6C4 \uB0A8\uC740 \uBB38\uC790\uB97C \uD655\uC778\uD558\uC5EC \uAD6C\uBB38 \uBD84\uC11D \uC2DC\uC791</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">white</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SyntaxError</span><span class="token punctuation">(</span><span class="token string">&quot;\uAD6C\uBB38 \uC624\uB958&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \uAD6C\uBB38 \uBD84\uC11D \uACB0\uACFC\uB97C \uBC18\uD658</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC0AC\uC6A9 \uC608\uC2DC:</span>
<span class="token keyword">var</span> jsonString <span class="token operator">=</span> <span class="token string">&#39;{&quot;name&quot;:&quot;Alice&quot;,&quot;age&quot;:30,&quot;isStudent&quot;:false}&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> parsedObject <span class="token operator">=</span> <span class="token function">parse</span><span class="token punctuation">(</span>jsonString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// JSON \uBB38\uC790\uC5F4\uC5D0\uC11C \uAD6C\uBB38 \uBD84\uC11D\uB41C \uAC1D\uCCB4 \uCD9C\uB825</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uAD6C\uBB38 \uBD84\uC11D \uC624\uB958 \uCC98\uB9AC</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>YouTube \uCC44\uB110 \uAD6C\uB3C5\uD574\uC8FC\uC154\uC11C \uAC10\uC0AC\uD569\uB2C8\uB2E4: FrontEnd Interview Preparation: https://www.youtube.com/channel/UC-elmWUfbcbmvuhlS12nCtg</p><h1 id="\u110B\u1175\u11B0\u110B\u1165\u110C\u116E\u1109\u1167\u1109\u1165-\u1100\u1161\u11B7\u1109\u1161\u1112\u1161\u11B8\u1102\u1175\u1103\u1161" tabindex="-1"><a class="header-anchor" href="#\u110B\u1175\u11B0\u110B\u1165\u110C\u116E\u1109\u1167\u1109\u1165-\u1100\u1161\u11B7\u1109\u1161\u1112\u1161\u11B8\u1102\u1175\u1103\u1161" aria-hidden="true">#</a> \uC77D\uC5B4\uC8FC\uC154\uC11C \uAC10\uC0AC\uD569\uB2C8\uB2E4</h1><ul><li>\uC7A5\uAE30 \uBA58\uD1A0\uC2ED\uC744 \uC704\uD574 Preplaced.com\uC5D0\uC11C \uC5F0\uB77D\uD574\uC694!</li></ul><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),w=s("strong",null,"\uBB34\uB8CC \uCCB4\uD5D8 \uC218\uC5C5 \uC608\uC57D\uD558\uAE30!",-1),f={href:"https://www.preplaced.in/profile/sonika-maheshwari",target:"_blank",rel:"noopener noreferrer"},g={href:"https://sonikamaheshwari067.medium.com/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.linkedin.com/in/sonika-maheshwari-81542220/",target:"_blank",rel:"noopener noreferrer"},q=s("p",null,"\uD56D\uC0C1 \uAC1C\uC120\uD560 \uC810\uC774 \uC788\uB2E4\uB294 \uAC83\uC744 \uC54C\uACE0 \uC788\uC5B4\uC694. \uC758\uACAC\uC744 \uC790\uC720\uB86D\uAC8C \uACF5\uC720\uD574\uC8FC\uC138\uC694.",-1);function j(x,S){const c=u("ExternalLinkIcon");return a(),r("div",null,[d,(a(),t(e("script"),null,{default:p(()=>[n(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),v,(a(),t(e("script"),null,{default:p(()=>[n(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),m,(a(),t(e("script"),null,{default:p(()=>[n(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),b,(a(),t(e("script"),null,{default:p(()=>[n(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),y,(a(),t(e("script"),null,{default:p(()=>[n(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),s("p",null,[w,n(" \u2014 "),s("a",f,[n("\uC5EC\uAE30\uB97C \uD074\uB9AD\uD558\uC138\uC694"),i(c)])]),s("p",null,[n("\u{1F4F0} \uCF54\uB529 \uBC0F \uB514\uC790\uC778 \uB77C\uC6B4\uB4DC \uBA74\uC811\uC5D0 \uB300\uD55C \uB354 \uB9CE\uC740 \uCF58\uD150\uCE20 \uBCF4\uAE30 - "),s("a",g,[n("\uC5EC\uAE30\uB97C \uD074\uB9AD\uD558\uC138\uC694"),i(c)])]),s("p",null,[n("\u{1F514} \uD314\uB85C\uC6B0\uD558\uAE30: LinkedIn! \u2014 "),s("a",h,[n("\uC5EC\uAE30\uB97C \uD074\uB9AD\uD558\uC138\uC694"),i(c)])]),q])}var A=l(k,[["render",j],["__file","index.html.vue"]]);export{A as default};
