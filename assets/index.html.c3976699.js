import{_ as i}from"./app.3052dcfb.js";import{j as u,l as a,m as r,C as n,p as s,z as c,E as t,G as p,Y as o,K as e}from"./@vue.46e0ff50.js";import"./ts-debounce.471e9b22.js";import"./vue-router.66b7519d.js";import"./medium-zoom.0cdb07e4.js";import"./@vueuse.f471c5d7.js";var k="/assets/SnowflakeMeansBusinessIntegratingCortexAIModelsinReactwithHono_0.ab3aa115.png";const d={},v=n("p",null,"Snowflake Cortex\uB294 Snowflake\uC758 AI\uC5D0 \uB300\uD55C \uD070 \uAE30\uBC18\uC73C\uB85C, \uC751\uC6A9 \uD504\uB85C\uADF8\uB7A8\uC5D0 \uD1B5\uD569\uD560 \uC218 \uC788\uB294 \uB2E4\uC591\uD55C LLM \uBAA8\uB378 \uBC0F \uAE30\uB2A5\uC744 \uC81C\uACF5\uD558\uC5EC \uC0C8\uB85C\uC6B4 \uAC00\uB2A5\uC131\uC744 \uD0D0\uD5D8\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.",-1),m=n("p",null,[n("img",{src:k,alt:"Snowflake Cortex"})],-1),b=n("p",null,"\uC774 \uD29C\uD1A0\uB9AC\uC5BC\uC5D0\uC11C\uB294 Snowflake Cortex \uAE30\uB2A5\uACFC \uBAA8\uB378\uC744 React \uD504\uB860\uD2B8\uC5D4\uB4DC\uC5D0\uC11C Hono\uC640 \uD568\uAED8 \uC0AC\uC6A9\uD558\uB294 \uBC29\uBC95\uC744 \uC0B4\uD3B4\uBCF4\uACA0\uC2B5\uB2C8\uB2E4.",-1),g={href:"https://ohno-1sq.pages.dev",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),f=e('<p>\uADF8\uB9AC\uACE0 \uCF54\uB4DC\uB294 https://github.com/kaarthik108/ohno</p><h2 id="hono\u1105\u1161\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1175\u11AB\u1100\u1161\u110B\u116D" tabindex="-1"><a class="header-anchor" href="#hono\u1105\u1161\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1175\u11AB\u1100\u1161\u110B\u116D" aria-hidden="true">#</a> hono\uB780 \uBB34\uC5C7\uC778\uAC00\uC694?</h2><p>HonoX\uB294 \uC804\uCCB4 \uC2A4\uD0DD \uC6F9 \uC0AC\uC774\uD2B8 \uB610\uB294 \uC6F9 API\uB97C \uB9CC\uB4DC\uB294 \uB370 \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uAC04\uB2E8\uD558\uACE0 \uBE60\uB978 \uBA54\uD0C0 \uD504\uB808\uC784\uC6CC\uD06C\uC785\uB2C8\uB2E4. \uC774\uB97C \uD1B5\uD574 \uBC31\uC5D4\uB4DC API\uB97C \uB9CC\uB4E4\uACE0 \uD504\uB7F0\uD2B8\uC5D4\uB4DC \uC751\uC6A9 \uD504\uB85C\uADF8\uB7A8\uACFC \uC5F0\uACB0\uD558\uB294 \uACFC\uC815\uC744 \uAC04\uC18C\uD654\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><h2 id="\u110B\u116B-snowflake-cortex\u1105\u1173\u11AF-\u1109\u1165\u11AB\u1110\u1162\u11A8\u1112\u1162\u110B\u1163-\u1112\u1161\u1102\u1161\u110B\u116D" tabindex="-1"><a class="header-anchor" href="#\u110B\u116B-snowflake-cortex\u1105\u1173\u11AF-\u1109\u1165\u11AB\u1110\u1162\u11A8\u1112\u1162\u110B\u1163-\u1112\u1161\u1102\u1161\u110B\u116D" aria-hidden="true">#</a> \uC65C snowflake Cortex\uB97C \uC120\uD0DD\uD574\uC57C \uD558\uB098\uC694?</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),h=n("p",null,"Snowflake Cortex\uB294 \uAE30\uC874 \uB370\uC774\uD130 \uC6E8\uC5B4\uD558\uC6B0\uC2A4 \uB0B4\uC5D0\uC11C \uC5B8\uC5B4 \uBAA8\uB378\uC744 \uD65C\uC6A9\uD560 \uC218 \uC788\uB294 \uC548\uC804\uD558\uACE0 \uC6D0\uD65C\uD55C \uBC29\uBC95\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4. Snowflake Cortex \uAE30\uB2A5\uC740 Snowflake \uD658\uACBD \uB0B4\uC5D0\uC11C \uC9C1\uC811 \uC2E4\uD589\uB418\uBBC0\uB85C \uCD94\uAC00 \uC778\uD504\uB77C\uB97C \uAD00\uB9AC\uD560 \uD544\uC694\uAC00 \uC5C6\uC73C\uBA70, \uC11C\uBC84\uB9AC\uC2A4 \uBC0F \uAC1C\uC778 \uC815\uBCF4 \uBCF4\uD638\uC5D0 \uCD08\uC810\uC744 \uB9DE\uCD98 \uC194\uB8E8\uC158\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4.",-1),w=n("h2",{id:"\u110B\u1169\u1102\u1173\u11AF\u110B\u1173\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1173\u11AF-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1101\u1161\u110B\u116D",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u110B\u1169\u1102\u1173\u11AF\u110B\u1173\u11AB-\u1106\u116E\u110B\u1165\u11BA\u110B\u1173\u11AF-\u1106\u1161\u11AB\u1103\u1173\u11AF\u1101\u1161\u110B\u116D","aria-hidden":"true"},"#"),s(" \uC624\uB298\uC740 \uBB34\uC5C7\uC744 \uB9CC\uB4E4\uAE4C\uC694 ?")],-1),_=n("p",null,"\uC6B0\uB9AC\uB294 chatgpt\uC640 \uBE44\uC2B7\uD55C \uAC04\uB2E8\uD55C AI \uCC57\uBD07\uC744 \uAD6C\uCD95\uD560 \uAC83\uC774\uBA70, \uC774\uB97C \uC704\uD574 snowflake\uC758 Cortex\uC5D0\uC11C AI \uBAA8\uB378\uC744 \uC0AC\uC6A9\uD560 \uC608\uC815\uC785\uB2C8\uB2E4.",-1),q=n("p",null,"\uBC31\uC5D4\uB4DC API\uB97C \uC124\uC815\uD558\uACE0 \uC774\uB97C localhost\uC5D0 \uBC30\uD3EC\uD558\uB294 \uBC29\uBC95\uC744 \uC0B4\uD3B4\uBCFC \uAC83\uC785\uB2C8\uB2E4 \u{1F61C} (\uB9DE\uC544, \uC81C\uB300\uB85C \uC77D\uC73C\uC168\uC5B4\uC694).",-1),x=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),S=e('<p>\uADF8\uB9AC\uACE0 \uC774\uC81C \uC6B0\uB9AC\uB294 \uBC31\uC5D4\uB4DC\uC5D0\uC11C \uACB0\uACFC\uB97C \uAC00\uC838\uC640 \uD45C\uC2DC\uD558\uAE30 \uC704\uD55C \uD504\uB860\uD2B8\uC5D4\uB4DC \uCC44\uD305 \uC778\uD130\uD398\uC774\uC2A4\uB97C \uB9CC\uB4E4 \uAC83\uC785\uB2C8\uB2E4.</p><p>\uAE30\uC220 \uC2A4\uD0DD:</p><ul><li>React\uB97C \uC0AC\uC6A9\uD55C Honox</li><li>Shadcn-ui\uC640 Tailwind CSS</li><li>Mixtral 8x7B Snowflake Cortex</li><li>\uD638\uC2A4\uD305\uC740 Cloudflare Pages</li><li>\uC120\uD0DD \uC0AC\uD56D\uC73C\uB85C Cloudflare Tunnel \uB610\uB294 AWS Lambda</li></ul><h2 id="\u1107\u1162\u11A8\u110B\u1166\u11AB\u1103\u1173-api-\u1109\u1165\u11AF\u110C\u1165\u11BC\u1112\u1161\u1100\u1175" tabindex="-1"><a class="header-anchor" href="#\u1107\u1162\u11A8\u110B\u1166\u11AB\u1103\u1173-api-\u1109\u1165\u11AF\u110C\u1165\u11BC\u1112\u1161\u1100\u1175" aria-hidden="true">#</a> \uBC31\uC5D4\uB4DC API \uC124\uC815\uD558\uAE30</h2><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>',5),C=e(`<p>\uC6B0\uB9AC API\uB294 \uC778\uC99D\uC744 \uCC98\uB9AC\uD558\uACE0 Snowflake \uC5F0\uACB0\uC744 \uC124\uC815\uD558\uBA70 \uCFFC\uB9AC\uB97C \uC2E4\uD589\uD560 \uAC83\uC785\uB2C8\uB2E4. Cortex \uD50C\uB7AB\uD3FC\uACFC \uC0C1\uD638 \uC791\uC6A9\uD558\uAE30 \uC704\uD574 Snowflake Node.js SDK\uB97C \uC0AC\uC6A9\uD560 \uAC83\uC785\uB2C8\uB2E4.</p><ul><li>hono\uB97C \uC0AC\uC6A9\uD558\uC5EC \uB77C\uC6B0\uD2B8\uB97C \uB9CC\uB4E4\uACE0 \uC694\uCCAD \uBCF8\uBB38\uC744 \uAD6C\uBB38 \uBD84\uC11D\uD558\uC2ED\uC2DC\uC624</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">--</span> api<span class="token operator">/</span>snow<span class="token punctuation">.</span>ts
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">POST</span> <span class="token operator">=</span> <span class="token function">createRoute</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> requestBody <span class="token operator">=</span> <span class="token keyword">await</span> c<span class="token punctuation">.</span>req<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>npm\uC744 \uD1B5\uD574 snowflake-sdk\uB97C \uC124\uCE58\uD55C \uB2E4\uC74C \uC544\uB798 \uCF54\uB4DC\uB97C \uC0AC\uC6A9\uD558\uC5EC \uC5F0\uACB0\uC744 \uB9CC\uB4DC\uC2ED\uC2DC\uC624. wrangler.toml \uB610\uB294 .env.local\uC5D0 env\uB97C \uCD94\uAC00\uD574\uC57C \uD569\uB2C8\uB2E4 (\uB2E4\uB978 \uC704\uCE58\uC5D0 \uBC30\uD3EC\uD558\uB294 \uACBD\uC6B0)</li></ol><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),j=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">--</span> snowflake \uC5F0\uACB0 \uC0DD\uC131
<span class="token keyword">import</span> snowflake <span class="token keyword">from</span> <span class="token string">&quot;snowflake-sdk&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">POST</span> <span class="token operator">=</span> <span class="token function">createRoute</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> requestBody <span class="token operator">=</span> <span class="token keyword">await</span> c<span class="token punctuation">.</span>req<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> config <span class="token operator">=</span> env<span class="token operator">&lt;</span><span class="token punctuation">{</span>
    <span class="token constant">ACCOUNT</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token constant">USER_NAME</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token constant">PASSWORD</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token constant">ROLE</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token constant">WAREHOUSE</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token constant">DATABASE</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
    <span class="token constant">SCHEMA</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">const</span> snowConnect <span class="token operator">=</span> snowflake<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">account</span><span class="token operator">:</span> config<span class="token punctuation">.</span><span class="token constant">ACCOUNT</span><span class="token punctuation">,</span>
    <span class="token literal-property property">username</span><span class="token operator">:</span> config<span class="token punctuation">.</span><span class="token constant">USER_NAME</span><span class="token punctuation">,</span>
    <span class="token literal-property property">password</span><span class="token operator">:</span> config<span class="token punctuation">.</span><span class="token constant">PASSWORD</span><span class="token punctuation">,</span>
    <span class="token literal-property property">role</span><span class="token operator">:</span> config<span class="token punctuation">.</span><span class="token constant">ROLE</span><span class="token punctuation">,</span>
    <span class="token literal-property property">warehouse</span><span class="token operator">:</span> config<span class="token punctuation">.</span><span class="token constant">WAREHOUSE</span><span class="token punctuation">,</span>
    <span class="token literal-property property">database</span><span class="token operator">:</span> config<span class="token punctuation">.</span><span class="token constant">DATABASE</span><span class="token punctuation">,</span>
    <span class="token literal-property property">schema</span><span class="token operator">:</span> config<span class="token punctuation">.</span><span class="token constant">SCHEMA</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  snowflake<span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">ocspFailOpen</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>SQL \uCFFC\uB9AC(\uCFFC\uB9AC)\uB97C \uC2E4\uD589\uD558\uACE0 \uACB0\uACFC\uB97C Promise\uB97C \uC0AC\uC6A9\uD558\uC5EC \uAE30\uB2E4\uB9BD\uB2C8\uB2E4. \uCFFC\uB9AC \uC2E4\uD589\uC5D0 \uC131\uACF5\uD558\uBA74 \uBC18\uD658\uB41C \uD589\uACFC \uD568\uAED8 Promise\uB97C \uD574\uACB0\uD558\uACE0, \uADF8\uB807\uC9C0 \uC54A\uC73C\uBA74 \uC624\uB958\uC640 \uD568\uAED8 Promise\uB97C \uAC70\uBD80\uD569\uB2C8\uB2E4.</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span>any<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      snowConnect<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> conn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\uC5F0\uACB0\uD560 \uC218 \uC5C6\uC74C: &quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          snowConnect<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">sqlText</span><span class="token operator">:</span> query<span class="token punctuation">,</span>
            <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stmt<span class="token punctuation">,</span> rows</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>
                  <span class="token string">&quot;\uB2E4\uC74C \uC624\uB958\uB85C \uC778\uD574 \uBA85\uB839\uBB38 \uC2E4\uD589\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4: &quot;</span> <span class="token operator">+</span>
                    err<span class="token punctuation">.</span>message
                <span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">resolve</span><span class="token punctuation">(</span>rows <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uC774\uC81C AWS Lambda \uB610\uB294 Vercel\uACFC \uAC19\uC740 nodejs \uB7F0\uD0C0\uC784\uC5D0\uC11C \uBC30\uD3EC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),A=n("p",null,"\uD558\uC9C0\uB9CC \uC5EC\uAE30\uC11C\uB294 \uAC04\uB2E8\uD568\uC744 \uC704\uD574 \uB85C\uCEEC\uD638\uC2A4\uD2B8\uC5D0 \uBC30\uD3EC\uD558\uACE0 \uD074\uB77C\uC6B0\uB4DC\uD50C\uB808\uC5B4 \uD130\uB110\uC744 \uC0AC\uC6A9\uD558\uC5EC \uC778\uD130\uB137\uC5D0 \uB178\uCD9C\uC2DC\uD0AC \uAC83\uC785\uB2C8\uB2E4 (\uC77C\uBD80 \uCC28\uAC00\uC6B4 \uC2DC\uC791\uC744 \uC904\uC774\uAE30 \uC704\uD574\uC11C)",-1),M=n("p",null,"\uB450 \uAC00\uC9C0 \uAC04\uB2E8\uD55C \uB2E8\uACC4:",-1),E=n("ul",null,[n("li",null,"\uD074\uB77C\uC6B0\uB4DC\uD50C\uB808\uC5B4\uC5D0 \uB3C4\uBA54\uC778\uC774 \uC788\uB294\uC9C0 \uD655\uC778\uD558\uC138\uC694 \u2014 \uC81C\uB85C \uD2B8\uB7EC\uC2A4\uD2B8 \uC139\uC158\uC73C\uB85C \uC774\uB3D9\uD558\uC5EC \uD130\uB110\uC744 \uD074\uB9AD\uD558\uACE0 \uB3C4\uBA54\uC778\uC744 \uC0AC\uC6A9\uD558\uC5EC \uD130\uB110\uC744 \uC0DD\uC131\uD558\uACE0 \uD654\uBA74\uC5D0 \uB098\uD0C0\uB098\uB294 \uB2E8\uACC4\uB97C \uB530\uB77C \uB85C\uCEEC \uBA38\uC2E0\uC5D0 \uD130\uB110\uC744 \uC124\uCE58\uD558\uC138\uC694."),n("li",null,'\uB3C4\uBA54\uC778\uC744 \uB85C\uCEEC \uC11C\uBE44\uC2A4\uB85C \uC9C0\uC815\uD558\uC138\uC694 \u2014 "http://localhost:5100"')],-1),L=n("p",null,"\uC774\uC81C \uC5EC\uB7EC\uBD84\uC774 API\uB97C \uD638\uC2A4\uD305\uD588\uACE0(\uB124, \uD638\uC2A4\uD305\uD588\uC9C0\uB9CC \uD638\uC2A4\uD305\uD558\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4) \uC900\uBE44\uAC00 \uB05D\uB0AC\uC2B5\uB2C8\uB2E4 \u{1F680}",-1),R=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),I=n("p",null,"\uAC70\uC758 \uB2E4 \uC654\uC5B4\uC694. \uBC31\uC5D4\uB4DC\uB294 \uC900\uBE44\uB410\uC5B4\uC694.",-1),N=n("h2",{id:"\u110B\u1175\u110C\u1166-\u1111\u1173\u1105\u1169\u11AB\u1110\u1173\u110B\u1166\u11AB\u1103\u1173\u1105\u1173\u11AF-\u1106\u1161\u11AB\u1103\u1173\u11AF\u110B\u1165\u110B\u116D",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u110B\u1175\u110C\u1166-\u1111\u1173\u1105\u1169\u11AB\u1110\u1173\u110B\u1166\u11AB\u1103\u1173\u1105\u1173\u11AF-\u1106\u1161\u11AB\u1103\u1173\u11AF\u110B\u1165\u110B\u116D","aria-hidden":"true"},"#"),s(" \uC774\uC81C \uD504\uB860\uD2B8\uC5D4\uB4DC\uB97C \uB9CC\uB4E4\uC5B4\uC694")],-1),P=n("p",null,"\uD504\uB860\uD2B8\uC5D4\uB4DC\uC5D0\uC11C\uB294 React\uC640 Hono\uB97C \uC0AC\uC6A9\uD574\uC11C Snowflake Cortex \uBAA8\uB378\uACFC \uC0C1\uD638\uC791\uC6A9\uD558\uB294 \uCC44\uD305 \uC778\uD130\uD398\uC774\uC2A4\uB97C \uB9CC\uB4E4 \uAC70\uC5D0\uC694. \uD074\uB77C\uC774\uC5B8\uD2B8 \uCE21 \uC124\uC815\uC744 \uB9CC\uB4E4\uC5B4 \uBC31\uC5D4\uB4DC API\uB85C \uCFFC\uB9AC\uB97C \uBCF4\uB0B4\uACE0 \uC751\uB2F5\uC744 \uCC98\uB9AC\uD560 \uAC70\uC5D0\uC694.",-1),T=n("p",null,"\uB2E4\uC74C\uC740 \uBC31\uC5D4\uB4DC API\uB85C \uCFFC\uB9AC\uB97C \uBCF4\uB0B4\uB294 \uBC29\uBC95\uC744 \uBCF4\uC5EC\uC8FC\uB294 \uCF54\uB4DC \uC870\uAC01\uC774\uC5D0\uC694:",-1),O=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),B=e(`<ul><li>API\uC5D0\uC11C \uACB0\uACFC\uB97C \uAC00\uC838 \uC624\uB294 \uB3C4\uC6B0\uBBF8 \uD568\uC218\uB97C \uB9CC\uB4E4\uC5B4 \uBCF4\uC138\uC694.</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">executeSnowflakeQuery</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">sqlText</span><span class="token operator">:</span> string</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>SnowflakeResponse<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> baseUrl <span class="token operator">=</span> <span class="token string">&quot;http://localhost:5173&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>baseUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/snow</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">query</span><span class="token operator">:</span> sqlText <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\uCFFC\uB9AC \uC2E4\uD589\uC5D0 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token literal-property property">data</span><span class="token operator">:</span> unknown <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> data <span class="token keyword">as</span> SnowflakeResponse<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\uD074\uB77C\uC774\uC5B8\uD2B8\uC5D0\uC11C \uACB0\uACFC\uB97C \uC0AC\uC6A9\uD574 \uBD05\uC2DC\uB2E4: sumbit \uD568\uC218\uB294 \uAE30\uBCF8\uC801\uC73C\uB85C cortex \uD568\uC218\uAC00 \uC608\uC0C1\uD558\uB294 \uBA54\uC2DC\uC9C0 \uBC30\uC5F4\uC744 \uD615\uC2DD\uD654\uD558\uACE0 \uBA54\uC2DC\uC9C0 \uC0C1\uD0DC\uB97C \uC124\uC815\uD558\uC5EC \uD45C\uC2DC\uD560 \uC218 \uC788\uB3C4\uB85D\uD569\uB2C8\uB2E4.</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">handleSnowflakeSubmit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">inputMessage</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>inputMessage<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> newMessages <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span>messages<span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>messages<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">role</span><span class="token operator">:</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span> inputMessage<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token function">setMessages</span><span class="token punctuation">(</span>newMessages<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setInput</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> formattedMessages <span class="token operator">=</span> newMessages
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
      <span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{&#39;role&#39;: &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>m<span class="token punctuation">.</span>role<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;, &#39;content&#39;: &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>m<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&#39;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&#39;&#39;&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;}</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SELECT SNOWFLAKE.CORTEX.COMPLETE(&#39;mixtral-8x7b&#39;, [</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>formattedMessages<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">], {&#39;temperature&#39;: 1.7, &#39;max_tokens&#39;: 90});</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">executeSnowflakeQuery</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> any<span class="token punctuation">;</span>

    <span class="token keyword">const</span> responseKey <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>responseKey<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> assistantMessage <span class="token operator">=</span> response<span class="token punctuation">.</span>choices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>messages<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">setMessages</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token operator">...</span>newMessages<span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>newMessages<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">role</span><span class="token operator">:</span> <span class="token string">&quot;assistant&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">content</span><span class="token operator">:</span> assistantMessage<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\uCFFC\uB9AC \uC2E4\uD589 \uC911 \uC624\uB958 \uBC1C\uC0DD:&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      error <span class="token keyword">instanceof</span> <span class="token class-name">Error</span> <span class="token operator">&amp;&amp;</span>
      error<span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;You are rate limited&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setIsRateLimited</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setMessages</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token operator">...</span>newMessages<span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>newMessages<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token literal-property property">role</span><span class="token operator">:</span> <span class="token string">&quot;assistant&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">content</span><span class="token operator">:</span> error<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">setIsLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),H=e(`<ul><li>\uD3FC \uC694\uC18C: \uBC84\uD2BC\uC744 \uD074\uB9AD\uD588\uC744 \uB54C \uC704\uC5D0\uC11C \uC0DD\uC131\uD55C submit \uD568\uC218\uB97C \uD638\uCD9C\uD558\uB294 \uACF3\uC785\uB2C8\uB2E4.</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;fixed bottom-10 md:bottom-12 left-0 right-0 flex flex-col justify-center items-center mx-auto bg-transparent w-full z-10 border-none&quot;</span><span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span>form
            onSubmit<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

             <span class="token keyword">if</span> <span class="token punctuation">(</span>selectedModel <span class="token operator">===</span> <span class="token string">&quot;snowflake&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token function">handleSnowflakeSubmit</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
              
            <span class="token punctuation">}</span><span class="token punctuation">}</span>
            className<span class="token operator">=</span><span class="token string">&quot;bg-stone-900 dark:bg-gray-100 rounded-xl shadow-lg h-12 flex flex-row px-2 items-center w-full max-w-2xl&quot;</span>
          <span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;relative flex items-center w-full&quot;</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>input
                name<span class="token operator">=</span><span class="token string">&quot;message&quot;</span>
                value<span class="token operator">=</span><span class="token punctuation">{</span>input<span class="token punctuation">}</span>
                onChange<span class="token operator">=</span><span class="token punctuation">{</span>
                  handleInputChange
                <span class="token punctuation">}</span>
                maxLength<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">150</span><span class="token punctuation">}</span>
                autoFocus
                autoComplete<span class="token operator">=</span><span class="token string">&quot;off&quot;</span>
                disabled<span class="token operator">=</span><span class="token punctuation">{</span>isRateLimited<span class="token punctuation">}</span>
                placeholder<span class="token operator">=</span><span class="token string">&quot;\uC9C8\uBB38\uC744 \uC785\uB825\uD558\uC138\uC694...&quot;</span>
                className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cn</span><span class="token punctuation">(</span>
                  <span class="token string">&quot;bg-transparent text-white dark:text-black placeholder:text-gray-400 ring-0 outline-none resize-none py-2.5 px-2 font-mono text-sm h-10 w-full transition-all duration-300&quot;</span><span class="token punctuation">,</span>
                  <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;cursor-not-allowed&quot;</span><span class="token operator">:</span> isRateLimited<span class="token punctuation">,</span>
                  <span class="token punctuation">}</span>
                <span class="token punctuation">)</span><span class="token punctuation">}</span>
              <span class="token operator">/</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;flex items-center&quot;</span><span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>button
                  type<span class="token operator">=</span><span class="token string">&quot;submit&quot;</span>
                  disabled<span class="token operator">=</span><span class="token punctuation">{</span>isLoading <span class="token operator">||</span> isRateLimited<span class="token punctuation">}</span>
                  className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">cn</span><span class="token punctuation">(</span>
                    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">text-white dark:text-black dark:bg-gray-100 rounded-lg hover:bg-white/25 focus:bg-white/25 w-8 h-8 aspect-square flex items-center justify-center ring-0 outline-0</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
                    <span class="token punctuation">{</span>
                      <span class="token string-property property">&quot;cursor-not-allowed&quot;</span><span class="token operator">:</span> isRateLimited<span class="token punctuation">,</span>
                    <span class="token punctuation">}</span>
                  <span class="token punctuation">)</span><span class="token punctuation">}</span>
                  aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token string">&quot;\uBA54\uC2DC\uC9C0 \uC804\uC1A1&quot;</span>
                <span class="token operator">&gt;</span>
                  <span class="token punctuation">{</span>isLoading <span class="token operator">?</span> <span class="token punctuation">(</span>
                    <span class="token operator">&lt;</span>Loader2 className<span class="token operator">=</span><span class="token string">&quot;animate-spin&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                  <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
                    <span class="token operator">&lt;</span>CornerDownLeft size<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">16</span><span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">&quot;-ml-px&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot; &quot;</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\uBA54\uC2DC\uC9C0 \uD45C\uC2DC: \uBA54\uC2DC\uC9C0 \uBC30\uC5F4\uC744 \uB9E4\uD551\uD558\uACE0 \uC0AC\uC6A9\uC790 \uB610\uB294 \uB3C4\uC6B0\uBBF8 \uBA54\uC2DC\uC9C0\uC5D0 \uB530\uB77C \uC2A4\uD0C0\uC77C\uC744 \uC9C0\uC815\uD569\uB2C8\uB2E4.</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> messages<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
              <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">{</span>m<span class="token punctuation">.</span>id<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token operator">&gt;</span>
                <span class="token punctuation">{</span>m<span class="token punctuation">.</span>role <span class="token operator">===</span> <span class="token string">&quot;user&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>UserMessage content<span class="token operator">=</span><span class="token punctuation">{</span>m<span class="token punctuation">.</span>content<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">}</span>
                <span class="token punctuation">{</span>m<span class="token punctuation">.</span>role <span class="token operator">===</span> <span class="token string">&quot;assistant&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
                  <span class="token operator">&lt;</span>BotMessage content<span class="token operator">=</span><span class="token punctuation">{</span>m<span class="token punctuation">.</span>content<span class="token punctuation">}</span> className<span class="token operator">=</span><span class="token string">&quot;antialiased&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
                <span class="token punctuation">)</span><span class="token punctuation">}</span>
                <span class="token operator">&lt;</span>div ref<span class="token operator">=</span><span class="token punctuation">{</span>messagesEndRef<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><ins class="adsbygoogle" style="display:block;" data-ad-client="ca-pub-4877378276818686" data-ad-slot="9743150776" data-ad-format="auto" data-full-width-responsive="true"></ins></p>`,5),U=n("p",null,"\uC6B0\uB9AC\uB294 Snowflake\uC758 Cortex \uC704\uC5D0 \uAD6C\uCD95\uB41C ChatGPT\uC640 \uBE44\uC2B7\uD55C \uC6F9\uC0AC\uC774\uD2B8\uB97C \uAC16\uACE0 \uC788\uC5B4\uC694.",-1),D=n("h2",{id:"\u110C\u1165\u11AB\u110E\u1166-\u1107\u1162\u1111\u1169\u1103\u116C\u11AB-\u110F\u1169\u1103\u1173\u1105\u1173\u11AF-\u1112\u116A\u11A8\u110B\u1175\u11AB\u1112\u1161\u1109\u1166\u110B\u116D",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u110C\u1165\u11AB\u110E\u1166-\u1107\u1162\u1111\u1169\u1103\u116C\u11AB-\u110F\u1169\u1103\u1173\u1105\u1173\u11AF-\u1112\u116A\u11A8\u110B\u1175\u11AB\u1112\u1161\u1109\u1166\u110B\u116D","aria-hidden":"true"},"#"),s(" \uC804\uCCB4 \uBC30\uD3EC\uB41C \uCF54\uB4DC\uB97C \uD655\uC778\uD558\uC138\uC694")],-1),K={href:"https://github.com/kaarthik108/ohno",target:"_blank",rel:"noopener noreferrer"},W={href:"https://ohno-1sq.pages.dev/",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,"\uB354 \uB9CE\uC740 \uD1B5\uCC30\uB825 \uC788\uB294 \uCF58\uD150\uCE20\uB97C \uC704\uD574 \uD314\uB85C\uC6B0\uD558\uACE0 \uC800\uC640 \uD568\uAED8 \uC624\uD508\uC18C\uC2A4 \uC138\uACC4\uB97C \uD0D0\uD5D8\uD574\uBCF4\uC138\uC694!",-1),z=n("p",null,[n("ins",{class:"adsbygoogle",style:{display:"block"},"data-ad-client":"ca-pub-4877378276818686","data-ad-slot":"9743150776","data-ad-format":"auto","data-full-width-responsive":"true"})],-1),$=n("ul",null,[n("li",null,"k01.dev"),n("li",null,"Medium: Kaarthikandavar"),n("li",null,"X: Kaarthikcodes"),n("li",null,"LinkedIn: Kaarthik")],-1);function F(G,Q){const l=u("ExternalLinkIcon");return a(),r("div",null,[v,m,b,n("p",null,[s("\uC6F9 \uC0AC\uC774\uD2B8\uB85C \uBC14\uB85C \uC774\uB3D9\uD558\uB824\uBA74 \u2014 "),n("a",g,[s("https://ohno-1sq.pages.dev"),c(l)])]),y,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),f,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),h,w,_,q,x,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),S,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),C,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),j,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),A,M,E,L,R,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),I,N,P,T,O,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),B,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),H,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),U,D,n("ul",null,[n("li",null,[s("Github: "),n("a",K,[s("https://github.com/kaarthik108/ohno"),c(l)])]),n("li",null,[s("\uC6F9\uC0AC\uC774\uD2B8: "),n("a",W,[s("https://ohno-1sq.pages.dev/"),c(l)])])]),V,z,(a(),t(o("script"),null,{default:p(()=>[s(" (adsbygoogle = window.adsbygoogle || []).push({}); ")]),_:1})),$])}var an=i(d,[["render",F],["__file","index.html.vue"]]);export{an as default};
